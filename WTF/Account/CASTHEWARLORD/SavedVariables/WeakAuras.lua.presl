
WeakAurasSaved = {
	["dynamicIconCache"] = {
		["Avenging Wrath"] = {
			[31884] = 135875,
			[294027] = 135875,
			[31842] = 135875,
		},
		["Gathering Clouds"] = {
			[215294] = "Interface\\Icons\\ability_shawaterelemental_swirl",
		},
		["Shadow Word: Pain"] = {
			[589] = 136207,
		},
		["Shrunk"] = {
			[284168] = 236446,
		},
		["Backdraft"] = {
			[117828] = 236290,
		},
		["Touch of Corruption"] = {
			[209469] = "Interface\\Icons\\Spell_DeathKnight_BloodPlague",
		},
		["Frozen Soul"] = {
			[204957] = 236208,
		},
		["Unholy Strength"] = {
			[53365] = 135882,
		},
		["Empowered Life Tap"] = {
			[235156] = 136171,
		},
		["Power of the Dark Side"] = {
			[198069] = 1394892,
		},
		["Incarnation: Chosen of Elune"] = {
			[102560] = "Interface\\Icons\\spell_druid_incarnation",
		},
		["Purge the Wicked"] = {
			[204213] = 236216,
		},
		["Divine Protection"] = {
			[498] = "Interface\\Icons\\spell_holy_divineprotection",
		},
		["Sign of the Dragon"] = {
			[225753] = 656166,
		},
		["Mind Flay"] = {
			[208697] = "INTERFACE\\ICONS\\spell_shadow_mindflay",
		},
		["Sign of the Hippo"] = {
			[225749] = 1338948,
		},
		["Anti-Magic Shell"] = {
			[48707] = 136120,
		},
		["Sign of the Hare"] = {
			[225752] = 1338949,
		},
		["Frost Fever"] = {
			[55095] = 237522,
		},
		["Battle Cry"] = {
			[1719] = 458972,
		},
		["Mongoose Fury"] = {
			[190931] = 1376044,
		},
		["Rage of the Sleeper"] = {
			[200851] = 1129695,
		},
		["Shield Wall"] = {
			[871] = 132362,
		},
		["Icy Talons"] = {
			[194879] = 252994,
		},
		["Holy Avenger"] = {
			[105809] = "Interface\\Icons\\ability_paladin_holyavenger",
		},
		["Pillar of Frost"] = {
			[51271] = 458718,
		},
		["Beacon of Faith"] = {
			[156910] = 1030095,
		},
		["Overpower"] = {
			[7384] = 132223,
		},
		["Bone Shield"] = {
			[195181] = 458717,
		},
		["Innervate"] = {
			[29166] = 136048,
		},
		["Wrath of Consumption"] = {
			[199646] = 135888,
		},
		["Killing Machine"] = {
			[51124] = "Interface\\Icons\\INV_Sword_122",
		},
		["Shield Block"] = {
			[132404] = 132110,
		},
		["Incarnation: Guardian of Ursoc"] = {
			[102558] = 571586,
		},
		["Bonestorm"] = {
			[194844] = 342917,
		},
		["Volatile Rot"] = {
			[204463] = "Interface\\Icons\\Ability_Rogue_DeviousPoisons",
		},
		["Fixate"] = {
			[210099] = "Interface\\Icons\\ability_fixated_state_red",
		},
		["Frenzied Regeneration"] = {
			[22842] = 132091,
		},
		["Virulent Plague"] = {
			[191587] = 132099,
		},
		["Runic Corruption"] = {
			[51460] = 252272,
		},
		["Crimson Scourge"] = {
			[81141] = 236305,
		},
		["Infusion of Light"] = {
			[54149] = 236254,
		},
		["Spell Reflection"] = {
			[23920] = 132361,
		},
		["Ignore Pain"] = {
			[190456] = 1377132,
		},
		["Colossus Smash"] = {
			[208086] = 464973,
		},
		["Aspect of the Eagle"] = {
			[186289] = "Interface\\Icons\\spell_hunter_aspectoftheironhawk",
		},
		["Teachings of the Monastery"] = {
			[202090] = 611422,
		},
		["Divine Steed"] = {
			[221886] = "Interface\\Icons\\ability_paladin_divinesteed",
		},
		["Havoc"] = {
			[80240] = 460695,
		},
		["Cat Form"] = {
			[768] = 132115,
		},
		["Beacon of Virtue"] = {
			[200025] = "Interface\\Icons\\ability_paladin_beaconofinsight",
		},
		["Vampiric Blood"] = {
			[55233] = 136168,
		},
		["Umbilicus Eternus"] = {
			[193249] = 1392546,
			[193320] = 1392546,
		},
		["In For The Kill"] = {
			[248622] = 1029718,
		},
		["Enrage"] = {
			[184362] = 136224,
		},
		["Beast Cleave"] = {
			[118455] = 461121,
		},
		["Rune Tap"] = {
			[194679] = "Interface\\Icons\\Spell_DeathKnight_RuneTap",
		},
		["Death and Decay"] = {
			[188290] = "Interface\\Icons\\Spell_Shadow_DeathAndDecay",
		},
		["Concordance of the Legionfall"] = {
			[242584] = 1585421,
			[243096] = 1585421,
			[242586] = 1585421,
			[242583] = 1585421,
		},
		["Power of the Archdruid"] = {
			[189877] = 1033482,
		},
		["Festering Wound"] = {
			[194310] = 1129420,
		},
		["Solar Empowerment"] = {
			[164545] = "Interface\\Icons\\spell_nature_wrathv2",
		},
		["Rime"] = {
			[59052] = 135833,
		},
		["Blood Plague"] = {
			[55078] = "Interface\\Icons\\Spell_DeathKnight_BloodPlague",
		},
		["Breath of Sindragosa"] = {
			[152279] = 1029007,
		},
		["Galactic Guardian"] = {
			[213708] = 135853,
		},
		["Vampiric Aura"] = {
			[238698] = 1035050,
		},
		["Bear Form"] = {
			[5487] = 132276,
		},
		["Soul Harvest"] = {
			[196098] = 463284,
		},
		["Enlisted"] = {
			[269083] = 1455894,
		},
		["Rapture"] = {
			[47536] = 237548,
		},
		["Demonic Empowerment"] = {
			[193396] = 1378283,
		},
		["Maraad's Dying Breath"] = {
			[234862] = 460953,
		},
		["Clearcasting"] = {
			[16870] = 136170,
		},
		["Beacon of Light"] = {
			[53563] = 236247,
		},
		["Rot"] = {
			[203096] = "Interface\\Icons\\Spell_Shadow_CreepingPlague",
		},
		["Barkskin"] = {
			[22812] = 136097,
		},
		["Dancing Rune Weapon"] = {
			[81256] = 135277,
		},
		["Remorseless Winter"] = {
			[196770] = 538770,
		},
		["Stormkeeper"] = {
			[205495] = 1248972,
		},
		["Ironfur"] = {
			[192081] = "Interface\\Icons\\ability_druid_ironfur",
		},
		["Demonic Power"] = {
			[196099] = 538443,
		},
		["Blood Shield"] = {
			[77535] = 237517,
		},
		["Bolstering Shout"] = {
			[275826] = 132360,
		},
		["Siegebreaker"] = {
			[280773] = 294382,
		},
		["Lord of Flames"] = {
			[226802] = 136219,
		},
		["Divine Shield"] = {
			[642] = "Interface\\Icons\\spell_holy_divineshield",
		},
		["Tyr's Deliverance"] = {
			[200652] = "Interface\\Icons\\inv_mace_2h_artifactsilverhand_d_01",
			[200654] = "Interface\\Icons\\inv_mace_2h_artifactsilverhand_d_01",
		},
		["Trauma"] = {
			[215537] = 132364,
		},
		["Power of the Silver Hand"] = {
			[200657] = 236248,
		},
		["Lacerate"] = {
			[185855] = 1376042,
			[220874] = "Interface\\Icons\\ability_skeer_bloodletting",
		},
		["Moonfire"] = {
			[164812] = 136096,
			[218797] = 136096,
		},
		["Quake"] = {
			[240447] = 136025,
		},
		["Sunfire"] = {
			[164815] = "Interface\\Icons\\Ability_Mage_FireStarter",
		},
		["Lifebloom"] = {
			[33763] = 134206,
		},
		["Necrotic Venom"] = {
			[215449] = "Interface\\Icons\\Ability_Creature_Poison_05",
			[215460] = "Interface\\Icons\\Ability_Creature_Poison_05",
		},
		["Flametongue"] = {
			[194084] = 135814,
		},
		["Burning Rush"] = {
			[111400] = 538043,
		},
		["Icebound Fortitude"] = {
			[48792] = 237525,
		},
		["Survival Instincts"] = {
			[61336] = 236169,
		},
		["Deadwind Harvester"] = {
			[216708] = 1060569,
		},
		["Dark Succor"] = {
			[101568] = 878217,
		},
		["Recklessness"] = {
			[1719] = 458972,
		},
		["Stolen Power"] = {
			[211583] = 1122139,
		},
		["Whirlwind"] = {
			[85739] = 132369,
		},
		["Compounding Horror"] = {
			[199281] = 1002600,
		},
		["Flame Shock"] = {
			[188389] = 135813,
		},
		["Tormented Souls"] = {
			[216695] = 1281092,
		},
		["Demonic Calling"] = {
			[205146] = 460856,
		},
		["Judgment of Light"] = {
			[196941] = "Interface\\Icons\\Spell_Holy_DivineProvidence",
		},
		["Mok'Nathal Tactics"] = {
			[201081] = 970886,
		},
		["Rule of Law"] = {
			[214202] = "Interface\\Icons\\ability_paladin_longarmofthelaw",
		},
		["Aura Mastery"] = {
			[31821] = 135872,
		},
		["Tampering!"] = {
			[286105] = 2115322,
		},
		["Ironbark"] = {
			[102342] = 572025,
		},
		["Lunar Empowerment"] = {
			[164547] = "Interface\\Icons\\Spell_Arcane_StarFire",
		},
		["Last Stand"] = {
			[12975] = 135871,
		},
		["Caltrops"] = {
			[194279] = "Interface\\Icons\\ability_ironmaidens_incindiarydevice",
		},
	},
	["displays"] = {
		["MOLO: Inhale Vapors (E)"] = {
			["iconSource"] = 0,
			["authorOptions"] = {
			},
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 262092,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Inhale Vapors",
						["names"] = {
							"Inhale Vapors", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							262092, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["subeventSuffix"] = "_CAST_START",
						["unevent"] = "auto",
						["genericShowOn"] = "showOnActive",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "Enrage",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Accidental Presidency",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMLEFT",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["use_class"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
						["HUNTER"] = true,
						["SHAMAN"] = true,
						["DRUID"] = true,
						["PALADIN"] = true,
						["PRIEST"] = true,
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeType"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["preset"] = "pulse",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["conditions"] = {
			},
			["regionType"] = "icon",
			["xOffset"] = 0,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["parent"] = "M+ - Purgeable Buffs",
			["stickyDuration"] = false,
			["cooldownTextDisabled"] = false,
			["zoom"] = 0,
			["auto"] = false,
			["config"] = {
			},
			["id"] = "MOLO: Inhale Vapors (E)",
			["frameStrata"] = 1,
			["alpha"] = 1,
			["width"] = 35,
			["anchorFrameType"] = "SCREEN",
			["uid"] = "hT1ACyCPaeK",
			["inverse"] = false,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayIcon"] = 236310,
			["cooldown"] = true,
			["icon"] = true,
		},
		["Cooldowns on RaidFrames Shaman"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text1Enabled"] = true,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["config"] = {
			},
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["spellIds"] = {
						},
						["auraspellids"] = {
							"108271", -- [1]
							"98007", -- [2]
							"207498", -- [3]
							"118337", -- [4]
						},
						["useExactSpellId"] = true,
						["unit"] = "group",
						["names"] = {
						},
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["wordWrap"] = "WordWrap",
			["stickyDuration"] = false,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["text1Point"] = "BOTTOMRIGHT",
			["glowLines"] = 8,
			["text2Font"] = "Friz Quadrata TT",
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["text1Font"] = "Friz Quadrata TT",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["width"] = 20,
			["displayIcon"] = 841384,
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["alpha"] = 1,
			["glow"] = false,
			["tocversion"] = 80300,
			["semver"] = "1.0.8",
			["icon"] = true,
			["zoom"] = 0,
			["text1"] = "%s",
			["cooldownTextEnabled"] = false,
			["useglowColor"] = false,
			["justify"] = "LEFT",
			["text2"] = "%p",
			["id"] = "Cooldowns on RaidFrames Shaman",
			["uid"] = "Sotm1xoljkZ",
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["text1Containment"] = "INSIDE",
			["automaticWidth"] = "Auto",
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["TSTH: Embryonic"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 269896,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Embryonic Vigor", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							269896, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Embryonic Vigor",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "mMe101oOKvw",
			["id"] = "TSTH: Embryonic",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = "236549",
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["Cooldowns on RaidFrames Deathknight"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text1Enabled"] = true,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["config"] = {
			},
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["useExactSpellId"] = true,
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["auraspellids"] = {
							"194679", -- [1]
							"48707", -- [2]
							"55233", -- [3]
							"48792", -- [4]
							"194844", -- [5]
						},
						["unit"] = "group",
						["names"] = {
						},
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["tocversion"] = 80300,
			["zoom"] = 0,
			["stickyDuration"] = false,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["automaticWidth"] = "Auto",
			["glowLines"] = 8,
			["text1Point"] = "BOTTOMRIGHT",
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["text1Font"] = "Friz Quadrata TT",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["width"] = 20,
			["wordWrap"] = "WordWrap",
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["useglowColor"] = false,
			["alpha"] = 1,
			["text2"] = "%p",
			["justify"] = "LEFT",
			["text2Font"] = "Friz Quadrata TT",
			["uid"] = "iNRFDQHR4Y0",
			["text1"] = "%s",
			["glow"] = false,
			["cooldownTextEnabled"] = false,
			["semver"] = "1.0.8",
			["displayIcon"] = 841384,
			["id"] = "Cooldowns on RaidFrames Deathknight",
			["authorOptions"] = {
			},
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["icon"] = true,
			["text1Containment"] = "INSIDE",
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["MOLO: Tectonic Barrier"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 263215,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Tectonic Barrier", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							263215, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Tectonic Barrier",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "gIa8HRfcIYL",
			["id"] = "MOLO: Tectonic Barrier",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 1385913,
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["Utility"] = {
			["outline"] = "OUTLINE",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayText"] = " %s",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "event",
			["url"] = "https://wago.io/M+Timer/79",
			["actions"] = {
				["start"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "aura_env.keyslot = aura_env.config[\"KeySlot\"]\naura_env.gossipS = aura_env.config[\"GossipS\"]\naura_env.blacklist = {\n    -- [123] = true\n}\n\n\naura_env.popup = function()\n    for index = 1, STATICPOPUP_NUMDIALOGS do\n        local frame = _G[\"StaticPopup\"..index]\n        if frame and frame:IsShown() then\n            return true\n        end\n    end\n    return false\nend\n\n\nlocal function decRound(num, idp)\n    local mult = 10^(idp or 0)\n    return math.floor(num * mult + 0.5) / mult\nend\n\n\n\nlocal _, affixes = C_ChallengeMode.GetActiveKeystoneInfo()\nlocal teeming = false\nfor _, affixID in ipairs(affixes) do\n    if affixID == 5 then\n        teeming = true\n    end\nend\n\nlocal tooltip = aura_env.config[\"Tooltip\"]\nlocal function addtotooltip(self, unit)\n    local GUID = UnitGUID(\"mouseover\")\n    if GUID and MDT then\n        local npcID = select(6, strsplit(\"-\", GUID))\n        local count\n        local max\n        if teeming then\n            max, count = select(3, MDT:GetEnemyForces(tonumber(npcID)))\n        else\n            count, max = MDT:GetEnemyForces(tonumber(npcID))\n        end\n        if count and max and count ~= 0 and max ~= 0 then\n            local percent = decRound((count/max)*100, 2)..\"%\"\n            \n            local string = (tooltip  == 4 and count..\" (\"..percent..\")\") or (tooltip  == 3 and percent) or (tooltip  == 2 and count)\n            if string then\n                GameTooltip:AppendText(\" - \"..string)\n            end\n        end\n    end\nend\n\n\n\nif not aura_env.region.addtotooltip then\n    aura_env.region.addtotooltip = true\n    GameTooltip:HookScript(\"OnTooltipSetUnit\", addtotooltip)\n    --  hooksecurefunc(GameTooltip, \"OnTooltipSetUnit\", addtotooltip)\nend\n\n\n\n",
					["do_custom"] = true,
				},
				["finish"] = {
					["hide_all_glows"] = false,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["custom_hide"] = "timed",
						["type"] = "custom",
						["duration"] = "1",
						["custom_type"] = "event",
						["subeventPrefix"] = "SPELL",
						["use_absorbMode"] = true,
						["event"] = "Chat Message",
						["unit"] = "player",
						["unevent"] = "timed",
						["custom"] = "function(e, ...)\n    if e == \"CHALLENGE_MODE_KEYSTONE_RECEPTABLE_OPEN\" and aura_env.keyslot then\n        local index = select(3, GetInstanceInfo())\n        if index == 8 or index == 23 then\n            for bagID = 0, NUM_BAG_SLOTS do\n                for invID = 1, GetContainerNumSlots(bagID) do\n                    local itemID = GetContainerItemID(bagID, invID)\n                    if itemID and (itemID == 158923 or itemID == 151086) then\n                        PickupContainerItem(bagID, invID)\n                        C_Timer.After(0.1, function()\n                                if CursorHasItem() then\n                                    C_ChallengeMode.SlotKeystone()\n                                end\n                        end)\n                    end\n                end\n            end\n        end\n    elseif e == \"GOSSIP_SHOW\" and aura_env.gossipS then\n        local GUID = UnitGUID(\"npc\")\n        local id = select(6, strsplit(\"-\", GUID))\n        id = tonumber(id)\n        if not aura_env.blacklist[id] then\n            local title = {GetGossipOptions()}\n            for i = 1, GetNumGossipOptions() do\n                if title[i*2] == \"gossip\" then\n                    local popupWasShown = aura_env.popup()\n                    SelectGossipOption(i)\n                    local popupIsShown = aura_env.popup()\n                    if popupIsShown then\n                        if not popupWasShown then\n                            StaticPopup1Button1:Click()\n                            CloseGossip()\n                        end\n                    else\n                        CloseGossip()\n                    end\n                    break\n                end\n            end\n        end\n    end\nend",
						["spellIds"] = {
						},
						["events"] = "GOSSIP_SHOW CHALLENGE_MODE_KEYSTONE_RECEPTABLE_OPEN",
						["names"] = {
						},
						["use_unit"] = true,
						["subeventSuffix"] = "_CAST_START",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["wordWrap"] = "WordWrap",
			["font"] = "Friz Quadrata TT",
			["version"] = 79,
			["subRegions"] = {
			},
			["load"] = {
				["difficulty"] = {
					["single"] = "mythic",
					["multi"] = {
						["mythic"] = true,
						["challenge"] = true,
					},
				},
				["use_size"] = true,
				["use_never"] = false,
				["use_difficulty"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["party"] = true,
					},
				},
			},
			["displayText_format_s_format"] = "none",
			["fontSize"] = 12,
			["shadowXOffset"] = 1,
			["conditions"] = {
			},
			["regionType"] = "text",
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["preferToUpdate"] = false,
			["xOffset"] = 0,
			["authorOptions"] = {
				{
					["type"] = "toggle",
					["key"] = "KeySlot",
					["default"] = true,
					["useDesc"] = false,
					["name"] = "Auto Keystone Slot",
					["width"] = 1,
				}, -- [1]
				{
					["type"] = "toggle",
					["key"] = "GossipS",
					["default"] = false,
					["useDesc"] = false,
					["name"] = "Automatic Gossip Selection",
					["width"] = 1,
				}, -- [2]
				{
					["desc"] = "Changing this requires a Reload",
					["type"] = "select",
					["default"] = 1,
					["name"] = "Display Count on GameTooltip",
					["values"] = {
						"Disabled", -- [1]
						"Count Only", -- [2]
						"Percent Only", -- [3]
						"Count&Percent", -- [4]
					},
					["useDesc"] = true,
					["key"] = "Tooltip",
					["width"] = 1,
				}, -- [3]
			},
			["shadowYOffset"] = -1,
			["justify"] = "LEFT",
			["tocversion"] = 80300,
			["id"] = "Utility",
			["selfPoint"] = "BOTTOM",
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["config"] = {
				["KeySlot"] = true,
				["Tooltip"] = 4,
				["GossipS"] = true,
			},
			["uid"] = "KlL(AGrwOwh",
			["automaticWidth"] = "Auto",
			["semver"] = "1.2.18",
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["fixedWidth"] = 200,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["parent"] = "M+ - Timer",
		},
		["Buff BS"] = {
			["iconSource"] = 0,
			["authorOptions"] = {
			},
			["yOffset"] = 100,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["url"] = "https://wago.io/S1u7ESyrX/1",
			["actions"] = {
				["start"] = {
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["debuffType"] = "HELPFUL",
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["unevent"] = "auto",
						["unit"] = "group",
						["subeventPrefix"] = "SPELL",
						["genericShowOn"] = "showOnActive",
						["use_specific_unit"] = false,
						["spellIds"] = {
						},
						["events"] = "WA_DELAYED_PLAYER_ENTERING_WORLD, UNIT_AURA, GROUP_ROSTER_UPDATE, PLAYER_REGEN_ENABLED, PLAYER_TARGET_CHANGED",
						["custom"] = "function()\n    for unit in WA_IterateGroupMembers() do\n        if UnitExists(unit) then\n            if not UnitIsDeadOrGhost(unit) and IsItemInRange(41058, unit) then\n                if WA_GetUnitBuff(unit, 6673) == nil then\n                    return true\n                end\n            end\n        end\n    end\nend",
						["custom_type"] = "status",
						["check"] = "event",
						["event"] = "Chat Message",
						["names"] = {
						},
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
						["custom"] = "function()\n    for unit in WA_IterateGroupMembers() do\n        if UnitExists(unit) then\n            if not UnitIsDeadOrGhost(unit) and IsItemInRange(41058, unit) then\n                if WA_GetUnitBuff(unit, 6673) == nil then\n                    return false\n                end\n            end\n        end\n    end\n    return true\nend",
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["version"] = 1,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "BUFF",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "OUTER_BOTTOM",
					["text_fontSize"] = 24,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 64,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["class"] = {
					["single"] = "WARRIOR",
					["multi"] = {
					},
				},
				["use_class"] = true,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["use_vehicle"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["use_petbattle"] = false,
				["use_combat"] = false,
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
			},
			["config"] = {
			},
			["icon"] = true,
			["cooldownEdge"] = false,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["regionType"] = "icon",
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["preset"] = "alphaPulse",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayIcon"] = 132333,
			["parent"] = "A Kureq UI Customizations",
			["cooldownTextDisabled"] = false,
			["zoom"] = 0,
			["auto"] = false,
			["width"] = 64,
			["id"] = "Buff BS",
			["frameStrata"] = 1,
			["alpha"] = 1,
			["anchorFrameType"] = "SCREEN",
			["semver"] = "1.0.0",
			["uid"] = "xLYhJd0LhFq",
			["inverse"] = false,
			["stickyDuration"] = false,
			["conditions"] = {
			},
			["cooldown"] = false,
			["xOffset"] = 200,
		},
		["Cooldowns on RaidFrames Warrior"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text2Font"] = "Friz Quadrata TT",
			["keepAspectRatio"] = false,
			["wordWrap"] = "WordWrap",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1Point"] = "BOTTOMRIGHT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["config"] = {
			},
			["displayIcon"] = 841384,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["useglowColor"] = false,
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["tocversion"] = 80300,
			["uid"] = "Klj26xyg2Ct",
			["stickyDuration"] = false,
			["authorOptions"] = {
			},
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["text1Containment"] = "INSIDE",
			["glowLines"] = 8,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["selfPoint"] = "CENTER",
			["text1Font"] = "Friz Quadrata TT",
			["width"] = 20,
			["glow"] = false,
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["alpha"] = 1,
			["text2"] = "%p",
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
						},
						["spellIds"] = {
						},
						["auraspellids"] = {
							"197690", -- [1]
							"118038", -- [2]
							"184364", -- [3]
							"871", -- [4]
							"23920", -- [5]
							"132404", -- [6]
							"12975", -- [7]
							"190456", -- [8]
						},
						["useExactSpellId"] = true,
						["unit"] = "group",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["semver"] = "1.0.8",
			["icon"] = true,
			["zoom"] = 0,
			["text1"] = "%s",
			["font"] = "Friz Quadrata TT",
			["automaticWidth"] = "Auto",
			["justify"] = "LEFT",
			["cooldownTextEnabled"] = false,
			["id"] = "Cooldowns on RaidFrames Warrior",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["text1Enabled"] = true,
			["fixedWidth"] = 200,
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["ATDZ: Fanatic's Rage (E)"] = {
			["iconSource"] = 0,
			["authorOptions"] = {
			},
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 255824,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Fanatic's Rage",
						["names"] = {
							"Fanatic's Rage", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							255824, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["unevent"] = "auto",
						["custom_type"] = "event",
						["genericShowOn"] = "showOnActive",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "Enrage",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Accidental Presidency",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMLEFT",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["use_class"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
						["HUNTER"] = true,
						["SHAMAN"] = true,
						["DRUID"] = true,
						["PALADIN"] = true,
						["PRIEST"] = true,
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["regionType"] = "icon",
			["icon"] = true,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["xOffset"] = 0,
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "WH2ukH01y3g",
			["id"] = "ATDZ: Fanatic's Rage (E)",
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["width"] = 35,
			["frameStrata"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 136088,
			["cooldown"] = true,
			["parent"] = "M+ - Purgeable Buffs",
		},
		["Cooldowns on RaidFrames Mage"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text2Font"] = "Friz Quadrata TT",
			["keepAspectRatio"] = false,
			["wordWrap"] = "WordWrap",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["uid"] = "MH9GSGibtPm",
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["useExactSpellId"] = true,
						["event"] = "Health",
						["names"] = {
						},
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["auraspellids"] = {
							"45438", -- [1]
						},
						["unit"] = "group",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["zoom"] = 0,
			["stickyDuration"] = false,
			["authorOptions"] = {
			},
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["tocversion"] = 80300,
			["glowLines"] = 8,
			["text1Point"] = "BOTTOMRIGHT",
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["text1Containment"] = "INSIDE",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["width"] = 20,
			["text1Font"] = "Friz Quadrata TT",
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["icon"] = true,
			["selfPoint"] = "CENTER",
			["text2"] = "%p",
			["justify"] = "LEFT",
			["text1Enabled"] = true,
			["alpha"] = 1,
			["text1"] = "%s",
			["glow"] = false,
			["cooldownTextEnabled"] = false,
			["semver"] = "1.0.8",
			["displayIcon"] = 841384,
			["id"] = "Cooldowns on RaidFrames Mage",
			["automaticWidth"] = "Auto",
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["useglowColor"] = false,
			["config"] = {
			},
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["MOLO: Azerite Injection"] = {
			["iconSource"] = 0,
			["authorOptions"] = {
			},
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 262947,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Azerite Injection", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							262947, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Azerite Injection",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["desaturate"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowType"] = "buttonOverlay",
					["glowLength"] = 10,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["useGlowColor"] = false,
					["glow"] = true,
					["glowThickness"] = 1,
					["glowScale"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["selfPoint"] = "CENTER",
			["conditions"] = {
			},
			["regionType"] = "icon",
			["parent"] = "M+ - Purgeable Buffs",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["xOffset"] = 0,
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["config"] = {
			},
			["id"] = "MOLO: Azerite Injection",
			["frameStrata"] = 1,
			["alpha"] = 1,
			["width"] = 35,
			["anchorFrameType"] = "SCREEN",
			["uid"] = "tlZ8jE7oDhs",
			["inverse"] = false,
			["stickyDuration"] = false,
			["displayIcon"] = "237032",
			["cooldown"] = true,
			["icon"] = true,
		},
		["Grid2ProfileSwap"] = {
			["outline"] = "OUTLINE",
			["xOffset"] = 0,
			["displayText"] = "",
			["shadowYOffset"] = -1,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "stateupdate",
						["buffShowOn"] = "showOnActive",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["unit"] = "player",
						["spellIds"] = {
						},
						["custom"] = "function()\n    local profile = Grid2.db:GetCurrentProfile()\n    local grp, rd = \"KGROUP\",\"KRAID\"\n    \n    if(UnitInRaid(\"player\")) then\n        if profile == grp then\n            Grid2.db:SetProfile(rd)\n        end\n    else\n        if profile == rd then\n            Grid2.db:SetProfile(grp)\n        end\n    end\nend",
						["names"] = {
						},
						["check"] = "event",
						["events"] = "PARTY_CONVERTED_TO_RAID, PARTY_MEMBERS_CHANGED,PLAYER_ENTERING_WORLD, GUILD_PARTY_STATE_UPDATED, PLAYER_ROLES_ASSIGNED, GROUP_ROSTER_UPDATE",
						["debuffType"] = "HELPFUL",
						["customVariables"] = "\n\n",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["selfPoint"] = "BOTTOM",
			["font"] = "Friz Quadrata TT",
			["load"] = {
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["size"] = {
					["multi"] = {
					},
				},
			},
			["fontSize"] = 12,
			["shadowXOffset"] = 1,
			["regionType"] = "text",
			["authorOptions"] = {
			},
			["wordWrap"] = "WordWrap",
			["justify"] = "LEFT",
			["config"] = {
			},
			["id"] = "Grid2ProfileSwap",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["fixedWidth"] = 200,
			["uid"] = "IyaOMpVcB)v",
			["yOffset"] = 0,
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["parent"] = "A Kureq UI Customizations",
		},
		["TOLD: Darkstep"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 258133,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Darkstep",
						["names"] = {
							"Darkstep", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							258133, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["unevent"] = "auto",
						["custom_type"] = "event",
						["genericShowOn"] = "showOnActive",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "ByFrHvM6twB",
			["id"] = "TOLD: Darkstep",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 136189,
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["UNDR: Warcry (E)"] = {
			["iconSource"] = 0,
			["authorOptions"] = {
			},
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 265081,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Warcry", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							265081, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Warcry",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "Enrage",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Accidental Presidency",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMLEFT",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["use_class"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
						["HUNTER"] = true,
						["SHAMAN"] = true,
						["DRUID"] = true,
						["PALADIN"] = true,
						["PRIEST"] = true,
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["regionType"] = "icon",
			["icon"] = true,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["xOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeType"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["preset"] = "pulse",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["cooldownTextDisabled"] = false,
			["zoom"] = 0,
			["auto"] = false,
			["uid"] = "D8IXNYKVseC",
			["id"] = "UNDR: Warcry (E)",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["parent"] = "M+ - Purgeable Buffs",
			["displayIcon"] = 132344,
			["cooldown"] = true,
			["desaturate"] = false,
		},
		["Stats"] = {
			["grow"] = "DOWN",
			["controlledChildren"] = {
				"Crit", -- [1]
				"Haste", -- [2]
				"Mastery", -- [3]
				"Versatility", -- [4]
			},
			["borderBackdrop"] = "Blizzard Tooltip",
			["xOffset"] = 10,
			["yOffset"] = -10,
			["anchorPoint"] = "TOPLEFT",
			["borderColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["space"] = 2,
			["url"] = "https://wago.io/NyLsOPQ4z/1",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["spellIds"] = {
						},
						["debuffType"] = "HELPFUL",
						["names"] = {
						},
						["unit"] = "player",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["columnSpace"] = 1,
			["radius"] = 200,
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["align"] = "LEFT",
			["stagger"] = 0,
			["version"] = 1,
			["height"] = 15.316223144531,
			["internalVersion"] = 40,
			["load"] = {
				["talent2"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["use_class"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["arcLength"] = 360,
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["rowSpace"] = 1,
			["animate"] = false,
			["useLimit"] = false,
			["scale"] = 1,
			["authorOptions"] = {
			},
			["border"] = false,
			["borderEdge"] = "Square Full White",
			["regionType"] = "dynamicgroup",
			["borderSize"] = 2,
			["limit"] = 5,
			["gridType"] = "RD",
			["sort"] = "none",
			["config"] = {
			},
			["borderOffset"] = 16,
			["uid"] = "bSiXtYRrPDF",
			["width"] = 154.25640869141,
			["id"] = "Stats",
			["gridWidth"] = 5,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["rotation"] = 0,
			["borderInset"] = 0,
			["constantFactor"] = "RADIUS",
			["selfPoint"] = "TOPLEFT",
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["fullCircle"] = true,
		},
		["Cooldowns on RaidFrames Rogue"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text2Font"] = "Friz Quadrata TT",
			["keepAspectRatio"] = false,
			["wordWrap"] = "WordWrap",
			["text1Containment"] = "INSIDE",
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["talent2"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["uid"] = "JobecCBb6Pz",
			["displayIcon"] = 841384,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["useExactSpellId"] = true,
						["event"] = "Health",
						["names"] = {
						},
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["auraspellids"] = {
							"1966", -- [1]
							"31224", -- [2]
							"5277", -- [3]
							"199754", -- [4]
							"45182", -- [5]
						},
						["unit"] = "group",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["tocversion"] = 80300,
			["zoom"] = 0,
			["stickyDuration"] = false,
			["authorOptions"] = {
			},
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["fixedWidth"] = 200,
			["glowLines"] = 8,
			["text1Point"] = "BOTTOMRIGHT",
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1Font"] = "Friz Quadrata TT",
			["width"] = 20,
			["config"] = {
			},
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["alpha"] = 1,
			["glow"] = false,
			["selfPoint"] = "CENTER",
			["semver"] = "1.0.8",
			["icon"] = true,
			["text1Enabled"] = true,
			["text1"] = "%s",
			["cooldownTextEnabled"] = false,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["justify"] = "LEFT",
			["text2"] = "%p",
			["id"] = "Cooldowns on RaidFrames Rogue",
			["automaticWidth"] = "Auto",
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["useglowColor"] = false,
			["desaturate"] = false,
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["BFA Dungeon - Targeted Spells 2"] = {
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["controlledChildren"] = {
				"Targeted Spells", -- [1]
				"BigIcon when targeted 2", -- [2]
				"Sound when a boss target you 2", -- [3]
			},
			["borderBackdrop"] = "Blizzard Tooltip",
			["authorOptions"] = {
			},
			["xOffset"] = 0,
			["border"] = false,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["borderSize"] = 16,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
				["groupOffset"] = true,
			},
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["borderEdge"] = "None",
			["url"] = "https://wago.io/BFADungeonTargetedSpells/45",
			["actions"] = {
				["start"] = {
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["unevent"] = "timed",
						["duration"] = "1",
						["event"] = "Health",
						["unit"] = "player",
						["spellIds"] = {
						},
						["debuffType"] = "HELPFUL",
						["subeventPrefix"] = "SPELL",
						["names"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["regionType"] = "group",
			["borderOffset"] = 5,
			["semver"] = "2.2.0",
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["id"] = "BFA Dungeon - Targeted Spells 2",
			["scale"] = 1,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["internalVersion"] = 40,
			["uid"] = "tfvNOUg3utR",
			["version"] = 45,
			["selfPoint"] = "BOTTOMLEFT",
			["config"] = {
			},
			["conditions"] = {
			},
			["load"] = {
				["talent2"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["use_class"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["borderInset"] = 11,
		},
		["Cooldowns on RaidFrames Monk"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["authorOptions"] = {
			},
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text1Enabled"] = true,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["uid"] = "4Tdms(vxPIS",
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
						},
						["spellIds"] = {
						},
						["auraspellids"] = {
							"122470", -- [1]
							"122783", -- [2]
							"122278", -- [3]
							"243435", -- [4]
							"120954", -- [5]
							"115176", -- [6]
							"215479", -- [7]
							"115295", -- [8]
							"116849", -- [9]
						},
						["useExactSpellId"] = true,
						["unit"] = "group",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["tocversion"] = 80300,
			["zoom"] = 0,
			["stickyDuration"] = false,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["text1Containment"] = "INSIDE",
			["glowLines"] = 8,
			["text2Font"] = "Friz Quadrata TT",
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["xOffset"] = 0,
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["width"] = 20,
			["wordWrap"] = "WordWrap",
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayIcon"] = 841384,
			["automaticWidth"] = "Auto",
			["text2"] = "%p",
			["justify"] = "LEFT",
			["text1Font"] = "Friz Quadrata TT",
			["useglowColor"] = false,
			["text1"] = "%s",
			["glow"] = false,
			["cooldownTextEnabled"] = false,
			["semver"] = "1.0.8",
			["icon"] = true,
			["id"] = "Cooldowns on RaidFrames Monk",
			["config"] = {
			},
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["text1Point"] = "BOTTOMRIGHT",
			["alpha"] = 1,
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["trumpet"] = {
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["controlledChildren"] = {
				"New 2", -- [1]
				"New 3", -- [2]
			},
			["borderBackdrop"] = "Blizzard Tooltip",
			["xOffset"] = 0,
			["border"] = false,
			["borderEdge"] = "None",
			["anchorPoint"] = "CENTER",
			["borderSize"] = 16,
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["scale"] = 1,
			["actions"] = {
				["start"] = {
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
						},
						["spellIds"] = {
						},
						["buffShowOn"] = "showOnActive",
						["unit"] = "player",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["regionType"] = "group",
			["internalVersion"] = 40,
			["yOffset"] = 0,
			["selfPoint"] = "BOTTOMLEFT",
			["id"] = "trumpet",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
				["groupOffset"] = true,
			},
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["authorOptions"] = {
			},
			["uid"] = "BLQjZ0Vcjcz",
			["borderOffset"] = 5,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["config"] = {
			},
			["conditions"] = {
			},
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["single"] = "PALADIN",
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["use_class"] = "true",
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["borderInset"] = 11,
		},
		["SGBR: Bolstering Shout"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 275826,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Bolstering Shout",
						["use_specific_unit"] = false,
						["unit"] = "target",
						["names"] = {
							"Bolstering Shout", -- [1]
						},
						["spellIds"] = {
							275826, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["unevent"] = "auto",
						["subeventSuffix"] = "_CAST_START",
						["genericShowOn"] = "showOnActive",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowType"] = "buttonOverlay",
					["glowLength"] = 10,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["useGlowColor"] = false,
					["glow"] = true,
					["glowThickness"] = 1,
					["glowScale"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["selfPoint"] = "CENTER",
			["displayIcon"] = 132360,
			["regionType"] = "icon",
			["parent"] = "M+ - Purgeable Buffs",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["desaturate"] = false,
			["cooldownTextDisabled"] = false,
			["zoom"] = 0,
			["auto"] = false,
			["config"] = {
			},
			["id"] = "SGBR: Bolstering Shout",
			["frameStrata"] = 1,
			["alpha"] = 1,
			["width"] = 35,
			["anchorFrameType"] = "SCREEN",
			["uid"] = "5QVp8XGv1TD",
			["inverse"] = false,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["cooldown"] = true,
			["icon"] = true,
		},
		["Cooldowns on RaidFrames Paladin"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["icon"] = true,
			["text2Font"] = "Friz Quadrata TT",
			["keepAspectRatio"] = false,
			["wordWrap"] = "WordWrap",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["uid"] = "0GkzoTUARDB",
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["automaticWidth"] = "Auto",
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["spellIds"] = {
						},
						["auraspellids"] = {
							"498", -- [1]
							"204018", -- [2]
							"6940", -- [3]
							"642", -- [4]
							"86659", -- [5]
							"132403", -- [6]
							"205191", -- [7]
							"199448", -- [8]
							"1022", -- [9]
						},
						["useExactSpellId"] = true,
						["unit"] = "group",
						["names"] = {
						},
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["cooldownEdge"] = true,
			["zoom"] = 0,
			["stickyDuration"] = false,
			["text1Containment"] = "INSIDE",
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["glowLines"] = 8,
			["selfPoint"] = "CENTER",
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["text1Font"] = "Friz Quadrata TT",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["width"] = 20,
			["useglowColor"] = false,
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1Point"] = "BOTTOMRIGHT",
			["displayIcon"] = 841384,
			["authorOptions"] = {
			},
			["semver"] = "1.0.8",
			["cooldownTextEnabled"] = false,
			["text1Enabled"] = true,
			["text1"] = "%s",
			["text2"] = "%p",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["justify"] = "LEFT",
			["glow"] = false,
			["id"] = "Cooldowns on RaidFrames Paladin",
			["tocversion"] = 80300,
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["config"] = {
			},
			["alpha"] = 1,
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["M+ - Timer"] = {
			["grow"] = "DOWN",
			["controlledChildren"] = {
				"Timer Bar", -- [1]
				"Bosses", -- [2]
				"Enemy Forces Bar", -- [3]
				"Background", -- [4]
				"Utility", -- [5]
			},
			["borderBackdrop"] = "Blizzard Tooltip",
			["authorOptions"] = {
			},
			["preferToUpdate"] = false,
			["groupIcon"] = "525134",
			["anchorPoint"] = "CENTER",
			["borderColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["space"] = 3,
			["url"] = "https://wago.io/M+Timer/79",
			["actions"] = {
				["start"] = {
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["unit"] = "player",
						["type"] = "aura2",
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["subeventPrefix"] = "SPELL",
						["names"] = {
						},
						["event"] = "Health",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
			},
			["columnSpace"] = 1,
			["internalVersion"] = 40,
			["useLimit"] = false,
			["align"] = "LEFT",
			["rotation"] = 0,
			["arcLength"] = 360,
			["version"] = 79,
			["subRegions"] = {
			},
			["config"] = {
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["load"] = {
				["use_class"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["borderInset"] = 1,
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["radius"] = 200,
			["animate"] = false,
			["rowSpace"] = 1,
			["scale"] = 1,
			["selfPoint"] = "TOPLEFT",
			["border"] = false,
			["borderEdge"] = "Square Full White",
			["regionType"] = "dynamicgroup",
			["borderSize"] = 2,
			["limit"] = 5,
			["fullCircle"] = true,
			["stagger"] = 0,
			["sort"] = "none",
			["borderOffset"] = 4,
			["semver"] = "1.2.18",
			["tocversion"] = 80300,
			["id"] = "M+ - Timer",
			["frameStrata"] = 1,
			["gridWidth"] = 5,
			["anchorFrameType"] = "SCREEN",
			["constantFactor"] = "RADIUS",
			["uid"] = "Eri8grwBWLO",
			["yOffset"] = 49.11297607421875,
			["gridType"] = "RD",
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["xOffset"] = 838.222900390625,
		},
		["ZenTracker (ZT) Main 2"] = {
			["outline"] = "OUTLINE",
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "update",
			["url"] = "https://wago.io/r14U746B7/68",
			["actions"] = {
				["start"] = {
					["do_message"] = false,
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "--------------------------------------------------------------------------------\n-- CONFIGURATION\n--\n-- The configuration options have moved to the \"Author Options\" tab as of\n-- WeakAuras Version 2.10. \n--\n-- DO NOT EDIT THIS CODE!\n--------------------------------------------------------------------------------\nlocal ZT = aura_env\n\n-- Local versions of commonly used functions\nlocal ipairs = ipairs\nlocal pairs = pairs\nlocal print = print\nlocal select = select\nlocal tonumber = tonumber\n\nlocal IsInGroup = IsInGroup\nlocal IsInRaid = IsInRaid\nlocal UnitGUID = UnitGUID\n\n-- Turns on/off debugging messages\nlocal DEBUG_EVENT = { isEnabled = false, color = \"FF2281F4\" }\nlocal DEBUG_MESSAGE = { isEnabled = false, color = \"FF11D825\" }\nlocal DEBUG_TIMER = { isEnabled = false, color = \"FFF96D27\" }\nlocal DEBUG_TRACKING = { isEnabled = false, color = \"FFA53BF7\" }\n\n-- Turns on/off testing of combatlog-based tracking for the player\n-- (Note: This will disable sharing of player CD updates over addon messages)\nlocal TEST_CLEU = false\n\nlocal function prdebug(type, ...)\n    if type.isEnabled then\n        print(\"|c\"..type.color..\"[ZT-Debug]\", ...)\n    end\nend\n\nlocal function prerror(...)\n    print(\"|cFFFF0000[ZT-Error]\", ...)\nend\n\nlocal function Table_Create(values)\n    if not values then\n        return {}\n    elseif not values[1] then\n        return { values }\n    end\n    return values\nend\n\nlocal function DefaultTable_Create(genDefaultFunc)\n    local table = {}\n    local metatable = {}\n    metatable.__index = function(table, key)\n        local value = genDefaultFunc()\n        rawset(table, key, value)\n        return value\n    end\n\n    return setmetatable(table, metatable)\nend\n\nlocal function Map_FromTable(table)\n    local map = {}\n    for _,value in ipairs(table) do\n        map[value] = true\n    end\n    return map\nend\n\n-- TODOs\n--\n-- 1) Fix the registration to allow for spellIDs or types\n-- 2) Track front-end registration at the level of spellIDs\n-- 3) Change spell list to allow for multiple types per spell (introduce RAIDCD)\n\n--##############################################################################\n-- Class and Spec Information\n\nlocal DH = {ID=12, name=\"DEMONHUNTER\", Havoc=577, Veng=581}\nlocal DK = {ID=6, name=\"DEATHKNIGHT\", Blood=250, Frost=251, Unholy=252}\nlocal Druid = {ID=11, name=\"DRUID\", Balance=102, Feral=103, Guardian=104, Resto=105}\nlocal Hunter = {ID=3, name=\"HUNTER\", BM=253, MM=254, SV=255}\nlocal Mage = {ID=8, name=\"MAGE\", Arcane=62, Fire=63, Frost=64}\nlocal Monk = {ID=10, name=\"MONK\", BRM=268, WW=269, MW=270}\nlocal Paladin = {ID=2, name=\"PALADIN\", Holy=65, Prot=66, Ret=70}\nlocal Priest = {ID=5, name=\"PRIEST\", Disc=256, Holy=257, Shadow=258}\nlocal Rogue = {ID=4, name=\"ROGUE\", Sin=259, Outlaw=260, Sub=261}\nlocal Shaman = {ID=7, name=\"SHAMAN\", Ele=262, Enh=263, Resto=264}\nlocal Warlock = {ID=9, name=\"WARLOCK\", Affl=265, Demo=266, Destro=267}\nlocal Warrior = {ID=1, name=\"WARRIOR\", Arms=71, Fury=72, Prot=73}\n\nlocal AllClasses = {\n    [DH.name] = DH, [DK.name] = DK, [Druid.name] = Druid, [Hunter.name] = Hunter,\n    [Mage.name] = Mage, [Monk.name] = Monk, [Paladin.name] = Paladin,\n    [Priest.name] = Priest, [Rogue.name] = Rogue, [Shaman.name] = Shaman,\n    [Warlock.name] = Warlock, [Warrior.name] = Warrior\n}\n\n--##############################################################################\n-- Spell Cooldown Modifiers\n\nlocal function StaticMod(type, value)\n    return { type = \"Static\", [type] = value }\nend\n\nlocal function DynamicMod(handlers)\n    if not handlers[1] then\n        handlers = { handlers }\n    end\n    \n    return { type = \"Dynamic\", handlers = handlers }\nend\n\nlocal function EventDeltaMod(type, spellID, delta)\n    return DynamicMod({\n            type = type,\n            spellID = spellID,\n            handler = function(watchInfo)\n                watchInfo:updateCDDelta(delta)\n            end\n    })\nend\n\nlocal function CastDeltaMod(spellID, delta)\n    return EventDeltaMod(\"SPELL_CAST_SUCCESS\", spellID, delta)\nend\n\nlocal function EventRemainingMod(type, spellID, remaining)\n    return DynamicMod({\n            type = type,\n            spellID = spellID,\n            handler = function(watchInfo)\n                watchInfo:updateCDRemaining(remaining)\n            end\n    })\nend\n\nlocal function CastRemainingMod(spellID, remaining)\n    return EventRemainingMod(\"SPELL_CAST_SUCCESS\", spellID, remaining)\nend\n\n-- Shockwave: If 3+ targets hit then reduces by 15 seconds\nlocal modShockwave = DynamicMod({\n        {\n            type = \"SPELL_CAST_SUCCESS\", spellID = 46968,\n            handler = function(watchInfo)\n                watchInfo.numHits = 0\n            end\n        },\n        {\n            type = \"SPELL_AURA_APPLIED\", spellID = 132168,\n            handler = function(watchInfo)\n                watchInfo.numHits = watchInfo.numHits + 1\n                if watchInfo.numHits == 3 then\n                    watchInfo:updateCDDelta(-15)\n                end\n            end\n        }\n})\n\n-- Capacitor Totem: Each target hit reduces by 5 seconds (up to 4 targets hit)\nlocal modCapTotem = DynamicMod({\n        type = \"SPELL_SUMMON\", spellID = 192058,\n        handler = function(watchInfo)\n            watchInfo.numHits = 0\n            \n            if not watchInfo.totemHandler then\n                watchInfo.totemHandler = function(watchInfo)\n                    watchInfo.numHits = watchInfo.numHits + 1\n                    if watchInfo.numHits <= 4 then\n                        watchInfo:updateCDDelta(-5)\n                    end\n                end\n            end\n            \n            if watchInfo.totemGUID then\n                ZT.eventHandlers:remove(\"SPELL_AURA_APPLIED\", 118905, watchInfo.totemGUID, watchInfo.totemHandler)\n            end\n            \n            watchInfo.totemGUID = select(8, CombatLogGetCurrentEventInfo())\n            ZT.eventHandlers:add(\"SPELL_AURA_APPLIED\", 118905, watchInfo.totemGUID, watchInfo.totemHandler, watchInfo)\n        end\n})\n\n\n-- Guardian Spirit: If expires watchInfothout healing then reset to 60 seconds\nlocal modGuardianSpirit = DynamicMod({\n        {\n            type = \"SPELL_HEAL\", spellID = 48153,\n            handler = function(watchInfo)\n                watchInfo.spiritHeal = true\n            end\n        },\n        {\n            type = \"SPELL_AURA_REMOVED\", spellID = 47788,\n            handler = function(watchInfo)\n                if not watchInfo.spiritHeal then\n                    watchInfo:updateCDRemaining(60)\n                end\n                watchInfo.spiritHeal = false\n            end\n        }\n})\n\n-- Dispels: Go on cooldown only if a debuff is dispelled\nlocal function DispelMod(spellID)\n    return DynamicMod({\n            type = \"SPELL_DISPEL\",\n            spellID = spellID,\n            handler = function(watchInfo)\n                watchInfo:updateCDRemaining(8)\n            end\n    })\nend\n\n-- Resource Spending: For every spender, reduce cooldown by (coefficient * cost) seconds\n--   Note: By default, I try to use minimum cost values as to not over-estimate the cooldown reduction\nlocal specIDToSpenderInfo = {\n    [DK.Blood] = {\n        [49998]  = 40, -- Death Strike (Assumes -5 from Ossuary)\n        [61999]  = 30, -- Raise Ally\n        [206940] = 30, -- Mark of Blood\n    },\n    [Warrior.Arms] = {\n        [845]    = 20, -- Cleave\n        [163201] = 20, -- Execute (Ignores Sudden Death)\n        [1715]   = 10, -- Hamstring\n        [202168] = 10, -- Impending Victory\n        [12294]  = 30, -- Moral Strike\n        [772]    = 30, -- Rend\n        [1464]   = 20, -- Slam\n        [1680]   = 30, -- Whirlwind\n    },\n    [Warrior.Fury] = {\n        [202168] = 10, -- Impending Victory\n        [184367] = 75, -- Rampage (Assumes -10 from Carnage)\n        [12323]  = 10, -- Piercing Howl\n    },\n    [Warrior.Prot] = {\n        [190456] = 40, -- Ignore Pain (Ignores Vengeance)\n        [202168] = 10, -- Impending Victory\n        [6572]   = 30, -- Revenge (Ignores Vengeance)\n        [2565]   = 30, -- Shield Block\n    }\n}\n\nlocal function ResourceSpendingMods(specID, coefficient)\n    local handlers = {}\n    local spenderInfo = specIDToSpenderInfo[specID]\n    \n    for spellID,cost in pairs(spenderInfo) do\n        local delta = -(coefficient * cost)\n        \n        handlers[#handlers+1] = {\n            type = \"SPELL_CAST_SUCCESS\",\n            spellID = spellID,\n            handler = function(watchInfo)\n                watchInfo:updateCDDelta(delta)\n            end\n        }\n    end\n    \n    return DynamicMod(handlers)\nend\n\n--##############################################################################\n-- List of Tracked Spells\n\nZT.spellsVersion = 8\nZT.spells = {\n    -- Interrupts\n    {type=\"INTERRUPT\", spellID=183752, class=DH, baseCD=15}, -- Disrupt\n    {type=\"INTERRUPT\", spellID=47528, class=DK, baseCD=15}, -- Mind Freeze\n    {type=\"INTERRUPT\", spellID=91802, specs={DK.Unholy}, baseCD=30}, -- Shambling Rush\n    {type=\"INTERRUPT\", spellID=78675, specs={Druid.Balance}, baseCD=60}, -- Solar Beam\n    {type=\"INTERRUPT\", spellID=106839, specs={Druid.Feral, Druid.Guardian}, baseCD=15}, -- Skull Bash\n    {type=\"INTERRUPT\", spellID=147362, specs={Hunter.BM, Hunter.MM}, baseCD=24}, -- Counter Shot\n    {type=\"INTERRUPT\", spellID=187707, specs={Hunter.SV}, baseCD=15}, -- Muzzle\n    {type=\"INTERRUPT\", spellID=2139, class=Mage, baseCD=24}, -- Counter Spell\n    {type=\"INTERRUPT\", spellID=116705, specs={Monk.WW, Monk.BRM}, baseCD=15}, -- Spear Hand Strike\n    {type=\"INTERRUPT\", spellID=96231, specs={Paladin.Prot, Paladin.Ret}, baseCD=15}, -- Rebuke\n    {type=\"INTERRUPT\", spellID=15487, specs={Priest.Shadow}, baseCD=45, modTalents={[41]=StaticMod(\"sub\", 15)}}, -- Silence\n    {type=\"INTERRUPT\", spellID=1766, class=Rogue, baseCD=15}, -- Kick\n    {type=\"INTERRUPT\", spellID=57994, class=Shaman, baseCD=12}, -- Wind Shear\n    {type=\"INTERRUPT\", spellID=19647, class=Warlock, baseCD=24}, -- Spell Lock\n    {type=\"INTERRUPT\", spellID=6552, class=Warrior, baseCD=15}, -- Pummel\n    -- Hard Crowd Control (AOE)\n    {type=\"HARDCC\", spellID=179057, specs={DH.Havoc}, baseCD=60, modTalents={[61]=StaticMod(\"mul\", 0.666667)}}, -- Chaos Nova\n    {type=\"HARDCC\", spellID=119381, class=Monk, baseCD=60, modTalents={[41]=StaticMod(\"sub\", 10)}}, -- Leg Sweep\n    {type=\"HARDCC\", spellID=192058, class=Shaman, baseCD=60, modTalents={[33]=modCapTotem}}, -- Capacitor Totem\n    {type=\"HARDCC\", spellID=30283, class=Warlock, baseCD=60, modTalents={[51]=StaticMod(\"sub\", 15)}}, -- Shadowfury\n    {type=\"HARDCC\", spellID=46968, specs={Warrior.Prot}, baseCD=40, modTalents={[52]=modShockwave}}, -- Shockwave\n    {type=\"HARDCC\", spellID=255654, race=\"HighmountainTauren\", baseCD=120}, -- Bull Rush\n    {type=\"HARDCC\", spellID=20549, race=\"Tauren\", baseCD=90}, -- War Stomp\n    -- Soft Crowd Control (AOE)\n    {type=\"SOFTCC\", spellID=202138, specs={DH.Veng}, baseCD=90, reqTalents={53}}, -- Sigil of Chains\n    {type=\"SOFTCC\", spellID=207684, specs={DH.Veng}, baseCD=90, modTalents={[52]=StaticMod(\"mul\", 0.8)}}, -- Sigil of Misery\n    {type=\"SOFTCC\", spellID=202137, specs={DH.Veng}, baseCD=60, modTalents={[52]=StaticMod(\"mul\", 0.8)}}, -- Sigil of Silence\n    {type=\"SOFTCC\", spellID=108199, specs={DK.Blood}, baseCD=120, modTalents={[52]=StaticMod(\"sub\", 30)}}, -- Gorefiend's Grasp\n    {type=\"SOFTCC\", spellID=207167, specs={DK.Frost}, baseCD=60, reqTalents={33}}, -- Blinding Sleet\n    {type=\"SOFTCC\", spellID=132469, class=Druid, baseCD=30, reqTalents={43}}, -- Typhoon\n    {type=\"SOFTCC\", spellID=102359, class=Druid, baseCD=30, reqTalents={42}}, -- Mass Entanglement\n    {type=\"SOFTCC\", spellID=99, specs={Druid.Guardian}, baseCD=30}, -- Incapacitating Roar\n    {type=\"SOFTCC\", spellID=102793, specs={Druid.Guardian}, baseCD=60, reqTalents={22}}, -- Ursol's Vortex\n    {type=\"SOFTCC\", spellID=102793, specs={Druid.Resto}, baseCD=60}, -- Ursol's Vortex\n    {type=\"SOFTCC\", spellID=109248, class=Hunter, baseCD=45, reqTalents={53}}, -- Binding Shot\n    {type=\"SOFTCC\", spellID=122, class=Mage, baseCD=30, reqTalents={51,53}, mods=CastRemainingMod(235219,0), version=6}, -- Frost Nova\n    {type=\"SOFTCC\", spellID=122, class=Mage, baseCD=30, charges=2, reqTalents={52}, mods=CastRemainingMod(235219,0), version=6}, -- Frost Nova\n    {type=\"SOFTCC\", spellID=113724, class=Mage, baseCD=45, reqTalents={53}, version=6}, -- Ring of Frost\n    {type=\"SOFTCC\", spellID=31661, specs={Mage.Fire}, baseCD=20, version=2}, -- Dragon's Breath\n    {type=\"SOFTCC\", spellID=33395, specs={Mage.Frost}, baseCD=25, reqTalents={11,13}, version=6}, -- Freeze (Pet)\n    {type=\"SOFTCC\", spellID=116844, class=Monk, baseCD=45, reqTalents={43}}, -- Ring of Peace\n    {type=\"SOFTCC\", spellID=115750, class=Paladin, baseCD=90, reqTalents={33}, version=3}, -- Blinding Light\n    {type=\"SOFTCC\", spellID=8122, specs={Priest.Disc, Priest.Holy}, baseCD=60, modTalents={[41]=StaticMod(\"sub\", 30)}}, -- Psychic Scream\n    {type=\"SOFTCC\", spellID=204263, specs={Priest.Disc, Priest.Holy}, baseCD=45, reqTalents={43}}, -- Shining Force\n    {type=\"SOFTCC\", spellID=8122, specs={Priest.Shadow}, baseCD=60}, -- Psychic Scream\n    {type=\"SOFTCC\", spellID=51490, specs={Shaman.Ele}, baseCD=45}, -- Thunderstorm\n    -- Hard Crowd Control (Single Target)\n    {type=\"STHARDCC\", spellID=211881, specs={DH.Havoc}, baseCD=30, reqTalents={63}}, -- Fel Eruption\n    {type=\"STHARDCC\", spellID=221562, specs={DK.Blood}, baseCD=45}, -- Asphyxiate\n    {type=\"STHARDCC\", spellID=108194, specs={DK.FrostDK}, baseCD=45, reqTalents={32}}, -- Asphyxiate\n    {type=\"STHARDCC\", spellID=108194, specs={DK.Unholy}, baseCD=45, reqTalents={33}}, -- Asphyxiate\n    {type=\"STHARDCC\", spellID=5211, class=Druid, baseCD=50, reqTalents={41}}, -- Mighty Bash\n    {type=\"STHARDCC\", spellID=19577, specs={Hunter.BM, Hunter.Surv}, baseCD=60}, -- Intimidation\n    {type=\"STHARDCC\", spellID=853, specs={Paladin.Holy}, baseCD=60, modTalents={[31]=CastDeltaMod(275773, -10)}}, -- Hammer of Justice\n    {type=\"STHARDCC\", spellID=853, specs={Paladin.Prot}, baseCD=60, modTalents={[31]=CastDeltaMod(275779, -6)}}, -- Hammer of Justice\n    {type=\"STHARDCC\", spellID=853, specs={Paladin.Ret}, baseCD=60}, -- Hammer of Justice\n    {type=\"STHARDCC\", spellID=88625, specs={Priest.Holy}, baseCD=60, reqTalents={42}, mods=CastDeltaMod(585, -4), modTalents={[71]=CastDeltaMod(585, -1.333333)}}, -- Holy Word: Chastise\n    {type=\"STHARDCC\", spellID=64044, specs={Priest.Shadow}, baseCD=45, reqTalents={43}}, -- Psychic Horror\n    {type=\"STHARDCC\", spellID=6789, class=Warlock, baseCD=45, reqTalents={52}}, -- Mortal Coil\n    {type=\"STHARDCC\", spellID=107570, specs={Warrior.Arms,Warrior.Fury}, baseCD=30, reqTalents={23}}, -- Storm Bolt\n    {type=\"STHARDCC\", spellID=107570, specs={Warrior.Prot}, baseCD=30, reqTalents={53}}, -- Storm Bolt\n    -- Soft Crowd Control (Single Target)\n    {type=\"STSOFTCC\", spellID=217832, class=DH, baseCD=45}, -- Imprison\n    {type=\"STSOFTCC\", spellID=49576, specs={DK.Blood}, baseCD=15, version=2}, -- Death Grip\n    {type=\"STSOFTCC\", spellID=49576, specs={DK.Frost, DK.Unholy}, baseCD=25, version=2}, -- Death Grip\n    {type=\"STSOFTCC\", spellID=2094, specs={Rogue.Outlaw}, baseCD=120, modTalents={[52]=StaticMod(\"sub\", 30)}}, -- Blind\n    {type=\"STSOFTCC\", spellID=2094, specs={Rogue.Sin, Rogue.Sub}, baseCD=120}, -- Blind\n    {type=\"STSOFTCC\", spellID=115078, class=Monk, baseCD=45}, -- Paralysis\n    {type=\"STSOFTCC\", spellID=187650, class=Hunter, baseCD=30}, -- Freezing Trap\n    {type=\"STSOFTCC\", spellID=107079, race=\"Pandaren\", baseCD=120, version=4}, -- Quaking Palm\n    -- Dispel (Offensive)\n    {type=\"DISPEL\", spellID=278326, class=DH, baseCD=10, version=6}, -- Disrupt\n    {type=\"DISPEL\", spellID=2908, class=Druid, baseCD=10, version=6}, -- Soothe\n    {type=\"DISPEL\", spellID=32375, class=Priest, baseCD=45}, -- Mass Dispel\n    {type=\"DISPEL\", spellID=202719, race=\"BloodElf\", class=DH, baseCD=120}, -- Arcane Torrent\n    {type=\"DISPEL\", spellID=50613, race=\"BloodElf\", class=DK, baseCD=120}, -- Arcane Torrent\n    {type=\"DISPEL\", spellID=80483, race=\"BloodElf\", class=Hunter, baseCD=120}, -- Arcane Torrent\n    {type=\"DISPEL\", spellID=28730, race=\"BloodElf\", class=Mage, baseCD=120}, -- Arcane Torrent\n    {type=\"DISPEL\", spellID=129597, race=\"BloodElf\", class=Monk, baseCD=120}, -- Arcane Torrent\n    {type=\"DISPEL\", spellID=155145, race=\"BloodElf\", class=Paladin, baseCD=120}, -- Arcane Torrent\n    {type=\"DISPEL\", spellID=232633, race=\"BloodElf\", class=Priest, baseCD=120}, -- Arcane Torrent\n    {type=\"DISPEL\", spellID=25046, race=\"BloodElf\", class=Rogue, baseCD=120}, -- Arcane Torrent\n    {type=\"DISPEL\", spellID=28730, race=\"BloodElf\", class=Warlock, baseCD=120}, -- Arcane Torrent\n    {type=\"DISPEL\", spellID=69179, race=\"BloodElf\", class=Warrior, baseCD=120}, -- Arcane Torrent\n    -- Dispel (Defensive, Magic)\n    {type=\"DEFMDISPEL\", spellID=88423, specs={Druid.Resto}, baseCD=8, mods=DispelMod(88423), ignoreCast=true}, -- Nature's Cure\n    {type=\"DEFMDISPEL\", spellID=115450, specs={Monk.MW}, baseCD=8, mods=DispelMod(115450), ignoreCast=true}, -- Detox\n    {type=\"DEFMDISPEL\", spellID=4987, specs={Paladin.Holy}, baseCD=8, mods=DispelMod(4987), ignoreCast=true}, -- Cleanse\n    {type=\"DEFMDISPEL\", spellID=527, specs={Priest.Disc, Priest.Holy}, baseCD=8, mods=DispelMod(527), ignoreCast=true}, -- Purify\n    {type=\"DEFMDISPEL\", spellID=77130, specs={Shaman.Resto}, baseCD=8, mods=DispelMod(77130), ignoreCast=true}, -- Purify Spirit\n    -- Raid-Wide Defensives\n    {type=\"RAIDCD\", spellID=196718, specs={DH.Havoc}, baseCD=180}, -- Darkness\n    {type=\"RAIDCD\", spellID=31821, specs={Paladin.Holy}, baseCD=180}, -- Aura Mastery\n    {type=\"RAIDCD\", spellID=204150, specs={Paladin.Prot}, baseCD=180, reqTalents={63}, version=6}, -- Aegis of Light\n    {type=\"RAIDCD\", spellID=62618, specs={Priest.Disc}, baseCD=180, reqTalents={71,73}}, -- Power Word: Barrier\n    {type=\"RAIDCD\", spellID=207399, specs={Shaman.Resto}, baseCD=300, reqTalents={43}}, -- Ancestral Protection Totem\n    {type=\"RAIDCD\", spellID=98008, specs={Shaman.Resto}, baseCD=180}, -- Spirit Link Totem\n    {type=\"RAIDCD\", spellID=97462, class=Warrior, baseCD=180}, -- Rallying Cry\n    -- External Defensives (Single Target)\n    {type=\"EXTERNAL\", spellID=102342, specs={Druid.Resto}, baseCD=60, modTalents={[62]=StaticMod(\"sub\", 15)}}, -- Ironbark\n    {type=\"EXTERNAL\", spellID=116849, specs={Monk.MW}, baseCD=120}, -- Life Cocoon\n    {type=\"EXTERNAL\", spellID=6940, specs={Paladin.Holy, Paladin.Prot}, baseCD=120}, -- Blessing of Sacrifice\n    {type=\"EXTERNAL\", spellID=1022, specs={Paladin.Holy, Paladin.Ret}, baseCD=300}, -- Blessing of Protection\n    {type=\"EXTERNAL\", spellID=1022, specs={Paladin.Prot}, baseCD=300, reqTalents={41,42}}, -- Blessing of Protection\n    {type=\"EXTERNAL\", spellID=204018, specs={Paladin.Prot}, baseCD=180, reqTalents={43}}, -- Blessing of Spellwarding\n    {type=\"EXTERNAL\", spellID=33206, specs={Priest.Disc}, baseCD=180}, -- Pain Supression\n    {type=\"EXTERNAL\", spellID=47788, specs={Priest.Holy}, baseCD=180, modTalents={[32]=modGuardianSpirit}}, -- Guardian Spirit\n    -- Healing and Healing Buffs \n    {type=\"HEALING\", spellID=33891, specs={Druid.Resto}, baseCD=180, reqTalents={53}, ignoreCast=true, mods=EventRemainingMod(\"SPELL_AURA_APPLIED\",117679,180), version=6}, -- Incarnation: Tree of Life\n    {type=\"HEALING\", spellID=740, specs={Druid.Resto}, baseCD=180, modTalents={[61]=StaticMod(\"sub\", 60)}}, -- Tranquility\n    {type=\"HEALING\", spellID=198664, specs={Monk.MW}, baseCD=180, reqTalents={63}, version=6}, -- Invoke Chi-Ji, the Red Crane\n    {type=\"HEALING\", spellID=115310, specs={Monk.MW}, baseCD=180}, -- Revival\n    {type=\"HEALING\", spellID=31884, specs={Paladin.Holy}, baseCD=120, reqTalents={61,63}, version=7}, -- Avenging Wrath\n    {type=\"HEALING\", spellID=216331, specs={Paladin.Holy}, baseCD=120, reqTalents={62}}, -- Avenging Crusader\n    {type=\"HEALING\", spellID=105809, specs={Paladin.Holy}, baseCD=90, reqTalents={53}}, -- Holy Avenger\n    {type=\"HEALING\", spellID=633, specs={Paladin.Holy}, baseCD=600, modTalents={[21]=StaticMod(\"mul\", 0.7)}}, -- Lay on Hands\n    {type=\"HEALING\", spellID=633, specs={Paladin.Prot, Paladin.Ret}, baseCD=600, modTalents={[51]=StaticMod(\"mul\", 0.7)}}, -- Lay on Hands\n    {type=\"HEALING\", spellID=210191, specs={Paladin.Ret}, baseCD=60, charges=2, reqTalents={63}, version=6}, -- Word of Glory\n    {type=\"HEALING\", spellID=246287, specs={Priest.Disc}, baseCD=90, reqTalents={73}}, -- Evangelism\n    {type=\"HEALING\", spellID=47536, specs={Priest.Disc}, baseCD=90}, -- Rapture\n    {type=\"HEALING\", spellID=271466, specs={Priest.Disc}, baseCD=180, reqTalents={72}}, -- Luminous Barrier\n    {type=\"HEALING\", spellID=200183, specs={Priest.Holy}, baseCD=120, reqTalents={72}}, -- Apotheosis\n    {type=\"HEALING\", spellID=64843, specs={Priest.Holy}, baseCD=180}, -- Divine Hymn\n    {type=\"HEALING\", spellID=265202, specs={Priest.Holy}, baseCD=720, reqTalents={73}, mods={CastDeltaMod(34861,-30), CastDeltaMod(2050,-30)}}, -- Holy Word: Salvation\n    {type=\"HEALING\", spellID=15286, specs={Priest.Shadow}, baseCD=120, modTalents={[22]=StaticMod(\"sub\", 45)}}, -- Vampiric Embrace\n    {type=\"HEALING\", spellID=114052, specs={Shaman.Resto}, baseCD=180, reqTalents={73}}, -- Ascendance\n    {type=\"HEALING\", spellID=198838, specs={Shaman.Resto}, baseCD=60, reqTalents={42}}, -- Earthen Wall Totem\n    {type=\"HEALING\", spellID=108280, specs={Shaman.Resto}, baseCD=180}, -- Healing Tide Totem\n    -- Utility (Movement, Taunts, etc)\n    {type=\"UTILITY\", spellID=205636, specs={Druid.Balance}, baseCD=60, reqTalents={13}}, -- Force of Nature (Treants)\n    {type=\"UTILITY\", spellID=29166, specs={Druid.Balance, Druid.Resto}, baseCD=180}, -- Innervate\n    {type=\"UTILITY\", spellID=106898, specs={Druid.Feral}, baseCD=120, version=2}, -- Stampeding Roar\n    {type=\"UTILITY\", spellID=106898, specs={Druid.Guardian}, baseCD=60, version=2}, -- Stampeding Roar\n    {type=\"UTILITY\", spellID=116841, class=Monk, baseCD=30, reqTalents={23}, version=6}, -- Tiger's Lust\n    {type=\"UTILITY\", spellID=1044, class=Paladin, baseCD=25, version=6}, -- Blessing of Freedom\n    {type=\"UTILITY\", spellID=73325, class=Priest, baseCD=90}, -- Leap of Faith\n    {type=\"UTILITY\", spellID=64901, specs={Priest.Holy}, baseCD=300}, -- Symbol of Hope\n    {type=\"UTILITY\", spellID=114018, class=Rogue, baseCD=360}, -- Shroud of Concealment\n    {type=\"UTILITY\", spellID=198103, class=Shaman, baseCD=300, version=2}, -- Earth Elemental\n    {type=\"UTILITY\", spellID=8143, class=Shaman, baseCD=60, version=6}, -- Tremor Totem\n    {type=\"UTILITY\", spellID=192077, class=Shaman, baseCD=120, reqTalents={53}, version=2}, -- Wind Rush Totem\n    {type=\"UTILITY\", spellID=58984, race=\"NightElf\", baseCD=120, version=3}, -- Shadowmeld\n    -- Personal Defensives\n    {type=\"PERSONAL\", spellID=198589, specs={DH.Havoc}, baseCD=60, mods=EventRemainingMod(\"SPELL_AURA_APPLIED\", 212800, 60)}, -- Blur\n    {type=\"PERSONAL\", spellID=48792, class=DK, baseCD=180}, -- Icebound Fortitude\n    {type=\"PERSONAL\", spellID=48707, specs={DK.Frost, DK.Unholy}, baseCD=60}, -- Anti-Magic Shell\n    {type=\"PERSONAL\", spellID=48707, specs={DK.Blood}, baseCD=60, modTalents={[42]=StaticMod(\"sub\", 15)}}, -- Anti-Magic Shell\n    {type=\"PERSONAL\", spellID=48743, specs={DK.Frost, DK.Unholy}, baseCD=120, reqTalents={53}}, -- Death Pact\n    {type=\"PERSONAL\", spellID=22812, specs={Druid.Balance, Druid.Resto}, baseCD=60}, -- Barkskin\n    {type=\"PERSONAL\", spellID=22812, specs={Druid.Guardian}, baseCD=90, modTalents={[62]=StaticMod(\"mul\", 0.666667)}}, -- Barkskin\n    {type=\"PERSONAL\", spellID=108238, specs={Druid.Balance, Druid.Feral, Druid.Resto}, baseCD=90, reqTalents={22}, version=6}, -- Renewal\n    {type=\"PERSONAL\", spellID=61336, specs={Druid.Feral,Druid.Guardian}, baseCD=180, charges=2, version=6}, -- Survival Instincts\n    {type=\"PERSONAL\", spellID=109304, class=Hunter, baseCD=120}, -- Exhilaration\n    {type=\"PERSONAL\", spellID=5384, class=Hunter, baseCD=30, version=6}, -- Feign Death\n    {type=\"PERSONAL\", spellID=235219, specs={Mage.Frost}, baseCD=300}, -- Cold Snap\n    {type=\"PERSONAL\", spellID=122278, class=Monk, baseCD=120, reqTalents={53}}, -- Dampen Harm\n    {type=\"PERSONAL\", spellID=243435, specs={Monk.MW}, baseCD=90}, -- Fortifying Brew\n    {type=\"PERSONAL\", spellID=122281, specs={Monk.BRM}, baseCD=30, charges=2, reqTalents={52}, version=6}, -- Healing Elixir\n    {type=\"PERSONAL\", spellID=122281, specs={Monk.MW}, baseCD=30, charges=2, reqTalents={51}, version=6}, -- Healing Elixir\n    {type=\"PERSONAL\", spellID=122783, specs={Monk.MW, Monk.WW}, baseCD=90, reqTalents={52}}, -- Diffuse Magic\n    {type=\"PERSONAL\", spellID=122470, specs={Monk.WW}, baseCD=90}, -- Touch of Karma\n    {type=\"PERSONAL\", spellID=498, specs={Paladin.Holy}, baseCD=60}, -- Divine Protection\n    {type=\"PERSONAL\", spellID=184662, specs={Paladin.Ret}, baseCD=120, modTalents={[51]=StaticMod(\"mul\", 0.7)}}, -- Shield of Vengeance\n    {type=\"PERSONAL\", spellID=205191, specs={Paladin.Ret}, baseCD=60, reqTalents={53}}, -- Eye for an Eye\n    {type=\"PERSONAL\", spellID=19236, specs={Priest.Disc, Priest.Holy}, baseCD=90}, -- Desperate Prayer\n    {type=\"PERSONAL\", spellID=47585, specs={Priest.Shadow}, baseCD=120, duration=6, modTalents={[23]=StaticMod(\"sub\", 30)}, version=8}, -- Dispersion\n    {type=\"PERSONAL\", spellID=199754, specs={Rogue.Outlaw}, baseCD=120, version=2}, -- Riposte\n    {type=\"PERSONAL\", spellID=5277, specs={Rogue.Sin, Rogue.Sub}, baseCD=120, version=2}, -- Evasion\n    {type=\"PERSONAL\", spellID=108271, class=Shaman, baseCD=90}, -- Astral Shift\n    {type=\"PERSONAL\", spellID=108416, class=Warlock, baseCD=60, reqTalents={33}, version=6}, -- Dark Pact\n    {type=\"PERSONAL\", spellID=104773, class=Warlock, baseCD=180}, -- Unending Resolve\n    {type=\"PERSONAL\", spellID=118038, specs={Warrior.Arms}, baseCD=180}, -- Die by the Sword\n    {type=\"PERSONAL\", spellID=184364, specs={Warrior.Fury}, baseCD=120}, -- Enraged Regeneration\n    -- Tank-Only Defensives\n    {type=\"TANK\", spellID=212084, specs={DH.Veng}, baseCD=60, reqTalents={63}, version=6}, -- Fel Devastation\n    {type=\"TANK\", spellID=204021, specs={DH.Veng}, baseCD=60}, -- Fiery Brand\n    {type=\"TANK\", spellID=187827, specs={DH.Veng}, baseCD=180}, -- Metamorphosis\n    {type=\"TANK\", spellID=206931, specs={DK.Blood}, baseCD=30, reqTalents={12}, version=6}, -- Blooddrinker\n    {type=\"TANK\", spellID=274156, specs={DK.Blood}, baseCD=45, reqTalents={23}, version=6}, -- Consumption\n    {type=\"TANK\", spellID=49028, specs={DK.Blood}, baseCD=120}, -- Dancing Rune Weapon\n    {type=\"TANK\", spellID=194679, specs={DK.Blood}, baseCD=25, charges=2, reqTalents={43}, version=6}, -- Rune Tap\n    {type=\"TANK\", spellID=194844, specs={DK.Blood}, baseCD=60, reqTalents={73}}, -- Bonestorm\n    {type=\"TANK\", spellID=55233, specs={DK.Blood}, baseCD=90, modTalents={[72]=ResourceSpendingMods(DK.Blood, 0.1)}}, -- Vampiric Blood\n    {type=\"TANK\", spellID=102558, specs={Druid.Guardian}, baseCD=180, reqTalents={53}, version=6}, -- Incarnation: Guardian of Ursoc\n    {type=\"TANK\", spellID=132578, specs={Monk.BRM}, baseCD=180, reqTalents={63}, version=4}, -- Invoke Niuzao\n    {type=\"TANK\", spellID=115203, specs={Monk.BRM}, baseCD=420}, -- Fortifying Brew\n    {type=\"TANK\", spellID=115176, specs={Monk.BRM}, baseCD=300}, -- Zen Meditation\n    {type=\"TANK\", spellID=31850, specs={Paladin.Prot}, baseCD=120, modTalents={[51]=StaticMod(\"mul\", 0.7)}}, -- Ardent Defender\n    {type=\"TANK\", spellID=86659, specs={Paladin.Prot}, baseCD=300, version=5}, -- Guardian of the Ancient Kings\n    {type=\"TANK\", spellID=12975, specs={Warrior.Prot}, baseCD=180, modTalents={[43]=StaticMod(\"sub\", 60), [71]=ResourceSpendingMods(Warrior.Prot, 0.1)}}, -- Last Stand\n    {type=\"TANK\", spellID=871, specs={Warrior.Prot}, baseCD=240, modTalents={[71]=ResourceSpendingMods(Warrior.Prot, 0.1)}}, -- Shield Wall\n    {type=\"TANK\", spellID=1160, specs={Warrior.Prot}, baseCD=45, modTalents={[71]=ResourceSpendingMods(Warrior.Prot, 0.1)}}, -- Demoralizing Shout\n    {type=\"TANK\", spellID=228920, specs={Warrior.Prot}, baseCD=60, reqTalents={73}, version=6}, -- Ravager\n    {type=\"TANK\", spellID=23920, specs={Warrior.Prot}, baseCD=25, version=6}, -- Spell Reflection\n    -- Immunities\n    {type=\"IMMUNITY\", spellID=196555, specs={DH.Havoc}, baseCD=120, reqTalents={43}}, -- Netherwalk\n    {type=\"IMMUNITY\", spellID=186265, class=Hunter, baseCD=180, modTalents={[51]=StaticMod(\"mul\", 0.8)}}, -- Aspect of the Turtle\n    {type=\"IMMUNITY\", spellID=45438, specs={Mage.Arcane,Mage.Fire}, baseCD=240}, -- Ice Block\n    {type=\"IMMUNITY\", spellID=45438, specs={Mage.Frost}, baseCD=240, mods=CastRemainingMod(235219, 0)}, -- Ice Block\n    {type=\"IMMUNITY\", spellID=642, specs={Paladin.Holy}, baseCD=300, modTalents={[21]=StaticMod(\"mul\", 0.7)}}, -- Divine Shield\n    {type=\"IMMUNITY\", spellID=642, specs={Paladin.Prot, Paladin.Ret}, baseCD=300, modTalents={[51]=StaticMod(\"mul\", 0.7)}}, -- Divine Shield\n    {type=\"IMMUNITY\", spellID=31224, class=Rogue, baseCD=120}, -- Cloak of Shadows\n    -- Damage and Damage Buffs\n    {type=\"DAMAGE\", spellID=191427, specs={DH.Havoc}, baseCD=240}, -- Metamorphosis\n    {type=\"DAMAGE\", spellID=258925, specs={DH.Havoc}, baseCD=60, reqTalents={33}}, -- Fel Barrage\n    {type=\"DAMAGE\", spellID=206491, specs={DH.Havoc}, baseCD=120, reqTalents={73}}, -- Nemesis\n    {type=\"DAMAGE\", spellID=47568, specs={DK.Frost}, baseCD=120, version=6}, -- Empower Rune Weapon\n    {type=\"DAMAGE\", spellID=279302, specs={DK.Frost}, baseCD=180, reqTalents={63}}, -- Frostwyrm's Fury\n    {type=\"DAMAGE\", spellID=152279, specs={DK.Frost}, baseCD=120, reqTalents={73}}, -- Breath of Sindragosaa\n    {type=\"DAMAGE\", spellID=275699, specs={DK.Unholy}, baseCD=90, modTalents={[71]={CastDeltaMod(47541,-1), CastDeltaMod(207317,-1)}}, version=6}, -- Apocalypse\n    {type=\"DAMAGE\", spellID=42650, specs={DK.Unholy}, baseCD=480, modTalents={[71]={CastDeltaMod(47541,-5), CastDeltaMod(207317,-5)}}}, -- Army of the Dead\n    {type=\"DAMAGE\", spellID=49206, specs={DK.Unholy}, baseCD=180, reqTalents={73}}, -- Summon Gargoyle\n    {type=\"DAMAGE\", spellID=207289, specs={DK.Unholy}, baseCD=75, reqTalents={72}}, -- Unholy Frenzy\n    {type=\"DAMAGE\", spellID=194223, specs={Druid.Balance}, baseCD=180, reqTalents={51,52}}, -- Celestial Alignment\n    {type=\"DAMAGE\", spellID=202770, specs={Druid.Balance}, baseCD=60, reqTalents={72}, version=6}, -- Fury of Elune\n    {type=\"DAMAGE\", spellID=102560, specs={Druid.Balance}, baseCD=180, reqTalents={53}}, -- Incarnation: Chosen of Elune\n    {type=\"DAMAGE\", spellID=106951, specs={Druid.Feral}, baseCD=180, version=3}, -- Berserk\n    {type=\"DAMAGE\", spellID=102543, specs={Druid.Feral}, baseCD=180, reqTalents={53}}, -- Incarnation: King of the Jungle\n    {type=\"DAMAGE\", spellID=19574, specs={Hunter.BM}, baseCD=90, mods=CastDeltaMod(217200,-12)}, -- Bestial Wrath\n    {type=\"DAMAGE\", spellID=193530, specs={Hunter.BM}, baseCD=120}, -- Aspect of the Wild\n    {type=\"DAMAGE\", spellID=201430, specs={Hunter.BM}, baseCD=180, reqTalents={63}}, -- Stampede\n    {type=\"DAMAGE\", spellID=288613, specs={Hunter.MM}, baseCD=120, version=3}, -- Trueshot\n    {type=\"DAMAGE\", spellID=266779, specs={Hunter.SV}, baseCD=120}, -- Coordinated Assault\n    {type=\"DAMAGE\", spellID=55342, class=Mage, baseCD=120, reqTalents={32}}, -- Mirror Image\n    {type=\"DAMAGE\", spellID=12042, specs={Mage.Arcane}, baseCD=90}, -- Arcane Power\n    {type=\"DAMAGE\", spellID=190319, specs={Mage.Fire}, baseCD=120}, -- Combustion\n    {type=\"DAMAGE\", spellID=12472, specs={Mage.Frost}, baseCD=180}, -- Icy Veins\n    {type=\"DAMAGE\", spellID=115080, specs={Monk.WW}, baseCD=120}, -- Touch of Death\n    {type=\"DAMAGE\", spellID=123904, specs={Monk.WW}, baseCD=180, reqTalents={63}}, -- Invoke Xuen, the White Tiger\n    {type=\"DAMAGE\", spellID=137639, specs={Monk.WW}, baseCD=90, charges=2, reqTalents={71, 72}, version=6}, -- Storm, Earth, and Fire\n    {type=\"DAMAGE\", spellID=152173, specs={Monk.WW}, baseCD=90, reqTalents={73}}, -- Serenity\n    {type=\"DAMAGE\", spellID=152262, specs={Paladin.Prot}, baseCD=45, reqTalents={73}, version=6}, -- Seraphim\n    {type=\"DAMAGE\", spellID=31884, specs={Paladin.Prot}, baseCD=120, version=6}, -- Avenging Wrath\n    {type=\"DAMAGE\", spellID=31884, specs={Paladin.Ret}, baseCD=120, reqTalents={71,73}}, -- Avenging Wrath\n    {type=\"DAMAGE\", spellID=231895, specs={Paladin.Ret}, baseCD=120, reqTalents={72}}, -- Crusade\n    {type=\"DAMAGE\", spellID=280711, specs={Priest.Shadow}, baseCD=60, reqTalents={72}}, -- Dark Ascension\n    {type=\"DAMAGE\", spellID=193223, specs={Priest.Shadow}, baseCD=180, reqTalents={73}}, -- Surrender to Madness\n    {type=\"DAMAGE\", spellID=13750, specs={Rogue.Outlaw}, baseCD=180}, -- Adrenaline Rush\n    {type=\"DAMAGE\", spellID=51690, specs={Rogue.Outlaw}, baseCD=120, reqTalents={73}}, -- Killing Spree\n    {type=\"DAMAGE\", spellID=79140, specs={Rogue.Sin}, baseCD=120}, -- Vendetta\n    {type=\"DAMAGE\", spellID=121471, specs={Rogue.Sub}, baseCD=180}, -- Shadow Blades\n    {type=\"DAMAGE\", spellID=114050, specs={Shaman.Ele}, baseCD=180, reqTalents={73}}, -- Ascendance\n    {type=\"DAMAGE\", spellID=192249, specs={Shaman.Ele}, baseCD=150, reqTalents={42}, version=3}, -- Storm Elemental\n    {type=\"DAMAGE\", spellID=191634, specs={Shaman.Ele}, baseCD=60, reqTalents={72}, version=3}, -- Stormkeeper\n    {type=\"DAMAGE\", spellID=114051, specs={Shaman.Enh}, baseCD=180, reqTalents={73}}, -- Ascendance\n    {type=\"DAMAGE\", spellID=51533, specs={Shaman.Enh}, baseCD=180, modTalents={[71]=StaticMod(\"sub\", 30)}, version=6}, -- Feral Spirit\n    {type=\"DAMAGE\", spellID=205180, specs={Warlock.Affl}, baseCD=180}, -- Summon Darkglare\n    {type=\"DAMAGE\", spellID=113860, specs={Warlock.Affl}, baseCD=120, reqTalents={73}}, -- Dark Soul: Misery\n    {type=\"DAMAGE\", spellID=265187, specs={Warlock.Demo}, baseCD=90}, -- Summon Demonic Tyrant\n    {type=\"DAMAGE\", spellID=267217, specs={Warlock.Demo}, baseCD=180, reqTalents={73}}, -- Nether Portal\n    {type=\"DAMAGE\", spellID=113858, specs={Warlock.Destro}, baseCD=120, reqTalents={73}}, -- Dark Soul: Instability\n    {type=\"DAMAGE\", spellID=1122, specs={Warlock.Destro}, baseCD=180}, -- Summon Infernal\n    {type=\"DAMAGE\", spellID=227847, specs={Warrior.Arms}, baseCD=90, modTalents={[71]=ResourceSpendingMods(Warrior.Arms, 0.05)}}, -- Bladestorm\n    {type=\"DAMAGE\", spellID=107574, specs={Warrior.Arms}, baseCD=120, reqTalents={62}}, -- Avatar\n    {type=\"DAMAGE\", spellID=1719, specs={Warrior.Fury}, baseCD=90, modTalents={[72]=ResourceSpendingMods(Warrior.Fury, 0.05)}}, -- Recklessness\n    {type=\"DAMAGE\", spellID=46924, specs={Warrior.Fury}, baseCD=60, reqTalents={63}}, -- Bladestorm\n    {type=\"DAMAGE\", spellID=107574, specs={Warrior.Prot}, baseCD=120, modTalents={[71]=ResourceSpendingMods(Warrior.Prot, 0.1)}, version=6}, -- Avatar\n}\n\nZT.linkedSpellIDs = {\n    [19647]  = {119910, 132409, 115781}, -- Spell Lock\n    [132469] = {61391}, -- Typhoon\n    [191427] = {200166}, -- Metamorphosis\n    [106898] = {77761, 77764}, -- Stampeding Roar\n    [86659] = {212641}, -- Guardian of the Ancient Kings (+Glyph)\n}\n\nZT.separateLinkedSpellIDs = {\n    [86659] = {212641}, -- Guardian of the Ancient Kings (+Glyph)\n}\n\n--##############################################################################\n-- Handling custom spells specified by the user in the configuration\n\nlocal spellConfigFuncHeader = \"return function(DK,DH,Druid,Hunter,Mage,Monk,Paladin,Priest,Rogue,Shaman,Warlock,Warrior,StaticMod,DynamicMod,EventDeltaMod,CastDeltaMod,EventRemainingMod,CastRemainingMod,DispelMod)\"\n\nlocal function trim(s) -- From PiL2 20.4\n    return (s:gsub(\"^%s*(.-)%s*$\", \"%1\"))\nend\n\nlocal function addCustomSpell(spellConfig, i)\n    if not spellConfig or type(spellConfig) ~= \"table\" then\n        prerror(\"Custom Spell\", i, \"is not represented as a valid table\")\n        return\n    end\n    \n    if type(spellConfig.type) ~= \"string\" then\n        prerror(\"Custom Spell\", i, \"does not have a valid 'type' entry\")\n        return\n    end\n    \n    if type(spellConfig.spellID) ~= \"number\" then\n        prerror(\"Custom Spell\", i, \"does not have a valid 'spellID' entry\")\n        return\n    end\n    \n    if type(spellConfig.baseCD) ~= \"number\" then\n        prerror(\"Custom Spell\", i, \"does not have a valid 'baseCD' entry\")\n        return\n    end\n    \n    spellConfig.version = 10000\n    spellConfig.isCustom = true\n    \n    ZT.spells[#ZT.spells + 1] = spellConfig\nend\n\nfor i = 1,16 do\n    local spellConfig = ZT.config[\"custom\"..i]\n    if spellConfig then\n        spellConfig = trim(spellConfig)\n    \n        if spellConfig ~= \"\" then\n            local spellConfigFuncStr = spellConfigFuncHeader..\" return \"..spellConfig..\" end\"\n            local spellConfigFunc = WeakAuras.LoadFunction(spellConfigFuncStr, \"ZenTracker Custom Spell \"..i)\n            if spellConfigFunc then\n                local spellConfig = spellConfigFunc(DK,DH,Druid,Hunter,Mage,Monk,Paladin,Priest,Rogue,Shaman,Warlock,Warrior,\n                    StaticMod,DynamicMod,EventDeltaMod,CastDeltaMod,EventRemainingMod,CastRemainingMod,DispelMod)\n                addCustomSpell(spellConfig, i)\n            end\n        end\n    end\nend\n\n--##############################################################################\n-- Compiling the complete indexed tables of spells\n\nZT.spellsByRace = DefaultTable_Create(function() return DefaultTable_Create(function() return {} end) end)\nZT.spellsByClass = DefaultTable_Create(function() return DefaultTable_Create(function() return {} end) end)\nZT.spellsBySpec = DefaultTable_Create(function() return DefaultTable_Create(function() return {} end) end)\nZT.spellsByType = DefaultTable_Create(function() return {} end)\nZT.spellsByID = DefaultTable_Create(function() return {} end)\n\nfor _,spellInfo in ipairs(ZT.spells) do\n    -- Making the structuring for spell info more uniform\n    spellInfo.version = spellInfo.version or 1\n    spellInfo.specs = spellInfo.specs and Map_FromTable(spellInfo.specs)\n    spellInfo.mods = Table_Create(spellInfo.mods)\n    if spellInfo.modTalents then\n        for talent,mods in pairs(spellInfo.modTalents) do\n            spellInfo.modTalents[talent] = Table_Create(mods)\n        end\n    end\n\n    spellInfo.isRegistered = false\n    spellInfo.frontends = {}\n\n    -- Indexing for faster lookups\n    local spells\n    if spellInfo.race then\n        if spellInfo.class then\n            spells = ZT.spellsByRace[spellInfo.race][spellInfo.class]\n            spells[#spells + 1] = spellInfo\n        else\n            for _,class in pairs(AllClasses) do\n                spells = ZT.spellsByRace[spellInfo.race][class]\n                spells[#spells + 1] = spellInfo\n            end\n        end\n    elseif spellInfo.class then\n        if spellInfo.reqTalents then\n            for _,talent in ipairs(spellInfo.reqTalents) do\n                spells = ZT.spellsByClass[spellInfo.class][talent]\n                spells[#spells + 1] = spellInfo\n            end\n        else\n            if spellInfo.modTalents then\n                for talent,_ in pairs(spellInfo.modTalents) do\n                    spells = ZT.spellsByClass[spellInfo.class][talent]\n                    spells[#spells + 1] = spellInfo\n                end\n            end\n            spells = ZT.spellsByClass[spellInfo.class][\"Base\"]\n            spells[#spells + 1] = spellInfo\n        end\n    elseif spellInfo.specs then\n        for specID,_ in pairs(spellInfo.specs) do\n            if spellInfo.reqTalents then\n                for _,talent in ipairs(spellInfo.reqTalents) do\n                    spells = ZT.spellsBySpec[specID][talent]\n                    spells[#spells + 1] = spellInfo\n                end\n            else\n                if spellInfo.modTalents then\n                    for talent,_ in pairs(spellInfo.modTalents) do\n                        spells = ZT.spellsBySpec[specID][talent]\n                        spells[#spells + 1] = spellInfo\n                    end\n                end\n                spells = ZT.spellsBySpec[specID][\"Base\"]\n                spells[#spells + 1] = spellInfo\n            end\n        end\n    else\n        spells = ZT.spellsByClass[\"None\"]\n        spells[#spells + 1] = spellInfo\n    end\n\n    spells = ZT.spellsByType[spellInfo.type]\n    spells[#spells + 1] = spellInfo\n\n    spells = ZT.spellsByID[spellInfo.spellID]\n    spells[#spells + 1] = spellInfo\nend\n\n\n--##############################################################################\n-- Handling combatlog and WeakAura events by invoking specified callbacks\n\nZT.eventHandlers = { handlers = {} }\n\nfunction ZT.eventHandlers:add(type, spellID, sourceGUID, func, data)\n    local types = self.handlers[spellID]\n    if not types then\n        types = {}\n        self.handlers[spellID] = types\n    end\n    \n    local sources = types[type]\n    if not sources then\n        sources = {}\n        types[type] = sources\n    end\n    \n    local handlers = sources[sourceGUID]\n    if not handlers then\n        handlers = {}\n        sources[sourceGUID] = handlers\n    end\n    \n    handlers[func] = data\nend\n\nfunction ZT.eventHandlers:remove(type, spellID, sourceGUID, func)\n    local types = self.handlers[spellID]\n    if types then\n        local sources = types[type]\n        if sources then\n            local handlers = sources[sourceGUID]\n            if handlers then\n                handlers[func] = nil\n            end\n        end\n    end\nend\n\nfunction ZT.eventHandlers:removeAll(sourceGUID)\n    for _,spells in pairs(self.eventHandlers) do\n        for _,sources in pairs(spells) do\n            for GUID,handlers in pairs(sources) do\n                if GUID == sourceGUID then\n                    wipe(handlers)\n                end\n            end\n        end\n    end\nend\n\nlocal function fixSourceGUID(sourceGUID) -- Based on https://wago.io/p/Nnogga\n    local type = strsplit(\"-\",sourceGUID)\n    if type == \"Pet\" then\n        for unit in WA_IterateGroupMembers() do\n            if UnitGUID(unit..\"pet\") == sourceGUID then\n                sourceGUID = UnitGUID(unit)\n                break\n            end\n        end\n    end\n    \n    return sourceGUID\nend\n\nfunction ZT.eventHandlers:handle(type, spellID, sourceGUID)\n    local types = self.handlers[spellID]\n    if not types then\n        return\n    end\n    \n    local sources = types[type]\n    if not sources then\n        return\n    end\n    \n    local handlers = sources[sourceGUID]\n    if not handlers then\n        sourceGUID = fixSourceGUID(sourceGUID)\n        handlers = sources[sourceGUID]\n        if not handlers then\n            return\n        end\n    end\n    \n    for func,data in pairs(handlers) do\n        func(data, spellID)\n    end\nend\n\n--##############################################################################\n-- Managing timer callbacks in a way that allows for updates/removals\n\nZT.timers = { heap={}, callbackTimes={} }\n\nfunction ZT.timers:fixHeapUpwards(index)\n    local heap = self.heap\n    local timer = heap[index]\n\n    local parentIndex, parentTimer\n    while index > 1 do\n        parentIndex = floor(index / 2)\n        parentTimer = heap[parentIndex]\n        if timer.time >= parentTimer.time then\n            break\n        end\n\n        parentTimer.index = index\n        heap[index] = parentTimer\n        index = parentIndex\n    end\n\n    if timer.index ~= index then\n        timer.index = index\n        heap[index] = timer\n    end\nend\n\nfunction ZT.timers:fixHeapDownwards(index)\n    local heap = self.heap\n    local timer = heap[index]\n\n    local childIndex, minChildTimer, leftChildTimer, rightChildTimer\n    while true do\n        childIndex = 2 * index\n\n        leftChildTimer = heap[childIndex]\n        if leftChildTimer then\n            rightChildTimer = heap[childIndex + 1]\n            if rightChildTimer and (rightChildTimer.time < leftChildTimer.time) then\n                minChildTimer = rightChildTimer\n            else\n                minChildTimer = leftChildTimer\n            end\n        else\n            break\n        end\n\n        if timer.time <= minChildTimer.time then\n            break\n        end\n\n        childIndex = minChildTimer.index\n        minChildTimer.index = index\n        heap[index] = minChildTimer\n        index = childIndex\n    end\n\n    if timer.index ~= index then\n        timer.index = index\n        heap[index] = timer\n    end\nend\n\nfunction ZT.timers:setupCallback()\n    local minTimer = self.heap[1]\n    if minTimer then\n        local timeNow = GetTime()\n        local remaining = minTimer.time - timeNow\n        if remaining <= 0 then\n            self:handle()\n        elseif not self.callbackTimes[minTimer.time] then\n            for time,_ in pairs(self.callbackTimes) do\n                if time < timeNow then\n                    self.callbackTimes[time] = nil\n                end\n            end\n            self.callbackTimes[minTimer.time] = true\n\n            -- Note: This 0.001 avoids early callbacks that I ran into\n            remaining = remaining + 0.001\n            prdebug(DEBUG_TIMER, \"Setting callback for handling timers after\", remaining, \"seconds\")\n            C_Timer.After(remaining, function() self:handle() end)\n        end\n    end\nend\n\nfunction ZT.timers:handle()\n    local timeNow = GetTime()\n    local heap = self.heap \n    local minTimer = heap[1]\n\n    prdebug(DEBUG_TIMER, \"Handling timers at time\", timeNow, \"( Min @\", minTimer and minTimer.time or \"NONE\", \")\")\n    while minTimer and minTimer.time <= timeNow do\n        local heapSize = #heap\n        if heapSize > 1 then\n            heap[1] = heap[heapSize]\n            heap[1].index = 1\n            heap[heapSize] = nil\n            self:fixHeapDownwards(1)\n        else\n            heap[1] = nil\n        end\n\n        minTimer.index = -1\n        minTimer.callback()\n\n        minTimer = heap[1]\n    end\n\n    self:setupCallback()\nend\n\nfunction ZT.timers:add(time, callback)\n    local heap = self.heap \n\n    local index = #heap + 1\n    local timer = {time=time, callback=callback, index=index}\n    heap[index] = timer\n\n    self:fixHeapUpwards(index)\n    self:setupCallback()\n\n    return timer\nend\n\nfunction ZT.timers:cancel(timer)\n    local index = timer.index\n    if index == -1 then\n        return\n    end\n\n    timer.index = -1\n\n    local heap = self.heap\n    local heapSize = #heap\n    if heapSize ~= index then\n        heap[index] = heap[heapSize]\n        heap[index].index = index\n        heap[heapSize] = nil\n        self:fixHeapDownwards(index)\n        self:setupCallback()\n    else\n        heap[index] = nil\n    end\nend\n\nfunction ZT.timers:update(timer, time)\n    local heap = self.heap \n\n    local fixHeapFunc = (time <= timer.time) and self.fixHeapUpwards or self.fixHeapDownwards\n    timer.time = time\n\n    fixHeapFunc(self, timer.index)\n    self:setupCallback()\nend\n\n--##############################################################################\n-- Managing the set of <spell, member> pairs that are being watched\n\nlocal WatchInfo = { nextID = 1 }\nlocal WatchInfoMT = { __index = WatchInfo }\n\nZT.watching = {}\n\nfunction WatchInfo:create(member, specInfo, spellInfo, isHidden)\n    local watchInfo = {\n        watchID = self.nextID,\n        member = member,\n        spellInfo = spellInfo,\n        duration = member:calcSpellCD(spellInfo, specInfo),\n        expiration = GetTime(),\n        charges = spellInfo.charges,\n        isHidden = isHidden,\n        isLazy = spellInfo.isLazy,\n        ignoreSharing = false,\n    }\n    self.nextID = self.nextID + 1\n\n    watchInfo = setmetatable(watchInfo, WatchInfoMT)\n    return watchInfo\nend\n\nfunction WatchInfo:sendAddEvent()\n    if not self.isLazy and not self.isHidden then\n        local spellInfo = self.spellInfo\n        prdebug(DEBUG_EVENT, \"Sending ZT_ADD\", spellInfo.type, self.watchID, self.member.name, spellInfo.spellID, self.duration, self.charges)\n        WeakAuras.ScanEvents(\"ZT_ADD\", spellInfo.type, self.watchID, self.member, spellInfo.spellID, self.duration, self.charges)\n        \n        if self.expiration > GetTime() then\n            self:sendTriggerEvent()\n        end\n    end\nend\n\nfunction WatchInfo:sendTriggerEvent()\n    if self.isLazy then\n        self.isLazy = false\n        self:sendAddEvent()\n    end\n\n    if not self.isHidden then\n        prdebug(DEBUG_EVENT, \"Sending ZT_TRIGGER\", self.spellInfo.type, self.watchID, self.duration, self.expiration, self.charges)\n        WeakAuras.ScanEvents(\"ZT_TRIGGER\", self.spellInfo.type, self.watchID, self.duration, self.expiration, self.charges)\n    end\nend\n\nfunction WatchInfo:sendRemoveEvent()\n    if not self.isLazy and not self.isHidden then\n        prdebug(DEBUG_EVENT, \"Sending ZT_REMOVE\", self.spellInfo.type, self.watchID)\n        WeakAuras.ScanEvents(\"ZT_REMOVE\", self.spellInfo.type, self.watchID)\n    end\nend\n\nfunction WatchInfo:hide()\n    if not self.isHidden then\n        self:sendRemoveEvent()\n        self.isHidden = true\n    end\nend\n\nfunction WatchInfo:unhide(suppressAddEvent)\n    if self.isHidden then\n        self.isHidden = false\n        if not suppressAddEvent then\n            self:sendAddEvent()\n        end\n    end\nend\n\nfunction WatchInfo:toggleHidden(toggle, suppressAddEvent)\n    if toggle then\n        self:hide()\n    else\n        self:unhide(suppressAddEvent)\n    end\nend\n\nfunction WatchInfo:handleReadyTimer()\n    if self.charges then\n        self.charges = self.charges + 1\n\n        -- If we are not at max charges, update expiration and start a ready timer\n        if self.charges < self.spellInfo.charges then\n            self.expiration = self.expiration + self.duration\n            prdebug(DEBUG_TIMER, \"Adding ready timer of\", self.expiration, \"for spellID\", self.spellInfo.spellID)\n            self.readyTimer = ZT.timers:add(self.expiration, function() self:handleReadyTimer() end)\n        else\n            self.readyTimer = nil\n        end\n    else\n        self.readyTimer = nil\n    end\n\n    self:sendTriggerEvent()\nend\n\nfunction WatchInfo:updateReadyTimer() -- Returns true if a timer was set, false if handled immediately\n    if self.expiration > GetTime() then\n        if self.readyTimer then\n            prdebug(DEBUG_TIMER, \"Updating ready timer from\", self.readyTimer.time, \"to\", self.expiration, \"for spellID\", self.spellInfo.spellID)\n            ZT.timers:update(self.readyTimer, self.expiration)\n        else\n            prdebug(DEBUG_TIMER, \"Adding ready timer of\", self.expiration, \"for spellID\", self.spellInfo.spellID)\n            self.readyTimer = ZT.timers:add(self.expiration, function() self:handleReadyTimer() end)\n        end\n\n        return true\n    else\n        if self.readyTimer then\n            prdebug(DEBUG_TIMER, \"Canceling ready timer for spellID\", self.spellInfo.spellID)\n            ZT.timers:cancel(self.readyTimer)\n            self.readyTimer = nil\n        end\n\n        self:handleReadyTimer(self.expiration)\n        return false\n    end\nend\n\nfunction WatchInfo:startCD()\n    if self.charges then\n        if self.charges == 0 or self.charges == self.spellInfo.charges then\n            self.expiration = GetTime() + self.duration\n            self:updateReadyTimer()\n        end\n\n        if self.charges > 0 then\n            self.charges = self.charges - 1\n        end\n    else\n        self.expiration = GetTime() + self.duration\n        self:updateReadyTimer()\n    end\n\n    self:sendTriggerEvent()\nend\n\nfunction WatchInfo:updateCDDelta(delta)\n    self.expiration = self.expiration + delta\n\n    local time = GetTime()\n    local remaining = self.expiration - time\n\n    if self.charges and remaining <= 0 then\n        local chargesGained = 1 - floor(remaining / self.duration)\n        self.charges = max(self.charges + chargesGained, self.spellInfo.charges)\n        if self.charges == self.spellInfo.charges then\n            self.expiration = time\n        else\n            self.expiration = self.expiration + (chargesGained * self.duration)\n        end\n    end\n\n    if self:updateReadyTimer() then\n        self:sendTriggerEvent()\n    end\nend\n\nfunction WatchInfo:updateCDRemaining(remaining)\n    -- Note: This assumes that when remaining is 0 and the spell uses charges then it gains a charge\n    if self.charges and remaining == 0 then\n        if self.charges < self.spellInfo.charges then\n            self.charges = self.charges + 1\n        end\n\n        -- Below maximum charges the expiration time doesn't change\n        if self.charges < self.spellInfo.charges then\n            self:sendTriggerEvent() \n        else\n            self.expiration = GetTime()\n            self:updateReadyTimer()\n        end\n    else\n        self.expiration = GetTime() + remaining\n        if self:updateReadyTimer() then\n            self:sendTriggerEvent() \n        end\n    end\nend\n\nfunction WatchInfo:updatePlayerCharges()\n    charges = GetSpellCharges(self.spellInfo.spellID)\n    if charges then\n        self.charges = charges\n    end\nend\n\nfunction WatchInfo:updatePlayerCD(spellID, ignoreIfReady)\n    local startTime, duration, enabled\n    if self.charges then\n        local charges, maxCharges\n        charges, maxCharges, startTime, duration = GetSpellCharges(spellID)\n        if charges == maxCharges then\n            startTime = 0\n        end\n        enabled = 1\n        self.charges = charges\n    else\n        startTime, duration, enabled = GetSpellCooldown(spellID)\n    end\n\n    if enabled ~= 0 then\n        local ignoreRateLimit\n        if startTime ~= 0 then\n            ignoreRateLimit = (self.expiration < GetTime())\n            self.duration = duration\n            self.expiration = startTime + duration\n        else\n            ignoreRateLimit = true\n            self.expiration = GetTime()\n        end\n        \n        if (not ignoreIfReady) or (startTime ~= 0) then\n            ZT:sendCDUpdate(self, ignoreRateLimit)\n            self:sendTriggerEvent()\n        end\n    end\nend\n\nfunction ZT:togglePlayerHandlers(watchInfo, enable)\n    local spellID = watchInfo.spellInfo.spellID\n    local toggleHandlerFunc = enable and self.eventHandlers.add or self.eventHandlers.remove\n    \n    if enable then\n        WeakAuras.WatchSpellCooldown(spellID)\n    end\n    toggleHandlerFunc(self.eventHandlers, \"SPELL_COOLDOWN_CHANGED\", spellID, 0, watchInfo.updatePlayerCD, watchInfo)\n    \n    local links = self.separateLinkedSpellIDs[spellID]\n    if links then\n        for _,linkedSpellID in ipairs(links) do\n            if enable then\n                WeakAuras.WatchSpellCooldown(linkedSpellID)\n            end\n            toggleHandlerFunc(self.eventHandlers, \"SPELL_COOLDOWN_CHANGED\", linkedSpellID, 0, watchInfo.updatePlayerCD, watchInfo)\n        end\n    end\nend\n\nfunction ZT:toggleCombatLogHandlers(watchInfo, enable, specInfo)\n    local spellInfo = watchInfo.spellInfo\n    local spellID = spellInfo.spellID\n    local member = watchInfo.member\n    local toggleHandlerFunc = enable and self.eventHandlers.add or self.eventHandlers.remove\n    \n    if not spellInfo.ignoreCast then\n        toggleHandlerFunc(self.eventHandlers, \"SPELL_CAST_SUCCESS\", spellID, member.GUID, watchInfo.startCD, watchInfo)\n        \n        local links = self.linkedSpellIDs[spellID]\n        if links then\n            for _,linkedSpellID in ipairs(links) do\n                toggleHandlerFunc(self.eventHandlers, \"SPELL_CAST_SUCCESS\", linkedSpellID, member.GUID, watchInfo.startCD, watchInfo)\n            end\n        end\n    end\n    \n    for _,modifier in pairs(spellInfo.mods) do\n        if modifier.type == \"Dynamic\" then\n            for _,handlerInfo in ipairs(modifier.handlers) do\n                toggleHandlerFunc(self.eventHandlers, handlerInfo.type, handlerInfo.spellID, member.GUID, handlerInfo.handler, watchInfo)\n            end\n        end\n    end\n    \n    if spellInfo.modTalents then\n        for talent, modifiers in pairs(spellInfo.modTalents) do\n            if specInfo.talentsMap[talent] then\n                for _, modifier in pairs(modifiers) do\n                    if modifier.type == \"Dynamic\" then\n                        for _,handlerInfo in ipairs(modifier.handlers) do\n                            toggleHandlerFunc(self.eventHandlers, handlerInfo.type, handlerInfo.spellID, member.GUID, handlerInfo.handler, watchInfo)\n                        end\n                    end\n                end\n            end\n        end\n    end\nend\n\nfunction ZT:watch(spellInfo, member, specInfo)\n    -- Only handle registered spells (or those for the player)\n    if not spellInfo.isRegistered and not member.isPlayer then\n        return\n    end\n    \n    local spellID = spellInfo.spellID\n    local spells = self.watching[spellID]\n    if not spells then\n        spells = {}\n        self.watching[spellID] = spells\n    end\n\n    specInfo = specInfo or member.specInfo\n    local isHidden = (member.isPlayer and not spellInfo.isRegistered) or member.isHidden\n    \n    local watchInfo = spells[member.GUID]\n    local isNew = (watchInfo == nil)\n    if not watchInfo then\n        watchInfo = WatchInfo:create(member, specInfo, spellInfo, isHidden)\n        spells[member.GUID] = watchInfo\n        member.watching[spellID] = watchInfo\n    else\n        watchInfo.spellInfo = spellInfo\n        watchInfo.charges = spellInfo.charges\n        watchInfo.duration = member:calcSpellCD(spellInfo, specInfo)\n        watchInfo:toggleHidden(isHidden, true) -- We will send the ZT_ADD event later\n    end\n\n    if member.isPlayer then\n        watchInfo:updatePlayerCharges()\n        watchInfo:sendAddEvent()\n\n        watchInfo:updatePlayerCD(spellID, true)\n        \n        local links = self.separateLinkedSpellIDs[spellID]\n        if links then\n            for _,linkedSpellID in ipairs(links) do\n                watchInfo:updatePlayerCD(linkedSpellID, true)\n            end\n        end\n    else\n        watchInfo:sendAddEvent()\n    end \n\n    if member.isPlayer and not TEST_CLEU then\n        if isNew then\n            self:togglePlayerHandlers(watchInfo, true)\n        end\n    elseif member.tracking == \"CombatLog\" or (member.tracking == \"Sharing\" and member.spellsVersion < spellInfo.version) then\n        watchInfo.ignoreSharing = true\n        if not isNew then\n            self:toggleCombatLogHandlers(watchInfo, false, member.specInfo)\n        end\n        self:toggleCombatLogHandlers(watchInfo, true, specInfo)\n    else\n        watchInfo.ignoreSharing = false\n    end\nend\n\nfunction ZT:unwatch(spellInfo, member)\n    -- Only handle registered spells (or those for the player)\n    if not spellInfo.isRegistered and not member.isPlayer then\n        return\n    end\n\n    local spellID = spellInfo.spellID\n    local sources = self.watching[spellID]\n    if not sources then\n        return\n    end\n    \n    local watchInfo = sources[member.GUID]\n    if not watchInfo then\n        return\n    end\n\n    -- Ignoring unwatch requests if the spellInfo doesn't match (yet spellID does)\n    -- (Note: This serves to ease updating after spec/talent changes)\n    if watchInfo.spellInfo ~= spellInfo then\n        return\n    end\n\n    if member.isPlayer and not TEST_CLEU then\n        -- If called due to front-end unregistration, only hide it to allow continued sharing of updates\n        -- Otherwise, called due to a spec/talent change, so actually unwatch it\n        if not spellInfo.isRegistered then\n            watchInfo:hide()\n            return\n        end\n\n        self:togglePlayerHandlers(watchInfo, false)\n    elseif member.tracking == \"CombatLog\"  or (member.tracking == \"Sharing\" and member.spellsVersion < spellInfo.version) then\n        self:toggleCombatLogHandlers(watchInfo, false, member.specInfo)\n    end\n\n    if watchInfo.readyTimer then\n        self.timers:cancel(watchInfo.readyTimer)\n    end\n    \n    sources[member.GUID] = nil\n    member.watching[spellID] = nil\n    \n    watchInfo:sendRemoveEvent()\nend\n\n--##############################################################################\n-- Tracking types registered by front-end WAs\n\nfunction ZT:registerSpells(frontendID, spells)\n    for _,spellInfo in ipairs(spells) do\n        local frontends = spellInfo.frontends\n        if next(frontends, nil) ~= nil then\n            -- Some front-end already registered for this spell, so just send ADD events\n            local watched = self.watching[spellInfo.spellID]\n            if watched then\n                for _,watchInfo in pairs(watched) do\n                    if watchInfo.spellInfo == spellInfo then\n                        watchInfo:sendAddEvent()\n                    end\n                end\n            end\n        else\n            -- No front-end was registered for this spell, so watch as needed\n            spellInfo.isRegistered = true\n            for _,member in pairs(self.members) do\n                if member:knowsSpell(spellInfo) and not member.isIgnored then\n                    self:watch(spellInfo, member)\n                end\n            end\n        end\n\n        frontends[frontendID] = true\n    end\nend\n\nfunction ZT:unregisterSpells(frontendID, spells)\n    for _,spellInfo in ipairs(spells) do\n        local frontends = spellInfo.frontends\n        frontends[frontendID] = nil\n    \n        if next(frontends, nil) == nil then\n            local watched = self.watching[spellInfo.spellID]\n            if watched then\n                for _,watchInfo in pairs(watched) do\n                    if watchInfo.spellInfo == spellInfo then\n                        self:unwatch(spellInfo, watchInfo.member)\n                    end\n                end\n            end\n            spellInfo.isRegistered = false\n        end\n    end\nend\n\nfunction ZT:toggleFrontEndRegistration(frontendID, info, toggle)\n    local infoType = type(info)\n    local registerFunc = toggle and self.registerSpells or self.unregisterSpells\n\n    if infoType == \"string\" then -- Registration info is a type\n        prdebug(DEBUG_EVENT, \"Received\", toggle and \"ZT_REGISTER\" or \"ZT_UNREGISTER\", \"from\", frontendID, \"for type\", info)\n        registerFunc(self, frontendID, self.spellsByType[info])\n    elseif infoType == \"number\" then -- Registration info is a spellID\n        prdebug(DEBUG_EVENT, \"Received\", toggle and \"ZT_REGISTER\" or \"ZT_UNREGISTER\", \"from\", frontendID, \"for spellID\", info)\n        registerFunc(self, frontendID, self.spellsByID[info])\n    elseif infoType == \"table\" then -- Registration info is a table of types or spellIDs\n        infoType = type(info[1])\n\n        if infoType == \"string\" then\n            prdebug(DEBUG_EVENT, \"Received\", toggle and \"ZT_REGISTER\" or \"ZT_UNREGISTER\", \"from\", frontendID, \"for multiple types\")\n            for _,type in ipairs(info) do\n                registerFunc(self, frontendID, self.spellsByType[type])\n            end\n        elseif infoType == \"number\" then\n            prdebug(DEBUG_EVENT, \"Received\", toggle and \"ZT_REGISTER\" or \"ZT_UNREGISTER\", \"from\", frontendID, \"for multiple spells\")\n            for _,spellID in ipairs(info) do\n                registerFunc(self, frontendID, self.spellsByID[spellID])\n            end\n        end\n    end\nend\n\nfunction ZT:registerFrontEnd(frontendID, info)\n    self:toggleFrontEndRegistration(frontendID, info, true)\nend\n\nfunction ZT:unregisterFrontEnd(frontendID, info)\n    self:toggleFrontEndRegistration(frontendID, info, false)\nend\n\n\n--##############################################################################\n-- Managing member information (e.g., spec, talents) for all group members\n\nlocal Member = { }\nlocal MemberMT = { __index = Member }\n\nZT.members = {}\nZT.inEncounter = false\n\nlocal membersToIgnore = {}\nif ZT.config[\"ignoreList\"] then\n    local ignoreListStr = trim(ZT.config[\"ignoreList\"])\n    if ignoreListStr ~= \"\" then\n        ignoreListStr = \"return \"..ignoreListStr\n        local ignoreList = WeakAuras.LoadFunction(ignoreListStr, \"ZenTracker Ignore List\")\n        if ignoreList and (type(ignoreList) == \"table\") then\n            for i,name in ipairs(ignoreList) do\n                if type(name) == \"string\" then\n                    membersToIgnore[strlower(name)] = true\n                else\n                    prerror(\"Ignore list entry\", i, \"is not a string. Skipping...\")\n                end\n            end\n        else\n            prerror(\"Ignore list is not in the form of a table. For example: {\\\"Zenlia\\\", \\\"Cistara\\\"}\")\n        end\n    end\nend\n\nfunction Member:create(memberInfo)\n    local member = memberInfo\n    member.watching = {}\n    member.tracking = member.tracking and member.tracking or \"CombatLog\"\n    member.isPlayer = (member.GUID == UnitGUID(\"player\"))\n    member.isHidden = false\n    member.isReady = false\n\n    return setmetatable(member, MemberMT)\nend\n\nfunction Member:gatherInfo()\n    local _,className,_,race,_,name = GetPlayerInfoByGUID(self.GUID)\n    self.name = name and gsub(name, \"%-[^|]+\", \"\") or nil\n    self.class = className and AllClasses[className] or nil\n    self.classID = className and AllClasses[className].ID or nil\n    self.classColor = className and RAID_CLASS_COLORS[className] or nil\n    self.race = race\n    \n    if (self.tracking == \"Sharing\") and self.name then\n        prdebug(DEBUG_TRACKING, self.name, \"is using ZenTracker with spellsVersion\", self.spellsVersion)\n    end\n\n    if self.name and membersToIgnore[strlower(self.name)] then\n        self.isIgnored = true\n        return false\n    end\n\n    self.isReady = (self.name ~= nil) and (self.classID ~= nil) and (self.race ~= nil)\n    return self.isReady\nend\n\nfunction Member:knowsSpell(spellInfo, specInfo)\n    specInfo = specInfo or self.specInfo\n    \n    if spellInfo.race and spellInfo.race ~= self.race then\n        return false\n    end\n    if spellInfo.class and spellInfo.class.ID ~= self.classID then\n        return false\n    end\n    if spellInfo.specs and (not specInfo.specID or not spellInfo.specs[specInfo.specID]) then\n        return false\n    end\n    \n    if not spellInfo.reqTalents then\n        return true\n    end\n    for _,t in ipairs(spellInfo.reqTalents) do\n        if specInfo.talentsMap[t] then\n            return true\n        end\n    end\n\n    return false\nend\n\nfunction Member:calcSpellCD(spellInfo, specInfo)\n    specInfo = specInfo or self.specInfo\n    \n    local cooldown = spellInfo.baseCD\n    if spellInfo.modTalents then\n        for talent,modifiers in pairs(spellInfo.modTalents) do\n            if specInfo.talentsMap[talent] then\n                for _,modifier in ipairs(modifiers) do\n                    if modifier.type == \"Static\" then\n                        if modifier.sub then\n                            cooldown = cooldown - modifier.sub\n                        elseif modifier.mul then\n                            cooldown = cooldown * modifier.mul\n                        end\n                    end\n                end\n            end\n        end\n    end\n    \n    return cooldown\nend\n\nfunction Member:hide()\n    if not self.isHidden and not self.isPlayer then\n        self.isHidden = true\n        for _,watchInfo in pairs(self.watching) do\n            watchInfo:hide()\n        end\n    end\nend\n\nfunction Member:unhide()\n    if self.isHidden and not self.isPlayer then\n        self.isHidden = false\n        for _,watchInfo in pairs(self.watching) do\n            watchInfo:unhide()\n        end\n    end\nend\n\nfunction ZT:addOrUpdateMember(memberInfo)\n    local specInfo = memberInfo.specInfo\n\n    local member = self.members[memberInfo.GUID]\n    if not member then\n        member = Member:create(memberInfo)\n        self.members[member.GUID] = member\n    end\n\n    if member.isIgnored then\n        return\n    end\n\n    -- Update if the member is now ready, or if they swapped specs/talents\n    local needsUpdate = not member.isReady and member:gatherInfo()\n    local needsSpecUpdate = specInfo.specID and (specInfo.specID ~= member.specInfo.specID)\n    local needsTalentUpdate = specInfo.talents and (specInfo.talents ~= member.specInfo.talents)\n\n    if member.isReady and (needsUpdate or needsSpecUpdate or needsTalentUpdate) then\n        -- This handshake comes before any cooldown updates for newly watched spells\n        if member.isPlayer then\n            self:sendHandshake(specInfo)\n        end\n\n        -- If we are in an encounter, hide the member if they are outside the player's instance\n        -- (Note: Previously did this on member creation, which seemed to introduce false positives)\n        if needsUpdate and self.inEncounter and not member.isPlayer then\n            local _,_,_,instanceID = UnitPosition(\"player\")\n            local _,_,_,mInstanceID = UnitPosition(self.inspectLib:GuidToUnit(member.GUID))\n            if instanceID ~= mInstanceID then\n                member:hide()\n            end\n        end\n\n        -- Generic Spells (i.e., no class/race/spec)\n        -- Note: These are set once and never change\n        if needsUpdate then\n            for _,spellInfo in ipairs(self.spellsByClass[\"None\"]) do\n                self:watch(spellInfo, member, specInfo)\n            end\n        end\n\n        -- Class Spells (Base) + Race Spells\n        -- Note: These are set once and never change\n        if needsUpdate then\n            for _,spellInfo in ipairs(self.spellsByRace[member.race][member.class]) do\n                self:watch(spellInfo, member, specInfo)\n            end\n\n            for _,spellInfo in ipairs(self.spellsByClass[member.class][\"Base\"]) do\n                self:watch(spellInfo, member, specInfo)\n            end\n        end\n\n        -- Class Spells (Talented)\n        if needsUpdate or needsTalentUpdate then\n            local classSpells = self.spellsByClass[member.class]\n\n            for talent,_ in pairs(specInfo.talentsMap) do\n                for _,spellInfo in ipairs(classSpells[talent]) do\n                    self:watch(spellInfo, member, specInfo)\n                end\n            end\n\n            if needsTalentUpdate then\n                for talent,_ in pairs(member.specInfo.talentsMap) do\n                    if not specInfo.talentsMap[talent] then\n                        for _,spellInfo in ipairs(classSpells[talent]) do\n                            if not member:knowsSpell(spellInfo, specInfo) then\n                                self:unwatch(spellInfo, member)\n                            else\n                                self:watch(spellInfo, member, specInfo)\n                            end\n                        end\n                    end\n                end\n            end\n        end\n\n        -- Specialization Spells (Base/Talented)\n        if (needsUpdate or needsSpecUpdate or needsTalentUpdate) and specInfo.specID then\n            local specSpells = self.spellsBySpec[specInfo.specID]\n\n            if needsUpdate or needsSpecUpdate then\n                for _,spellInfo in ipairs(specSpells[\"Base\"]) do\n                    self:watch(spellInfo, member, specInfo)\n                end\n            end\n            for talent,_ in pairs(specInfo.talentsMap) do\n                for _,spellInfo in ipairs(specSpells[talent]) do\n                    self:watch(spellInfo, member, specInfo)\n                end\n            end\n\n            if (needsSpecUpdate or needsTalentUpdate) and member.specInfo.specID then\n                specSpells = self.spellsBySpec[member.specInfo.specID]\n\n                if needsSpecUpdate then\n                    for _,spellInfo in ipairs(specSpells[\"Base\"]) do\n                        if not member:knowsSpell(spellInfo, specInfo) then\n                            self:unwatch(spellInfo, member)\n                        else\n                            self:watch(spellInfo, member, specInfo)\n                        end\n                    end\n                end\n\n                for talent,_ in pairs(member.specInfo.talentsMap) do\n                    if not specInfo.talentsMap[talent] then\n                        for _,spellInfo in ipairs(specSpells[talent]) do\n                            if not member:knowsSpell(spellInfo, specInfo) then\n                                self:unwatch(spellInfo, member)\n                            else\n                                self:watch(spellInfo, member, specInfo)\n                            end\n                        end\n                    end\n                end\n            end\n        end\n        \n        member.specInfo = specInfo\n    end\n \n    -- If tracking changed from \"CombatLog\" to \"Sharing\", remove unnecessary event handlers and send a handshake/updates\n    if (member.tracking == \"CombatLog\") and (memberInfo.tracking == \"Sharing\") then\n        member.tracking = \"Sharing\"\n        member.spellsVersion = memberInfo.spellsVersion\n        \n        if member.name then\n            prdebug(DEBUG_TRACKING, member.name, \"is using ZenTracker with spell list version\", member.spellsVersion)\n        end\n        \n        for _,watchInfo in pairs(member.watching) do\n            if watchInfo.spellInfo.version <= member.spellsVersion then\n                watchInfo.ignoreSharing = false\n                self:toggleCombatLogHandlers(watchInfo, false, member.specInfo)\n            end\n        end\n        \n        self:sendHandshake()\n        local time = GetTime()\n        for _,watchInfo in pairs(self.members[UnitGUID(\"player\")].watching) do\n            if watchInfo.expiration > time then\n                self:sendCDUpdate(watchInfo)\n            end\n        end\n    end\nend\n\n--##############################################################################\n-- Handling raid and M+ encounters\n\nfunction ZT:resetEncounterCDs()\n    for _,member in pairs(self.members) do\n        local resetMemberCDs = not member.isPlayer and member.tracking ~= \"Sharing\"\n\n        for _,watchInfo in pairs(member.watching) do\n            if resetMemberCDs and watchInfo.duration >= 180 then\n                watchInfo.charges = watchInfo.spellInfo.charges\n                watchInfo:updateCDRemaining(0)\n            end\n\n            -- If spell uses lazy tracking and it was triggered, reset lazy tracking at this point\n            if watchInfo.spellInfo.isLazy and not watchInfo.isLazy then\n                watchInfo:sendRemoveEvent()\n                watchInfo.isLazy = true\n            end\n        end\n    end\nend\n\nfunction ZT:startEncounter(event)\n    self.inEncounter = true\n\n    local _,_,_,instanceID = UnitPosition(\"player\")\n    for _,member in pairs(self.members) do\n        local _,_,_,mInstanceID = UnitPosition(self.inspectLib:GuidToUnit(member.GUID))\n        if mInstanceID ~= instanceID then\n            member:hide()\n        else\n            member:unhide() -- Note: Shouldn't be hidden, but just in case...\n        end\n    end\n    \n    if event == \"CHALLENGE_MODE_START\" then\n        self:resetEncounterCDs()\n    end\nend\n\nfunction ZT:endEncounter(event)\n    if self.inEncounter then\n        self.inEncounter = false\n        for _,member in pairs(self.members) do\n            member:unhide()\n        end\n    end\n    \n    if event == \"ENCOUNTER_END\" then\n        self:resetEncounterCDs()\n    end\nend\n\n--##############################################################################\n-- Handling the exchange of addon messages with other ZT clients\n--\n-- Message Format = <Protocol Version (%d)>:<Message Type (%s)>:<Member GUID (%s)>...\n--   Type = \"H\" (Handshake)\n--     ...:<Spec ID (%d)>:<Talents (%s)>:<IsInitial? (%d) [2]>:<Spells Version (%d) [2]>\n--   Type = \"U\" (CD Update)\n--     ...:<Spell ID (%d)>:<Duration (%f)>:<Remaining (%f)>:<#Charges (%d) [3]>\n\nZT.protocolVersion = 3\n\nZT.timeBetweenHandshakes = 5 --seconds\nZT.timeOfNextHandshake = 0\nZT.handshakeTimer = nil\n\nZT.timeBetweenCDUpdates = 5 --seconds (per spellID)\nZT.timeOfNextCDUpdate = {}\nZT.updateTimers = {}\n\nlocal function sendMessage(message)\n    prdebug(DEBUG_MESSAGE, \"Sending message '\"..message..\"'\")\n\n    if not IsInGroup() and not IsInRaid() then\n        return\n    end\n\n    local channel = IsInGroup(2) and \"INSTANCE_CHAT\" or \"RAID\"\n    C_ChatInfo.SendAddonMessage(\"ZenTracker\", message, channel)\nend\n\nZT.hasSentHandshake = false\nfunction ZT:sendHandshake(specInfo)\n    local time = GetTime()\n    if time < self.timeOfNextHandshake then\n        if not self.handshakeTimer then\n            self.handshakeTimer = self.timers:add(self.timeOfNextHandshake, function() self:sendHandshake() end)\n        end\n        return\n    end\n    \n    local GUID = UnitGUID(\"player\")\n    if not self.members[GUID] then\n        return -- This may happen when rejoining a group after login, so ignore this attempt to send a handshake\n    end\n\n    specInfo = specInfo or self.members[GUID].specInfo\n    local specID = specInfo.specID or 0\n    local talents = specInfo.talents or \"\"\n    local isInitial = self.hasSentHandshake and 0 or 1\n    local message = string.format(\"%d:H:%s:%d:%s:%d:%d\", self.protocolVersion, GUID, specID, talents, isInitial, self.spellsVersion)\n    sendMessage(message)\n    \n    self.hasSentHandshake = true\n    self.timeOfNextHandshake = time + self.timeBetweenHandshakes\n    if self.handshakeTimer then\n        self.timers:cancel(self.handshakeTimer)\n        self.handshakeTimer = nil\n    end\nend\n\nfunction ZT:sendCDUpdate(watchInfo, ignoreRateLimit)\n    local spellID = watchInfo.spellInfo.spellID\n    local time = GetTime()\n\n    local timer = self.updateTimers[spellID]\n    if ignoreRateLimit then\n        if timer then\n            self.timers:cancel(timer)\n            self.updateTimers[spellID] = nil\n        end\n    elseif timer then\n        return\n    else\n        local timeOfNextCDUpdate = self.timeOfNextCDUpdate[spellID]\n        if timeOfNextCDUpdate and (time < timeOfNextCDUpdate) then\n            self.updateTimers[spellID] = self.timers:add(timeOfNextCDUpdate, function() self:sendCDUpdate(watchInfo, true) end)\n            return\n        end\n    end\n    \n    local GUID = watchInfo.member.GUID\n    local duration = watchInfo.duration\n    local remaining = watchInfo.expiration - time\n    if remaining < 0 then\n        remaining = 0\n    end\n    local charges = watchInfo.charges and tostring(watchInfo.charges) or \"-\"\n    local message = string.format(\"%d:U:%s:%d:%0.2f:%0.2f:%s\", self.protocolVersion, GUID, spellID, duration, remaining, charges)\n    sendMessage(message)\n    \n    self.timeOfNextCDUpdate[spellID] = time + self.timeBetweenCDUpdates\nend\n\nfunction ZT:handleHandshake(mGUID, specID, talents, isInitial, spellsVersion)\n    specID = tonumber(specID)\n    if specID == 0 then\n        specID = nil\n    end\n    \n    local talentsMap = {}\n    if talents ~= \"\" then\n        for index in talents:gmatch(\"%d%d\") do\n            index = tonumber(index)\n            talentsMap[index] = true\n        end\n    else\n        talents = nil\n    end\n    \n    -- Protocol V2: Assume false if not present\n    if isInitial == \"1\" then\n        isInitial = true\n    else\n        isInitial = false\n    end\n    \n    -- Protocol V2: Assume spellsVersion is 1 if not present\n    if spellsVersion then\n        spellsVersion = tonumber(spellsVersion)\n        if not spellsVersion then\n            spellsVersion = 1\n        end\n    else\n        spellsVersion = 1\n    end\n    \n    local memberInfo = {\n        GUID = mGUID,\n        specInfo = {\n            specID = specID,\n            talents = talents,\n            talentsMap = talentsMap,\n        },\n        tracking = \"Sharing\",\n        spellsVersion = spellsVersion,\n    }\n    \n    self:addOrUpdateMember(memberInfo)\n    if isInitial then\n        self:sendHandshake()\n    end\nend\n\nfunction ZT:handleCDUpdate(mGUID, spellID, duration, remaining, charges)\n    local member = self.members[mGUID]\n    if not member or not member.isReady then\n        return\n    end\n    \n    spellID = tonumber(spellID)\n    duration = tonumber(duration)\n    remaining = tonumber(remaining)\n    if not spellID or not duration or not remaining then\n        return\n    end\n    \n    local sources = self.watching[spellID]\n    if sources then\n        local watchInfo = sources[member.GUID]\n        if not watchInfo or watchInfo.ignoreSharing then\n            return\n        end\n       \n        -- Protocol V3: Ignore charges if not present\n        -- (Note that this shouldn't happen because of spell list version handling)\n        if charges then\n            charges = tonumber(charges)\n            if charges then\n                watchInfo.charges = charges\n            end\n        end\n\n        watchInfo.duration = duration\n        watchInfo.expiration = GetTime() + remaining\n        watchInfo:sendTriggerEvent()\n    end\nend\n\nfunction ZT:handleMessage(message)\n    local protocolVersion, type, mGUID, arg1, arg2, arg3, arg4, arg5 = strsplit(\":\", message)\n    \n    -- Ignore any messages sent by the player\n    if mGUID == UnitGUID(\"player\") then\n        return\n    end\n    \n    prdebug(DEBUG_MESSAGE, \"Received message '\"..message..\"'\")\n    \n    if type == \"H\" then     -- Handshake\n        self:handleHandshake(mGUID, arg1, arg2, arg3, arg4, arg5)\n    elseif type == \"U\" then -- CD Update\n        self:handleCDUpdate(mGUID, arg1, arg2, arg3, arg4, arg5)\n    else\n        return\n    end\nend\n\nif not C_ChatInfo.RegisterAddonMessagePrefix(\"ZenTracker\") then\n    prerror(\"Could not register addon message prefix. Defaulting to local-only cooldown tracking.\")\nend\n\n--##############################################################################\n-- Callback functions for libGroupInspecT for updating/removing members\n\nZT.delayedUpdates = {}\n\nfunction ZT:libInspectUpdate(event, GUID, unit, info)\n    local specID = info.global_spec_id\n    if specID == 0 then\n        specID = nil\n    end\n    \n    local talents = nil\n    local talentsMap = {}\n    if info.talents then\n        for _,talentInfo in pairs(info.talents) do\n            local index = (talentInfo.tier * 10) + talentInfo.column\n            if not talents then\n                talents = \"\"..index\n            else\n                talents = talents..\",\"..index\n            end\n            \n            talentsMap[index] = true\n        end\n    end\n    \n    local memberInfo = {\n        GUID = GUID,\n        specInfo = {\n            specID = specID,\n            talents = talents,\n            talentsMap = talentsMap,\n        },\n    }\n    \n    if not self.delayedUpdates then\n        self:addOrUpdateMember(memberInfo)\n    else\n        self.delayedUpdates[#self.delayedUpdates + 1] = memberInfo\n    end\nend\n\nfunction ZT:libInspectRemove(event, GUID)\n    local member = self.members[GUID]\n    if not member then\n        return\n    end\n    \n    for _,watchInfo in pairs(member.watching) do\n        self:unwatch(watchInfo.spellInfo, member)\n    end\n    self.members[GUID] = nil\nend\n\nfunction ZT:handleDelayedUpdates()\n    if self.delayedUpdates then\n        for _,memberInfo in ipairs(self.delayedUpdates) do\n            self:addOrUpdateMember(memberInfo)\n        end\n        self.delayedUpdates = nil\n    end\nend\n\nZT.inspectLib = LibStub:GetLibrary(\"LibGroupInSpecT-1.1\", true)\n\nif ZT.inspectLib then\n    WeakAurasSaved[\"ZenTracker_AuraEnv\"] = nil -- Flushing out past garbage :)\n\n    local prevZT = _G[\"ZenTracker_AuraEnv\"]\n    if prevZT then\n        ZT.inspectLib.UnregisterAllCallbacks(prevZT)\n        if prevZT.timers then\n            prevZT.timers.heap = {}\n        end\n    end\n    _G[\"ZenTracker_AuraEnv\"] = ZT\n\n    -- If prevZT exists, we know it wasn't a login or reload. If it doesn't exist,\n    -- it still might not be a login or reload if the user is installing ZenTracker\n    -- for the first time. IsLoginFinished() takes care of the second case.\n    if prevZT or WeakAuras.IsLoginFinished() then\n        ZT.delayedUpdates = nil\n    end\n    \n    ZT.inspectLib.RegisterCallback(ZT, \"GroupInSpecT_Update\", \"libInspectUpdate\")\n    ZT.inspectLib.RegisterCallback(ZT, \"GroupInSpecT_Remove\", \"libInspectRemove\")\n\n    for unit in WA_IterateGroupMembers() do\n        local GUID = UnitGUID(unit)\n        if GUID then\n            local info = ZT.inspectLib:GetCachedInfo(GUID)\n            if info then\n                ZT:libInspectUpdate(\"Init\", GUID, unit, info)\n            else\n                ZT.inspectLib:Rescan(GUID)\n            end\n        end\n    end\nelse\n    prerror(\"LibGroupInSpecT-1.1 not found\")\nend\n",
					["do_custom"] = true,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "timed",
						["event"] = "Health",
						["names"] = {
						},
						["unit"] = "player",
						["events"] = "COMBAT_LOG_EVENT_UNFILTERED",
						["custom"] = "function(event,...)\n    if event == \"COMBAT_LOG_EVENT_UNFILTERED\" then\n        local _, eventType, _, sourceGUID, _, _, _, destGUID, _, _, _, spellID = ...\n        aura_env.eventHandlers:handle(eventType, spellID, sourceGUID)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["subeventPrefix"] = "SPELL",
						["genericShowOn"] = "showOnActive",
						["spellIds"] = {
						},
						["custom_type"] = "event",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["custom_hide"] = "timed",
						["type"] = "custom",
						["custom"] = "function (event, id)\n    aura_env.eventHandlers:handle(event, id, 0)\nend",
						["subeventSuffix"] = "_CAST_START",
						["events"] = "SPELL_COOLDOWN_CHANGED, SPELL_COOLDOWN_READY",
						["custom_type"] = "event",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
					},
					["untrigger"] = {
					},
				}, -- [2]
				{
					["trigger"] = {
						["type"] = "custom",
						["unevent"] = "auto",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(event)\n    if event == \"ENCOUNTER_START\" or event == \"ENCOUNTER_END\" then\n        local _,instanceType = IsInInstance()\n        if instanceType ~= \"raid\" then\n            return\n        end\n    end\n    \n    if event == \"ENCOUNTER_START\" or event == \"CHALLENGE_MODE_START\" then\n        aura_env:startEncounter(event)\n    elseif event == \"ENCOUNTER_END\" or event == \"CHALLENGE_MODE_COMPLETED\" or event == \"PLAYER_ENTERING_WORLD\" then\n        aura_env:endEncounter(event)\n    end\nend",
						["subeventSuffix"] = "_CAST_START",
						["custom_type"] = "event",
						["events"] = "ENCOUNTER_START,ENCOUNTER_END, CHALLENGE_MODE_START,CHALLENGE_MODE_COMPLETED,PLAYER_ENTERING_WORLD",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [3]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["use_absorbMode"] = true,
						["event"] = "Chat Message",
						["use_unit"] = true,
						["custom"] = "function (event, type, frontendID)\n    if event == \"ZT_REGISTER\" then\n        aura_env:registerFrontEnd(frontendID, type)\n    elseif event == \"ZT_UNREGISTER\" then\n        aura_env:unregisterFrontEnd(frontendID, type)\n    end\nend",
						["events"] = "ZT_REGISTER, ZT_UNREGISTER",
						["unit"] = "player",
						["subeventPrefix"] = "SPELL",
						["custom_type"] = "event",
						["unevent"] = "auto",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [4]
				{
					["trigger"] = {
						["custom_hide"] = "timed",
						["type"] = "custom",
						["custom"] = "function(event,prefix,message,type,sender)\n    if prefix == \"ZenTracker\" then\n        aura_env:handleMessage(message)\n    end\nend",
						["custom_type"] = "event",
						["events"] = "CHAT_MSG_ADDON",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
					},
					["untrigger"] = {
					},
				}, -- [5]
				{
					["trigger"] = {
						["custom_hide"] = "timed",
						["type"] = "custom",
						["custom"] = "function()\n    aura_env:sendHandshake()\nend",
						["subeventSuffix"] = "_CAST_START",
						["events"] = "GROUP_JOINED",
						["custom_type"] = "event",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
					},
					["untrigger"] = {
					},
				}, -- [6]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "SPELLS_CHANGED",
						["subeventSuffix"] = "_CAST_START",
						["check"] = "event",
						["unevent"] = "timed",
						["custom"] = "function()\n    aura_env:handleDelayedUpdates()\nend",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [7]
				["disjunctive"] = "any",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["selfPoint"] = "BOTTOM",
			["font"] = "Friz Quadrata TT",
			["version"] = 68,
			["height"] = 12.000001907349,
			["load"] = {
				["talent2"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["use_ingroup"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["single"] = "group",
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["fontSize"] = 12,
			["shadowXOffset"] = 1,
			["fixedWidth"] = 200,
			["automaticWidth"] = "Auto",
			["regionType"] = "text",
			["_table"] = "d",
			["preferToUpdate"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["wordWrap"] = "WordWrap",
			["justify"] = "LEFT",
			["semver"] = "1.1.13",
			["tocversion"] = 80200,
			["id"] = "ZenTracker (ZT) Main 2",
			["anchorFrameType"] = "SCREEN",
			["frameStrata"] = 1,
			["width"] = 6.9999642372131,
			["config"] = {
				["custom5"] = "",
				["custom8"] = "",
				["custom15"] = "",
				["custom2"] = "",
				["custom3"] = "",
				["custom9"] = "",
				["custom1"] = "",
				["custom7"] = "",
				["custom11"] = "",
				["custom14"] = "",
				["custom12"] = "",
				["ignoreList"] = "",
				["custom13"] = "",
				["custom4"] = "",
				["custom6"] = "",
				["custom10"] = "",
			},
			["uid"] = "sMRsIrjowTg",
			["authorOptions"] = {
				{
					["type"] = "description",
					["fontSize"] = "large",
					["text"] = "Custom Spell List",
					["width"] = 2,
				}, -- [1]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = "You may add custom entries to the spell list here. The format consists of a Lua table with mandatory entries of type, spellID, baseCD and optional entries of class, specs, race, mods, modTalents, reqTalents. You can look at how such values are defined in the Actions tab 'OnInit' code.",
					["width"] = 2,
				}, -- [2]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = "Example: {type=\"INTERRUPT\", spellID=183752, class=DH, baseCD=15}",
					["width"] = 2,
				}, -- [3]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = " ",
					["width"] = 2,
				}, -- [4]
				{
					["type"] = "input",
					["key"] = "custom1",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 1",
					["useLength"] = false,
				}, -- [5]
				{
					["type"] = "input",
					["key"] = "custom2",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 2",
					["useLength"] = false,
				}, -- [6]
				{
					["type"] = "input",
					["key"] = "custom3",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 3",
					["useLength"] = false,
				}, -- [7]
				{
					["type"] = "input",
					["key"] = "custom4",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 4",
					["useLength"] = false,
				}, -- [8]
				{
					["type"] = "input",
					["key"] = "custom5",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 5",
					["useLength"] = false,
				}, -- [9]
				{
					["type"] = "input",
					["key"] = "custom6",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 6",
					["useLength"] = false,
				}, -- [10]
				{
					["type"] = "input",
					["key"] = "custom7",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 7",
					["useLength"] = false,
				}, -- [11]
				{
					["type"] = "input",
					["key"] = "custom8",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 8",
					["useLength"] = false,
				}, -- [12]
				{
					["type"] = "input",
					["key"] = "custom9",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 9",
					["useLength"] = false,
				}, -- [13]
				{
					["type"] = "input",
					["key"] = "custom10",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 10",
					["useLength"] = false,
				}, -- [14]
				{
					["type"] = "input",
					["key"] = "custom11",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 11",
					["useLength"] = false,
				}, -- [15]
				{
					["type"] = "input",
					["key"] = "custom12",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 12",
					["useLength"] = false,
				}, -- [16]
				{
					["type"] = "input",
					["key"] = "custom13",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 13",
					["useLength"] = false,
				}, -- [17]
				{
					["type"] = "input",
					["key"] = "custom14",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 14",
					["useLength"] = false,
				}, -- [18]
				{
					["type"] = "input",
					["key"] = "custom15",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "Spell 15",
					["useLength"] = false,
				}, -- [19]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = " ",
					["width"] = 2,
				}, -- [20]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = " ",
					["width"] = 2,
				}, -- [21]
				{
					["type"] = "description",
					["fontSize"] = "large",
					["text"] = "Ignore List",
					["width"] = 2,
				}, -- [22]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = "You can provide a list of player names here whose cooldowns should be ignored.",
					["width"] = 2,
				}, -- [23]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = "Example: {\"Zenlia\", \"Cistara\"}",
					["width"] = 2,
				}, -- [24]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = " ",
					["width"] = 2,
				}, -- [25]
				{
					["type"] = "input",
					["key"] = "ignoreList",
					["width"] = 2,
					["default"] = "",
					["length"] = 10,
					["name"] = "",
					["useLength"] = false,
				}, -- [26]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = " ",
					["width"] = 2,
				}, -- [27]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = " ",
					["width"] = 2,
				}, -- [28]
			},
			["shadowYOffset"] = -1,
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["Pull Percent"] = {
			["outline"] = "OUTLINE",
			["authorOptions"] = {
			},
			["displayText"] = "Current pull: %c1%%\nAfter pull: %c2%%\nEnemies: %c4\n%c3",
			["customText"] = "function ()\n    if aura_env.currentPull == nil then\n        aura_env.currentPull = {}\n    end\n    if UnitAffectingCombat('player') == false then\n        aura_env.currentPull = {}\n        return 0,0,nil,0\n    end\n    \n    \n    local total = 0\n    local count = 0\n    \n    local cmLevel, affixes, empowered = C_ChallengeMode.GetActiveKeystoneInfo();\n    local teeming = false\n    \n    for _, affixID in ipairs(affixes) do\n        --local affixName, affixDesc, _ = C_ChallengeMode.GetAffixInfo(affixID);\n        if affixID == 5 then\n            teeming = true\n            --            print(\"teeming\")\n        end\n    end\n    \n    \n    \n    \n    for i = 1, 40 do\n        if UnitExists('nameplate' .. i) then\n            local guid, name = UnitGUID('nameplate' .. i), UnitName('nameplate' .. i)\n            local affectingCombat = UnitAffectingCombat('nameplate' .. i);\n            \n            local exist = false\n            \n            for index,_guid in pairs(aura_env.currentPull) do\n                if _guid == guid then \n                    exist = true\n                    if affectiongCombat == false then\n                        aura_env.currentPull[index] = nil\n                    end\n                end               \n            end\n            \n            if affectingCombat then               \n                if exist == false then\n                    table.insert(aura_env.currentPull, guid)    \n                end\n            end\n            \n        end\n    end\n    \n    for index,guid in pairs(aura_env.currentPull) do\n        local type, zero, server_id, instance_id, zone_uid, npc_id, spawn_uid = strsplit(\"-\",guid);\n        if npc_id then\n            local value, max , maxteaming = MethodDungeonTools:GetEnemyForces(math.floor(npc_id))\n            if value then\n                \n                local maxvalue = max \n                if teeming then \n                    maxvalue = maxteaming\n                end\n                local percent = value / maxvalue * 100\n                count = count + 1\n                total = total + percent\n            end\n        end\n    end\n    local progress, mobCount, currentMC, totalMC = aura_env.GetProgress()\n    \n    local rtn = {}\n    rtn[1] = math.floor(total*100) / 100\n    rtn[2] = math.floor((total + progress) * 100) / 100\n    if rtn[2] >= 20 and progress < 20 then\n        rtn[3] = 'Reaping incoming'\n    elseif rtn[2] >= 40 and progress < 40 then\n        rtn[3] = 'Reaping incoming'\n    elseif rtn[2] >= 60 and progress < 60 then\n        rtn[3] = 'Reaping incoming'                \n    elseif rtn[2] >= 80 and progress < 80 then\n        rtn[3] = 'Reaping incoming'\n    elseif rtn[2] >= 100 and progress < 100 then\n        rtn[3] = 'Reaping incoming'\n    end\n    return rtn[1], rtn[2], rtn[3], count\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
			["yOffset"] = -59.99969482421875,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.GetProgress = function()\n    local _,_,steps = C_Scenario.GetStepInfo()\n    if not steps or steps <= 0 then\n        return 0\n    end\n    \n    local percent\n    local _, _, _, _, total, _, _, current = C_Scenario.GetCriteriaInfo(steps)\n    if current then\n        current = tonumber(string.sub(current, 1, string.len(current) - 1)) or 0\n        percent = current / total * 100\n        if percent then\n            percent = (percent <= 0 and 0) or (percent > 100 and 100) or percent\n            return percent, current .. \" / \" .. total, current, total\n        end\n    end\n    return 0\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["use_alwaystrue"] = true,
						["duration"] = "1",
						["unit"] = "player",
						["debuffType"] = "HELPFUL",
						["type"] = "status",
						["custom_type"] = "status",
						["use_unit"] = true,
						["custom_hide"] = "timed",
						["event"] = "Conditions",
						["subeventSuffix"] = "_CAST_START",
						["names"] = {
						},
						["unevent"] = "auto",
						["events"] = "",
						["spellIds"] = {
						},
						["check"] = "update",
						["buffShowOn"] = "showOnActive",
						["subeventPrefix"] = "SPELL",
						["use_absorbMode"] = true,
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["duration"] = "1",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "COMBAT_LOG_EVENT_UNFILTERED",
						["unevent"] = "timed",
						["subeventSuffix"] = "_CAST_START",
						["custom"] = "function(event,_,subEvent,_,_,_,_,_,guid,whodied,dstflags)\n    local sourceGUID, sourceName, sourceFlags, sourceRaidFlags, destGUID, destName, destFlags, destRaidFlags = CombatLogGetCurrentEventInfo()\n    local player = UnitGUID('player')\n    if subEvent == \"UNIT_DIED\" then\n        if player == guid then\n            aura_env.currentPull = {}\n        end\n        \n        for index,_guid in pairs(aura_env.currentPull) do\n            if _guid == guid then \n                aura_env.currentPull[index] = nil\n            end               \n        end\n        \n        return true\n        \n    end\nend",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [2]
				{
					["trigger"] = {
						["subeventPrefix"] = "SPELL",
						["type"] = "custom",
						["events"] = "PLAYER_REGEN_ENABLED",
						["subeventSuffix"] = "_CAST_START",
						["custom_type"] = "event",
						["custom"] = "function() \n    \n    aura_env.currentPull = {}\n    \n    return true\nend",
						["event"] = "Health",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [3]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function () \nreturn true\nend",
				["activeTriggerMode"] = 1,
			},
			["internalVersion"] = 40,
			["animation"] = {
				["start"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["preset"] = "slidetop",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["preset"] = "slidebottom",
				},
			},
			["displayText_format_c2_format"] = "none",
			["desc"] = "Shows your current pull %.You need to have MDT for this to work",
			["font"] = "FORCED SQUARE",
			["version"] = 1,
			["load"] = {
				["difficulty"] = {
					["single"] = "challenge",
					["multi"] = {
					},
				},
				["use_never"] = true,
				["class"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["use_combat"] = true,
				["use_difficulty"] = true,
				["size"] = {
					["multi"] = {
					},
				},
			},
			["fontSize"] = 35,
			["shadowXOffset"] = 1,
			["selfPoint"] = "RIGHT",
			["fixedWidth"] = 200,
			["regionType"] = "text",
			["displayText_format_c4_format"] = "none",
			["xOffset"] = 948.000244140625,
			["url"] = "https://wago.io/zOMgA2qh8/1",
			["wordWrap"] = "WordWrap",
			["semver"] = "1.0.0",
			["justify"] = "RIGHT",
			["config"] = {
			},
			["id"] = "Pull Percent",
			["displayText_format_c3_format"] = "none",
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["parent"] = "A Kureq UI Customizations",
			["uid"] = "0C5i8ZeKD(X",
			["shadowYOffset"] = -1,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["displayText_format_c1_format"] = "none",
		},
		["FunGambling"] = {
			["outline"] = "OUTLINE",
			["authorOptions"] = {
			},
			["displayText"] = "%p",
			["shadowYOffset"] = -1,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["init"] = {
					["do_custom"] = true,
					["custom"] = "local channels = {\n    CHAT_MSG_SAY = { channel = 'SAY', enabled = true },\n    CHAT_MSG_YELL = { channel = 'YELL', enabled = false },\n    CHAT_MSG_CHANNEL = { channel = 'CHANNEL', enabled = false, extra = 4 },\n    CHAT_MSG_GUILD = { channel = 'GUILD', enabled = false },\n    CHAT_MSG_WHISPER = { channel = 'WHISPER', enabled = true },\n    CHAT_MSG_MSG_RAID_LEADER = { channel = 'RAID', enabled = true },\n    CHAT_MSG_MSG_RAID = { channel = 'RAID', enabled = true },\n    CHAT_MSG_PARTY_LEADER = { channel = 'PARTY', enabled = true },\n    CHAT_MSG_PARTY = { channel = 'PARTY', enabled = true },\n    CHAT_MSG_INSTANCE_CHAT = { channel = 'INSTANCE_CHAT', enabled = true },\n    CHAT_MSG_INSTANCE_CHAT_LEADER = { channel = 'INSTANCE_CHAT', enabled = true }\n}\n\naura_env.chat = function(channel, from, number)\n    if channels[channel] ~= nil and channels[channel].enabled == true then\n        SendChatMessage(aura_env.gamble(), channels[channel].channel, nil, from or nil)\n    end\nend\n\naura_env.gamble = function()\n    local x = random(1,3)\n    if(x == 1) then return 'rock'\n    elseif x == 2 then return 'scissor'\n    else return 'paper' end\nend",
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
						["names"] = {
						},
						["event"] = "Chat Message",
						["unit"] = "player",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(channel,message, a, b, target, c, d,name, number)\n    local seconds = GetTime();\n    \n    if((not aura_env.timer or (aura_env.timer + 5 < seconds)) and (message == '!gamble')) then\n        aura_env.chat(channel, a, message)\n        aura_env.timer = GetTime();\n    end\n    \nend",
						["events"] = "CHAT_MSG_SAY, CHAT_MSG_CHANNEL,CHAT_MSG_GUILD,CHAT_MSG_YELL,CHAT_MSG_WHISPER,CHAT_MSG_RAID_LEADER,CHAT_MSG_RAID,CHAT_MSG_PARTY_LEADER,CHAT_MSG_PARTY,CHAT_MSG_INSTANCE_CHAT,CHAT_MSG_INSTANCE_CHAT_LEADER",
						["unevent"] = "auto",
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["buffShowOn"] = "showOnActive",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
						["custom"] = "function()\n    return true\nend",
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["displayText_format_p_format"] = "timed",
			["internalVersion"] = 40,
			["wordWrap"] = "WordWrap",
			["font"] = "Friz Quadrata TT",
			["load"] = {
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["size"] = {
					["multi"] = {
					},
				},
			},
			["fontSize"] = 12,
			["shadowXOffset"] = 1,
			["regionType"] = "text",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayText_format_p_time_precision"] = 1,
			["displayText_format_p_time_dynamic"] = false,
			["xOffset"] = 0,
			["justify"] = "LEFT",
			["fixedWidth"] = 200,
			["id"] = "FunGambling",
			["selfPoint"] = "BOTTOM",
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["yOffset"] = 0,
			["uid"] = "Ha0jtLjhOih",
			["parent"] = "A Kureq UI Customizations",
			["config"] = {
			},
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
		},
		["Mastery"] = {
			["outline"] = "OUTLINE",
			["modelIsUnit"] = false,
			["borderBackdrop"] = "Blizzard Tooltip",
			["parent"] = "Stats",
			["displayText"] = "%c",
			["customText"] = "function ()                   \n    local masteryPercent = GetMasteryEffect();\n    \n    return \"Mastery: \"..string.format(\"%.1f\", masteryPercent) .. \"%\"\nend",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["model_x"] = 0,
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "status",
						["use_alwaystrue"] = true,
						["subeventSuffix"] = "_CAST_START",
						["duration"] = "1",
						["genericShowOn"] = "showOnActive",
						["use_unit"] = true,
						["custom_hide"] = "timed",
						["names"] = {
						},
						["spellIds"] = {
						},
						["unit"] = "player",
						["event"] = "Conditions",
						["subeventPrefix"] = "SPELL",
						["unevent"] = "auto",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["advance"] = false,
			["selfPoint"] = "BOTTOMLEFT",
			["rotation"] = 0,
			["font"] = "FORCED SQUARE",
			["xOffset"] = 0,
			["height"] = 15.316210746765,
			["model_path"] = "Creature/Arthaslichking/arthaslichking.m2",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["fontSize"] = 20,
			["sequence"] = 1,
			["wordWrap"] = "WordWrap",
			["scale"] = 1,
			["color"] = {
				0, -- [1]
				0.71764705882353, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["border"] = false,
			["borderEdge"] = "None",
			["regionType"] = "text",
			["borderSize"] = 16,
			["shadowYOffset"] = -1,
			["conditions"] = {
			},
			["shadowXOffset"] = 1,
			["uid"] = "IDhAy2Y0HhF",
			["borderOffset"] = 5,
			["justify"] = "LEFT",
			["authorOptions"] = {
			},
			["id"] = "Mastery",
			["model_y"] = 0,
			["frameStrata"] = 4,
			["width"] = 119.24786376953,
			["anchorFrameType"] = "SCREEN",
			["config"] = {
			},
			["model_z"] = 0,
			["borderInset"] = 11,
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["fixedWidth"] = 200,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
		},
		["Cooldowns on RaidFrames Demonhunter"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text1Enabled"] = true,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["text1Containment"] = "INSIDE",
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["uid"] = "IQqBdp(Puw7",
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["spellIds"] = {
						},
						["useExactSpellId"] = true,
						["auraspellids"] = {
							"212800", -- [1]
							"196555", -- [2]
							"187827", -- [3]
							"203819", -- [4]
						},
						["unit"] = "group",
						["names"] = {
						},
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["tocversion"] = 80300,
			["zoom"] = 0,
			["stickyDuration"] = false,
			["desaturate"] = false,
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["icon"] = true,
			["glowLines"] = 8,
			["text2Font"] = "Friz Quadrata TT",
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["width"] = 20,
			["wordWrap"] = "WordWrap",
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1Point"] = "BOTTOMRIGHT",
			["useglowColor"] = false,
			["alpha"] = 1,
			["semver"] = "1.0.8",
			["text2"] = "%p",
			["text1Font"] = "Friz Quadrata TT",
			["text1"] = "%s",
			["glow"] = false,
			["cooldownTextEnabled"] = false,
			["justify"] = "LEFT",
			["displayIcon"] = 841384,
			["id"] = "Cooldowns on RaidFrames Demonhunter",
			["authorOptions"] = {
			},
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["automaticWidth"] = "Auto",
			["config"] = {
			},
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["M+ - Purgeable Buffs"] = {
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["controlledChildren"] = {
				"ATDZ: Fanatic's Rage (E)", -- [1]
				"FRHD: Bestial Wrath (E)", -- [2]
				"FRHD: Blind Rage (E)", -- [3]
				"FRHD: Healing Balm", -- [4]
				"KING: Induce Regen", -- [5]
				"MOLO: Azerite Injection", -- [6]
				"MOLO: Earth Shield", -- [7]
				"MOLO: Inhale Vapors (E)", -- [8]
				"MOLO: Overcharge", -- [9]
				"MOLO: Tectonic Barrier", -- [10]
				"SGBR: Ferocity (E)", -- [11]
				"SGBR: Watertight Shell", -- [12]
				"SGBR: Bolstering Shout", -- [13]
				"STRM: Consuming Void", -- [14]
				"STRM: Detect Thoughts", -- [15]
				"STRM: Tidal Surge", -- [16]
				"TOLD: Darkstep", -- [17]
				"TOLD: Inner Flames", -- [18]
				"TSTH: Embryonic", -- [19]
				"TSTH: Charged", -- [20]
				"UNDR: Bone Shield", -- [21]
				"UNDR: Gift of G'huun", -- [22]
				"UNDR: Warcry (E)", -- [23]
				"WAYC: Enrage (E)", -- [24]
				"WAYC: Spirited Defense", -- [25]
				"WAYC: Talisman", -- [26]
			},
			["borderBackdrop"] = "Blizzard Tooltip",
			["xOffset"] = 0,
			["border"] = false,
			["borderEdge"] = "None",
			["regionType"] = "group",
			["borderSize"] = 16,
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["scale"] = 1,
			["authorOptions"] = {
			},
			["actions"] = {
				["start"] = {
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["unit"] = "player",
						["spellIds"] = {
						},
						["debuffType"] = "HELPFUL",
						["subeventPrefix"] = "SPELL",
						["names"] = {
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["anchorFrameType"] = "SCREEN",
			["borderOffset"] = 5,
			["yOffset"] = 100,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["id"] = "M+ - Purgeable Buffs",
			["anchorPoint"] = "CENTER",
			["frameStrata"] = 1,
			["desc"] = "Compiled by Chrissinger/Chrisidari <Infinity> (US-Mannoroth)                     Contact: twitter.com/chrsngr",
			["selfPoint"] = "BOTTOMLEFT",
			["uid"] = "2E)p7libElu",
			["internalVersion"] = 40,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
				["groupOffset"] = true,
			},
			["borderInset"] = 11,
			["conditions"] = {
			},
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["config"] = {
			},
		},
		["Enemy Forces Bar"] = {
			["overlays"] = {
				{
					0, -- [1]
					1, -- [2]
					0.086274509803922, -- [3]
					0.63252976536751, -- [4]
				}, -- [1]
			},
			["text2Point"] = "BOTTOM",
			["iconSource"] = 0,
			["text1FontSize"] = 16,
			["xOffset"] = 0,
			["preferToUpdate"] = false,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["sparkRotation"] = 0,
			["url"] = "https://wago.io/M+Timer/79",
			["icon"] = false,
			["icon_color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text2Font"] = "Expressway",
			["keepAspectRatio"] = false,
			["selfPoint"] = "LEFT",
			["barColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1Containment"] = "OUTSIDE",
			["glowColor"] = {
				0.90196078431373, -- [1]
				0.8, -- [2]
				0.50196078431373, -- [3]
				1, -- [4]
			},
			["text1Point"] = "TOP",
			["sparkOffsetY"] = 0,
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["use_size"] = true,
				["use_never"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["single"] = "challenge",
					["multi"] = {
						["challenge"] = true,
					},
				},
				["role"] = {
				},
				["affixes"] = {
					["single"] = 117,
					["multi"] = {
						[2] = true,
						[117] = true,
					},
				},
				["use_difficulty"] = true,
				["spec"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["party"] = true,
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["smoothProgress"] = true,
			["useAdjustededMin"] = false,
			["regionType"] = "aurabar",
			["text2FontSize"] = 16,
			["overlayclip"] = true,
			["texture"] = "Minimalist",
			["sparkTexture"] = "Interface\\CastingBar\\UI-CastingBar-Spark",
			["auto"] = false,
			["glowScale"] = 1,
			["text2Enabled"] = true,
			["glowYOffset"] = 0,
			["sparkColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayIcon"] = 236203,
			["glowLength"] = 10,
			["glow"] = false,
			["sparkOffsetX"] = 0,
			["tocversion"] = 80300,
			["parent"] = "M+ - Timer",
			["authorOptions"] = {
				{
					["type"] = "select",
					["name"] = "Decimals on Finish Time",
					["default"] = 1,
					["values"] = {
						"0", -- [1]
						"1", -- [2]
						"2", -- [3]
						"3", -- [4]
						"Disabled", -- [5]
					},
					["useDesc"] = false,
					["key"] = "Decimals",
					["width"] = 1,
				}, -- [1]
				{
					["type"] = "toggle",
					["key"] = "Remaining",
					["desc"] = "This will make the Count for Remaining Forces go down instead of up, neading less math to see how much count you still need to get",
					["default"] = false,
					["useDesc"] = true,
					["name"] = "Remaining instead of current Count",
					["width"] = 2,
				}, -- [2]
				{
					["type"] = "select",
					["name"] = "Display percent/count",
					["default"] = 1,
					["values"] = {
						"Percent&Count", -- [1]
						"Percent Only", -- [2]
						"Count Only", -- [3]
					},
					["useDesc"] = false,
					["key"] = "Display",
					["width"] = 1,
				}, -- [3]
				{
					["type"] = "toggle",
					["key"] = "totalC",
					["desc"] = "Show total Count after the /",
					["default"] = true,
					["useDesc"] = true,
					["name"] = "Show Total Count",
					["width"] = 1,
				}, -- [4]
				{
					["type"] = "select",
					["name"] = "Display Type for Current Pull",
					["default"] = 1,
					["values"] = {
						"+/- Current Pull", -- [1]
						"Count After Pull", -- [2]
						"Don't Display", -- [3]
					},
					["useDesc"] = false,
					["key"] = "CountDisplay",
					["width"] = 1,
				}, -- [5]
				{
					["type"] = "color",
					["key"] = "color",
					["default"] = {
						0, -- [1]
						1, -- [2]
						0.16862745098039, -- [3]
						1, -- [4]
					},
					["useDesc"] = false,
					["name"] = "Completion Color",
					["width"] = 1,
				}, -- [6]
			},
			["customText"] = "function()\n    if WeakAuras.IsOptionsOpen() then\n        local text1, text2, text3, text4 = aura_env.getoptionstext()\n        return text1, text2, text3, text4\n    end\n    \n    \n    \n    if aura_env.state and aura_env.state.current and aura_env.state.total then\n        \n        local text2, text3, text4 = \"\", \"\", \"\"\n        if aura_env.MDT then\n            if (aura_env.state.pullText or aura_env.state.mcpullText) and aura_env.state.totalMC > aura_env.state.currentMC then\n                if aura_env.state.mcpullCompare and aura_env.state.mcpullCompare  then\n                    text4 = aura_env.state.mcpullText\n                    if aura_env.state.pullCompare then\n                        text3 = aura_env.state.pullText\n                    end\n                end\n            end\n        end\n        \n        local text1 = aura_env.state.current\n        \n        if aura_env.finish then\n            text3 = aura_env.finishforces and aura_env.finish or \"\"\n            text1 = text1 ~= \"\" and text1..\" - \"\n        end\n        if text3 ~= \"\" and text3 ~= 0 and text3 ~= aura_env.finish then\n            if aura_env.countD == 1 then\n                if aura_env.state.pullCompare <= 0 then\n                    text3 = \"|cFF00FF00( +\"..text3..\")|r\"\n                else\n                    text3 = \" (+\"..text3..\")\"\n                end\n            else\n                if aura_env.state.pullCompare <= 0 then\n                    text3 = \"|cFF00FF00(\"..text3..\")|r\"\n                else\n                    text3 = \" (\"..text3..\")\"\n                end\n            end\n        end\n        \n        if text4 ~= \"\" and text4 ~= 0 then\n            if aura_env.countD == 1 then\n                local symbol = aura_env.remaining and \"-\" or \"+\"\n                if aura_env.state.mcpullCompare <= 0 then\n                    text4 = \"|cFF00FF00(\"..symbol..text4..\")|r\"\n                else\n                    text4 = \" (\"..symbol..text4..\")\"\n                end\n            else\n                if aura_env.state.mcpullCompare <= 0 then\n                    text4 = \"|cFF00FF00(\"..aura_env.state.mcpullCompare..\")|r\"\n                else\n                    text4 = \" (\"..aura_env.state.mcpullCompare..\")\"\n                end\n            end\n        end\n        \n        \n        if aura_env.remaining then\n            if aura_env.totalC then\n                text2 = aura_env.state.mcCompare..\"/\"..aura_env.state.totalMC\n            else\n                text2 = aura_env.state.mcCompare\n            end\n        else\n            if aura_env.state.totalMC > 1 then\n                if aura_env.totalC then\n                    text2 = aura_env.state.currentMC..\"/\"..aura_env.state.totalMC\n                else\n                    text2 = aura_env.state.currentMC\n                end\n            end\n        end\n        text1 = ((aura_env.display == 1 or aura_env.display == 2) and text1) or \"\"\n        text3 = ((aura_env.display == 1 or aura_env.display == 2) and text3) or \"\"\n        text2 = ((aura_env.display == 1 or aura_env.display == 3) and text2) or \"\"\n        text4 = ((aura_env.display == 1 or aura_env.display == 3) and text4) or \"\"\n        return text1, text3, text2, text4\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
			["cooldownTextDisabled"] = false,
			["text1Enabled"] = true,
			["alpha"] = 1,
			["cooldownSwipe"] = true,
			["text2"] = "%c2",
			["sparkRotationMode"] = "AUTO",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "ObjectiveTrackerFrame:Hide()\n\n",
					["do_custom"] = true,
					["sound"] = "Interface\\Addons\\WeakAuras\\PowerAurasMedia\\Sounds\\chant4.ogg",
					["do_sound"] = false,
				},
				["init"] = {
					["custom"] = "aura_env.decimals = aura_env.config[\"Decimals\"] < 5 and aura_env.config[\"Decimals\"]-1\naura_env.finishforces = aura_env.config[\"Decimals\"] ~= 5\naura_env.pullcount = aura_env.config[\"CountDisplay\"] ~= 3\naura_env.countD = aura_env.config[\"CountDisplay\"]\naura_env.remaining = aura_env.config[\"Remaining\"]\naura_env.display = aura_env.config[\"Display\"]\naura_env.totalC = aura_env.config[\"totalC\"]\naura_env.total = aura_env.total or 0\naura_env.done = aura_env.done or false\naura_env.update = false\naura_env.total = 0\naura_env.obelisks = {\n    [\"161241\"] = true,\n    [\"161243\"] = true,\n    [\"161244\"] = true,\n    [\"161124\"] = true,\n    -- [\"127477\"] = true,\n}\n\nlocal c = aura_env.config.color\nlocal col = {}\n\nfor i=1, 4 do\n    if i == 1 then \n        col[i] = string.format(\"%x\", c[i] *255*255)\n    else\n        col[i] = string.format(\"%x\", c[i] *255)\n    end\n    if col[i] == \"0\" then\n        col[i] = \"00\"\n    end\nend\n\naura_env.color = \"|c\"..col[4]..col[1]..col[2]..col[3]\n\naura_env.GetProgress = function()\n    local steps = select(3, C_Scenario.GetStepInfo())\n    if not steps or steps <= 0 then\n        return\n    end\n    local _, _, _, _, total, _, _, current = C_Scenario.GetCriteriaInfo(steps)\n    if current then\n        current = tonumber(string.sub(current, 1, string.len(current) - 1)) or 0\n        local percent = current / total * 100\n        if percent then\n            percent = (percent <= 0 and 0) or (percent > 100 and 100) or percent\n            return percent, current..\" / \"..total, current, total\n        end\n    end\n    return false\nend\n\naura_env.MDT = MDT\n\naura_env.formattime = function(time)\n    local timeMin = math.floor(time / 60)\n    local timeSec = math.floor(time - (timeMin*60))\n    if timeMin < 10 then\n        timeMin = (\"0%d\"):format(timeMin)\n    end\n    if timeSec < 10 then\n        timeSec = (\"0%d\"):format(timeSec)\n    end\n    \n    local timeMS  = select(2, strsplit(\".\", (time))) or select(2, strsplit(\".\", (GetTime()-time)))\n    local timeMS100 = math.floor(timeMS/100)\n    local timeMS10 = math.floor((timeMS-(timeMS100*100))/10)\n    local timeMS1 =timeMS-(timeMS100*100)-(timeMS10*10)\n    \n    timeMS = (\".%s%s%s\"):format(timeMS100, timeMS10, timeMS1)\n    timeMS = (aura_env.decimals == 0 and \"\") or (timeMS and string.sub(timeMS, 1, aura_env.decimals+1))\n    return (aura_env.color..\"%s:%s%s|r\"):format(timeMin, timeSec, timeMS)\nend\n\nif not aura_env.region.hideobj then\n    aura_env.region.hideobj = true\n    hooksecurefunc(ObjectiveTrackerFrame, \"Show\", function() \n            if IsInInstance() then ObjectiveTrackerFrame:Hide() \n            end \n    end)\nend\n\naura_env.getoptionstext = function()\n    local count = 120\n    local max = 400\n    local pullC = 10\n    local perc = \"30.00%\"\n    local percC = \"2.50%\"\n    local percC2 = \"32.50%\"\n    local text1, text2, text3, text4 = \"\", \"\", \"\", \"\"\n    local dis = aura_env.config[\"Display\"]\n    if dis == 1 or dis == 2 then\n        text1 = perc\n        if aura_env.pullcount then\n            if aura_env.countD == 1 then\n                text2 = \"(+\"..percC..\")\"\n            else\n                text2 = \"(\"..percC2..\")\"\n            end\n        end\n        -- percent shit\n    end\n    if dis == 1 or dis == 3 then\n        if aura_env.remaining then\n            if aura_env.totalC then\n                text3 = max-count..\"/\"..max\n            else\n                text3 = max-count\n            end\n            if aura_env.pullcount then\n                if aura_env.countD == 1 then\n                    text4 = \"(-\"..pullC..\")\"\n                else\n                    text4 = \"(\"..max-count-pullC..\")\"\n                end\n            end\n        else\n            if aura_env.totalC then\n                text3 = count..\"/\"..max\n            else\n                text3 = count\n            end\n            if aura_env.pullcount then\n                if aura_env.countD == 1 then\n                    text4 = \"(+\"..pullC..\")\"\n                else\n                    text4 = \"(\"..count+pullC..\")\"\n                end\n            end\n        end\n    end\n    return text1, text2, text3, text4\nend\n\n\n\n\n\n\n\n--[[\na.prep = GetTime() + 10\nelseif spellId == 258920 then\n    if a.immototal <= 0 then \n        a.immototal = 80\n    end\nelseif spellId == 178740 then\n    a.immototal = 20]]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["do_custom"] = true,
				},
				["finish"] = {
					["custom"] = "if select(2, GetInstanceInfo()) == \"none\" then\n    ObjectiveTrackerFrame:Show()\nend\n\n\n\n",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "stateupdate",
						["debuffType"] = "HELPFUL",
						["event"] = "Health",
						["names"] = {
						},
						["unit"] = "player",
						["spellIds"] = {
						},
						["custom"] = "function(states, e, ...)\n    local state = states[\"\"]\n    aura_env.update = false\n    if e == \"OPTIONS\" then\n        aura_env.finish = false\n    elseif e == \"CHALLENGE_MODE_START\" and select(2, GetWorldElapsedTime(1)) < 2 then\n        aura_env.finish = false\n        aura_env.done = select(4, C_ChallengeMode.GetCompletionInfo())\n        \n        for _, k in pairs(states) do\n            k.show = false\n            k.changed = true\n        end\n        aura_env.obdef = 0\n        aura_env.update = true\n        \n        \n    elseif e == \"SCENARIO_POI_UPDATE\" or e == \"WORLD_STATE_TIMER_START\" or e == \"CHALLENGE_MODE_COMPLETED\" or e == \"OPTIONS_CLOSED\" then\n        aura_env.update = true\n        if e == \"WORLD_STATE_TIMER_START\" and select(2, GetWorldElapsedTime(1)) < 2 then\n            aura_env.start = GetTime() or aura_env.start\n            aura_env.done = false\n        end\n        \n        local progress, mobCount, currentMC, totalMC = aura_env.GetProgress()\n        totalMC = totalMC or 0\n        aura_env.total = totalMC\n        \n        if e ==\"CHALLENGE_MODE_COMPLETED\" and select(3, C_ChallengeMode.GetCompletionInfo()) ~= 0 then\n            progress = 100\n        end\n        if progress then\n            currentMC = currentMC or 0\n            mobCount = mobCount or 0\n            local total = 100\n            \n            aura_env.total = aura_env.total or 0\n            \n            \n            if progress >= 100 and state and not aura_env.done then\n                \n                aura_env.done = true\n                \n                local cur = (aura_env.start and GetTime()-aura_env.start+(C_ChallengeMode.GetDeathCount()*5)) or select(2, GetWorldElapsedTime(1)) or 0\n                aura_env.finish = aura_env.formattime(cur)\n                \n                if state then\n                    state.value = progress\n                    state.total = total\n                    state.mobCount = mobCount\n                    state.currentMC = state.totalMC\n                    state.mcCompare = state.totalMC/100*total - state.currentMC\n                    state.leftCompare = total - progress\n                    state.current = string.format(\"%.2f%%\", progress)\n                    state.left = string.format(\"%.2f%%\", total - progress)\n                    state.additionalProgress = {\n                        { \n                            direction = \"forward\",\n                            width = 0,\n                            offset = 0,\n                        }\n                    }\n                    state.changed = true\n                end\n                \n            elseif not state then\n                local _, affixes = C_ChallengeMode.GetActiveKeystoneInfo()\n                aura_env.teeming = false\n                for _, affixID in ipairs(affixes) do\n                    if affixID == 5 then\n                        aura_env.teeming = true\n                    end\n                end\n                states[\"\"] = {\n                    progressType = \"static\",\n                    value = progress,\n                    total = total,\n                    currentMC = currentMC,\n                    totalMC = totalMC,\n                    mobCount = mobCount,\n                    pull = {},\n                    pullText = \"\",\n                    mcpullText = \"\",\n                    pullCompare = 1,\n                    mcpullCompare = 1,\n                    mcCompare = totalMC/100*total - currentMC,\n                    leftCompare = total - progress,\n                    current = string.format(\"%.2f%%\", progress),\n                    left = string.format(\"%.2f%%\", total - progress),\n                    show = true,\n                    additionalProgress = {\n                        { \n                            direction = \"forward\",\n                            width = 0,\n                            offset = 0,\n                        }\n                    },\n                    changed = true,\n                }\n                aura_env.total = total\n            elseif progress < 100 and state then\n                state.value = progress\n                state.total = total\n                state.mobCount = mobCount\n                state.currentMC = currentMC\n                state.totalMC = totalMC\n                state.mcCompare = totalMC/100*total - currentMC\n                state.leftCompare = total - progress\n                state.current = string.format(\"%.2f%%\", progress)\n                state.left = string.format(\"%.2f%%\", total - progress)\n                state.changed = true\n                \n                \n                \n                local rawValue, percentValue = 0, 0\n                for _, value in pairs(state.pull) do \n                    if value ~= \"DEAD\" then\n                        rawValue = rawValue + value[1]\n                        percentValue = percentValue + value[2]\n                    end\n                end\n                \n                local rawtext, text = \"\", \"\"\n                if percentValue > 0 or rawValue > 0 then\n                    rawtext = rawValue\n                    text = percentValue\n                end\n                \n                state.mcpullCompare = state.mcCompare - rawValue\n                state.mcpullText = rawtext\n                \n                state.pullCompare = state.leftCompare - percentValue\n                state.pullText = text ~= \"\" and string.format(\"%.2f%%\", text) or text\n                \n                state.additionalProgress = {\n                    { \n                        direction = \"forward\",\n                        width = (percentValue+state.value < 100 and percentValue) or 100,\n                        offset = 0,\n                    }\n                }\n            end\n        end\n        \n    elseif e == \"COMBAT_LOG_EVENT_UNFILTERED\" then\n        local _, se, _, _, _, _, _, destGUID = ...\n        if se == \"UNIT_DIED\" then\n            if state then\n                if aura_env.MDT and destGUID and state.pull[destGUID]then\n                    state.pull[destGUID] = \"DEAD\"\n                end\n            end\n        end\n    end\n    if aura_env.pullcount and aura_env.MDT and state then\n        if e == \"UNIT_THREAT_LIST_UPDATE\" and InCombatLockdown() then\n            local unit = ...\n            if unit and UnitExists(unit) then\n                local guid = UnitGUID(unit)\n                if guid and not state.pull[guid] then\n                    local npc_id = select(6, strsplit(\"-\", guid))\n                    if npc_id then\n                        local value\n                        if aura_env.teeming then\n                            value = select(4, aura_env.MDT:GetEnemyForces(tonumber(npc_id)))\n                        else\n                            value = aura_env.MDT:GetEnemyForces(tonumber(npc_id))\n                        end\n                        if value and value ~= 0 then\n                            state.pull[guid] = {value, (value / (aura_env.total)) * 100}\n                            aura_env.update = true\n                        end\n                    end\n                end            \n            end\n            \n        elseif e == \"ENCOUNTER_END\" or e == \"PLAYER_REGEN_ENABLED\" or e == \"PLAYER_DEAD\" then\n            for k, _ in pairs(state.pull) do\n                state.pull[k] = nil\n            end\n            aura_env.update = true\n        end\n        \n        if aura_env.update then\n            local rawValue, percentValue = 0, 0\n            for _, value in pairs(state.pull) do \n                if value ~= \"DEAD\" then\n                    rawValue = rawValue + value[1]\n                    percentValue = percentValue + value[2]\n                end\n            end\n            \n            local rawtext, text = \"\", \"\"\n            if percentValue > 0 or rawValue > 0 then\n                rawtext = rawValue\n                text = percentValue\n            end\n            \n            \n            if aura_env.countD == 2 then\n                rawtext = (state.currentMC and rawtext ~= \"\" and tonumber(rawtext)+state.currentMC) or \"\"\n                text = rawtext ~= \"\" and (rawtext/aura_env.total)*100 or \"\"\n            end\n            \n            state.mcpullCompare = state.mcCompare - rawValue\n            state.mcpullText = rawtext\n            \n            \n            state.pullCompare = state.leftCompare - percentValue\n            state.pullText = text ~= \"\" and string.format(\"%.2f%%\", text) or text\n            state.additionalProgress = {\n                { \n                    direction = \"forward\",\n                    width = (percentValue+state.value < 100 and percentValue) or 100,\n                    offset = 0,\n                }\n            }\n        end\n    end\n    return aura_env.update\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["events"] = "CLEU:UNIT_DIED ENCOUNTER_END PLAYER_DEAD PLAYER_REGEN_ENABLED UNIT_THREAT_LIST_UPDATE SCENARIO_POI_UPDATE WORLD_STATE_TIMER_START CHALLENGE_MODE_START CHALLENGE_MODE_COMPLETED",
						["check"] = "event",
						["subeventSuffix"] = "_CAST_START",
						["subeventPrefix"] = "SPELL",
						["customVariables"] = "{   \n    additionalProgress = 1,\n    value = {\n        display = \"Progress\",\n        type = \"number\",\n    },\n}",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["width"] = 292,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["colorR"] = 1,
					["duration"] = "1",
					["colorB"] = 0.96078431372549,
					["colorG"] = 0.99607843137255,
					["type"] = "none",
					["easeType"] = "none",
					["scalex"] = 1,
					["scaley"] = 1,
					["alpha"] = 0,
					["colorType"] = "custom",
					["y"] = 0,
					["x"] = 0,
					["easeStrength"] = 3,
					["colorA"] = 1,
					["colorFunc"] = "function(progress, r1, g1, b1, a1, r2, g2, b2, a2)\n    local powerColour = aura_env.powerColour\n    local bg = aura_env.region.bar.bg\n    bg:SetVertexColor(powerColour.r*0.25, powerColour.g*0.25, powerColour.b*0.25, .65)\n    return powerColour.r, powerColour.g, powerColour.b, 1 or r1,g1,b1,a1\n    \nend\n\n\n",
					["rotate"] = 0,
					["use_color"] = false,
					["duration_type"] = "seconds",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["backdropInFront"] = false,
			["useglowColor"] = false,
			["uid"] = "ZMuOnp4wDbH",
			["stickyDuration"] = false,
			["id"] = "Enemy Forces Bar",
			["glowFrequency"] = 0.25,
			["version"] = 79,
			["subRegions"] = {
				{
					["type"] = "aurabar_bar",
				}, -- [1]
				{
					["text_shadowXOffset"] = 1,
					["text_text"] = "%c1%c2",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_anchorXOffset"] = -2,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Expressway",
					["text_shadowYOffset"] = -1,
					["text_visible"] = true,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_text_format_c1_format"] = "none",
					["text_anchorYOffset"] = 1,
					["text_anchorPoint"] = "INNER_BOTTOMLEFT",
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_c2_format"] = "none",
				}, -- [2]
				{
					["text_shadowXOffset"] = 1,
					["text_text"] = "%c3%c4",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_anchorXOffset"] = 3,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Expressway",
					["text_shadowYOffset"] = -1,
					["text_visible"] = true,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_anchorYOffset"] = 1,
					["text_text_format_c4_format"] = "none",
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_c3_format"] = "none",
				}, -- [3]
				{
					["type"] = "subborder",
					["text_color"] = {
					},
					["border_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_shadowColor"] = {
					},
					["border_edge"] = "1 Pixel",
					["border_size"] = 1,
					["border_anchor"] = "bar",
					["border_visible"] = true,
					["border_offset"] = 0,
				}, -- [4]
			},
			["height"] = 24,
			["semver"] = "1.2.18",
			["glowLines"] = 8,
			["sparkBlendMode"] = "ADD",
			["backdropColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0, -- [4]
			},
			["useAdjustedMin"] = false,
			["text2Containment"] = "OUTSIDE",
			["text1Font"] = "Expressway",
			["text1Color"] = {
				0, -- [1]
				0.92549019607843, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["useAdjustedMax"] = false,
			["backgroundColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.5, -- [4]
			},
			["text2Color"] = {
				0, -- [1]
				1, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["text1"] = "%c1",
			["borderInFront"] = true,
			["config"] = {
				["totalC"] = true,
				["Remaining"] = false,
				["Decimals"] = 3,
				["color"] = {
					0, -- [1]
					1, -- [2]
					0.16862745098039, -- [3]
					1, -- [4]
				},
				["Display"] = 1,
				["CountDisplay"] = 1,
			},
			["icon_side"] = "RIGHT",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["useAdjustededMax"] = false,
			["sparkHeight"] = 30,
			["borderBackdrop"] = "Blizzard Tooltip",
			["text1FontFlags"] = "OUTLINE",
			["useGlowColor"] = true,
			["zoom"] = 0,
			["sparkHidden"] = "NEVER",
			["customTextUpdate"] = "event",
			["frameStrata"] = 3,
			["anchorFrameType"] = "SCREEN",
			["desaturate"] = false,
			["spark"] = false,
			["inverse"] = false,
			["sparkWidth"] = 10,
			["orientation"] = "HORIZONTAL",
			["conditions"] = {
				{
					["check"] = {
						["trigger"] = 1,
						["op"] = "==",
						["value"] = "100",
						["variable"] = "value",
					},
					["changes"] = {
						{
							["value"] = {
								0, -- [1]
								1, -- [2]
								0.10196078431373, -- [3]
								1, -- [4]
							},
							["property"] = "barColor",
						}, -- [1]
					},
				}, -- [1]
				{
					["check"] = {
						["trigger"] = 1,
						["op"] = "<",
						["value"] = "100",
						["variable"] = "value",
					},
					["changes"] = {
						{
							["value"] = {
								0, -- [1]
								0.67450980392157, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["property"] = "barColor",
						}, -- [1]
					},
				}, -- [2]
				{
					["check"] = {
						["trigger"] = 1,
						["op"] = "<=",
						["value"] = "66",
						["variable"] = "value",
					},
					["changes"] = {
						{
							["value"] = {
								1, -- [1]
								0.90980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["property"] = "barColor",
						}, -- [1]
					},
				}, -- [3]
				{
					["check"] = {
						["trigger"] = 1,
						["op"] = "<=",
						["value"] = "33",
						["variable"] = "value",
					},
					["changes"] = {
						{
							["value"] = {
								1, -- [1]
								0.26666666666667, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["property"] = "barColor",
						}, -- [1]
					},
				}, -- [4]
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["glowBorder"] = false,
		},
		["Targeted Spells 2"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["parent"] = "Dungeon - Targeted Spells",
			["preferToUpdate"] = false,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.stacks and aura_env.state.stacks > 1 then\n        return aura_env.state.stacks\n    end\nend",
			["yOffset"] = 0,
			["anchorPoint"] = "LEFT",
			["uid"] = "pWfZPrRiJzV",
			["cooldownSwipe"] = true,
			["authorOptions"] = {
				{
					["subOptions"] = {
						{
							["type"] = "toggle",
							["key"] = "enable",
							["width"] = 2,
							["name"] = "Show (default)",
							["useDesc"] = true,
							["default"] = true,
							["desc"] = "Show cast's icons on Unit Frames",
						}, -- [1]
					},
					["type"] = "group",
					["width"] = 2,
					["useCollapse"] = true,
					["name"] = "Cast icons on Unit Frames",
					["key"] = "icon",
					["limitType"] = "none",
					["groupType"] = "simple",
					["collapse"] = false,
					["size"] = 10,
				}, -- [1]
				{
					["subOptions"] = {
						{
							["width"] = 2,
							["type"] = "select",
							["default"] = 1,
							["key"] = "enable",
							["useDesc"] = true,
							["values"] = {
								"Always show", -- [1]
								"Show by default (overide with \"actions > init\" list)", -- [2]
								"Disabled by default (overide with \"actions > init\" list)", -- [3]
								"Disabled", -- [4]
							},
							["name"] = "Show",
							["desc"] = "Show cast's target on nameplate",
						}, -- [1]
						{
							["text"] = "Nameplate font, shadow, shadow color, size and offsets settings are now in the \"Display\" tab",
							["type"] = "description",
							["fontSize"] = "medium",
							["width"] = 2,
						}, -- [2]
					},
					["type"] = "group",
					["width"] = 2,
					["useCollapse"] = true,
					["name"] = "Target Name on Nameplates",
					["key"] = "nameplate",
					["limitType"] = "none",
					["groupType"] = "simple",
					["collapse"] = false,
					["size"] = 10,
				}, -- [2]
				{
					["subOptions"] = {
						{
							["type"] = "number",
							["useDesc"] = false,
							["max"] = 999999,
							["step"] = 1,
							["width"] = 1,
							["min"] = 0,
							["key"] = "spellId",
							["default"] = 0,
							["name"] = "Spell Id",
						}, -- [1]
						{
							["type"] = "input",
							["useDesc"] = false,
							["width"] = 1,
							["name"] = "Description",
							["default"] = "",
							["key"] = "desc",
							["length"] = 10,
							["multiline"] = false,
							["useLength"] = false,
						}, -- [2]
						{
							["type"] = "multiselect",
							["name"] = "Options",
							["default"] = {
								true, -- [1]
								true, -- [2]
								true, -- [3]
								true, -- [4]
								true, -- [5]
							},
							["key"] = "options",
							["useDesc"] = false,
							["values"] = {
								"Icon", -- [1]
								"Glow", -- [2]
								"Nameplate", -- [3]
								"Sound", -- [4]
								"Big Icon", -- [5]
							},
							["width"] = 1,
						}, -- [3]
					},
					["hideReorder"] = false,
					["useDesc"] = false,
					["nameSource"] = 2,
					["width"] = 1,
					["useCollapse"] = true,
					["type"] = "group",
					["key"] = "spells",
					["name"] = "Spells",
					["limitType"] = "none",
					["groupType"] = "array",
					["collapse"] = false,
					["size"] = 10,
				}, -- [3]
				{
					["type"] = "space",
					["variableWidth"] = true,
					["height"] = 10,
					["useHeight"] = true,
					["width"] = 2,
				}, -- [4]
			},
			["customTextUpdate"] = "event",
			["cooldownEdge"] = false,
			["icon"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["duration"] = "1",
						["genericShowOn"] = "showOnActive",
						["names"] = {
						},
						["debuffType"] = "HELPFUL",
						["type"] = "custom",
						["unevent"] = "timed",
						["custom_hide"] = "timed",
						["subeventPrefix"] = "SPELL",
						["event"] = "Health",
						["subeventSuffix"] = "_CAST_START",
						["unit"] = "player",
						["custom"] = "function(allstates, event, sourceUnit)\n    if not aura_env.loaded then return false end\n    if event == \"ENCOUNTER_END\" then\n        -- reset aura state to avoid ghost icons between pulls\n        for _,cast in pairs(aura_env.allcasts) do\n            if cast.nameplate then\n                aura_env.removeFontFromNameplate(cast.nameplate)\n            end\n        end\n        aura_env.allcasts = {}\n        for _,state in pairs(allstates) do\n            state.show = false\n            state.changed = true\n        end\n        return true\n    end\n    if sourceUnit and UnitIsEnemy(sourceUnit, \"player\") then\n        local allcasts = aura_env.allcasts\n        local sourceGUID = UnitGUID(sourceUnit)\n        local iconChanged = false\n        local cast = allcasts[sourceGUID]\n        \n        if event == \"UNIT_SPELLCAST_START\"\n        or event == \"UNIT_SPELLCAST_DELAYED\" \n        or event == \"UNIT_SPELLCAST_CHANNEL_START\"\n        or event == \"UNIT_SPELLCAST_CHANNEL_UPDATE\"\n        or event == \"UNIT_TARGET\"\n        then\n            if not cast then\n                -- check if unit is casting\n                local castType\n                local name,_,texture,castStart,castEnd,_,_,notInterruptible,spellId = UnitCastingInfo(sourceUnit)\n                if name then\n                    castType = \"cast\"\n                else\n                    name,_,texture,castStart,castEnd,_,notInterruptible,spellId = UnitChannelInfo(sourceUnit)\n                    if name then\n                        castType = \"channel\"\n                    end\n                end\n                \n                if spellId and not aura_env.isBlackListed(spellId, sourceUnit) then\n                    local spellInList = aura_env.spells[spellId]\n                    -- find npc's target\n                    local targetUnit = sourceUnit..\"target\"\n                    if UnitExists(targetUnit) then\n                        for groupmember in WA_IterateGroupMembers() do\n                            if UnitIsUnit(targetUnit, groupmember) then\n                                local targetGUID = UnitGUID(groupmember)\n                                local targeted = targetGUID == WeakAuras.myGUID\n                                local showIcon = (spellInList and spellInList.icon) or (not spellInList and aura_env.config.icon.enable)\n                                local showGlow = spellInList and spellInList.glow\n                                local showNameplate\n                                if aura_env.config.nameplate.enable == 1 then\n                                    showNameplate = true\n                                elseif aura_env.config.nameplate.enable == 2 then\n                                    showNameplate = (spellInList and spellInList.nameplate) or (not spellInList)\n                                elseif aura_env.config.nameplate.enable == 3 then\n                                    showNameplate = spellInList and spellInList.nameplate\n                                elseif aura_env.config.nameplate.enable == 4 then\n                                    showNameplate = false\n                                end\n                                local playSound = targeted and spellInList and spellInList.sound\n                                local bigIcon = targeted and spellInList and spellInList.bigIcon\n                                allcasts[sourceGUID] = {\n                                    name = name,\n                                    icon = texture,\n                                    start = castStart/1000,\n                                    expirationTime = castEnd/1000,\n                                    spellId = spellId,\n                                    target = groupmember,\n                                    targetGUID = targetGUID,\n                                    targeted = targeted,\n                                    spellInList = spellInList,\n                                    notInterruptible = notInterruptible,\n                                    castType = castType,\n                                    showIcon = showIcon,\n                                    showGlow = showGlow,\n                                    bigIcon = bigIcon,\n                                    showNameplate = showNameplate,\n                                    nameplate = showNameplate and aura_env.addFontToNameplate(\n                                        sourceUnit,\n                                        groupmember\n                                    ),\n                                    playSound = playSound\n                                }\n                                iconChanged = true\n                                break\n                            end\n                        end\n                    end\n                end\n            else\n                if UnitExists(sourceUnit) then\n                    if event == \"UNIT_SPELLCAST_DELAYED\" \n                    or event == \"UNIT_SPELLCAST_CHANNEL_UPDATE\"\n                    or event == \"UNIT_SPELLCAST_CHANNEL_START\"\n                    then\n                        local castType\n                        local name,_,_,castStart,castEnd,_,_,notInterruptible,spellId = UnitCastingInfo(sourceUnit)\n                        if name then\n                            castType = \"cast\"\n                        else\n                            name,_,_,castStart,castEnd,_,notInterruptible,spellId = UnitChannelInfo(sourceUnit)\n                            if name then\n                                castType = \"channel\"\n                            end\n                        end\n                        if spellId then\n                            cast.notInterruptible = notInterruptible\n                            cast.castType = castType\n                            cast.start = castStart/1000\n                            cast.expirationTime = castEnd/1000\n                            cast.changed = true\n                            iconChanged = true\n                        end\n                    elseif event == \"UNIT_TARGET\" then\n                        local targetUnit = sourceUnit..\"target\"\n                        if UnitExists(targetUnit) then\n                            for groupmember in WA_IterateGroupMembers() do\n                                if UnitIsUnit(targetUnit, groupmember) then\n                                    if cast.nameplate then\n                                        aura_env.removeFontFromNameplate(cast.nameplate)\n                                    end\n                                    \n                                    local targetGUID = UnitGUID(groupmember)\n                                    local targeted = targetGUID == WeakAuras.myGUID\n                                    local spellId = cast.spellId\n                                    cast.changed = true\n                                    cast.target = groupmember\n                                    cast.targetGUID = targetGUID\n                                    cast.targeted = targeted\n                                    \n                                    if cast.showNameplate then\n                                        cast.nameplate = aura_env.addFontToNameplate(\n                                            sourceUnit,\n                                            groupmember\n                                        )\n                                    end\n                                    \n                                    iconChanged = true\n                                    break\n                                end\n                            end\n                        end\n                    end\n                end\n            end\n        elseif cast then\n            if event == \"UNIT_SPELLCAST_STOP\" --  or event == \"UNIT_SPELLCAST_SUCCEEDED\"\n            or event == \"UNIT_SPELLCAST_INTERRUPTED\"\n            or event == \"UNIT_SPELLCAST_FAILED\"\n            or event == \"UNIT_SPELLCAST_FAILED_QUIET\"\n            or event == \"UNIT_SPELLCAST_CHANNEL_STOP\"\n            then\n                if cast.nameplate then\n                    aura_env.removeFontFromNameplate(cast.nameplate)\n                end\n                allcasts[sourceGUID] = nil\n                iconChanged = true\n            elseif event == \"NAME_PLATE_UNIT_REMOVED\" then\n                if cast.nameplate then\n                    aura_env.removeFontFromNameplate(cast.nameplate)\n                end\n            elseif event == \"NAME_PLATE_UNIT_ADDED\" then\n                if cast.showNameplate then\n                    cast.nameplate = aura_env.addFontToNameplate(\n                        sourceUnit,\n                        cast.target\n                    )\n                end\n            end\n        end\n        \n        if iconChanged then\n            local change = false\n            -- update allstates from allcasts\n            for sourceGUID, cast in pairs(allcasts) do\n                -- index for allstates is \"spellId_targetGUID\"\n                local index = (\"%s_%s\"):format(cast.spellId, cast.targetGUID)\n                \n                local state = allstates[index]\n                \n                if state and state.show then\n                    state.casts[sourceGUID] = true\n                    if cast.expirationTime > state.expirationTime then\n                        state.expirationTime = cast.expirationTime\n                        state.changed = true\n                        change = true\n                    end\n                else\n                    allstates[index] = {\n                        show = true,\n                        name = cast.name,\n                        icon = cast.icon,\n                        changed = true,\n                        autoHide = true,\n                        progressType = \"timed\",\n                        duration = cast.expirationTime - cast.start,\n                        expirationTime = cast.expirationTime,\n                        spellId = cast.spellId,\n                        castType = cast.castType,\n                        notInterruptible = cast.notInterruptible,\n                        target = cast.target,\n                        unit = cast.showIcon and cast.target,\n                        targetGUID = cast.targetGUID,\n                        frame = WeakAuras.GetUnitFrame(cast.target),\n                        casts = {\n                            [sourceGUID] = true\n                        },\n                        targeted = cast.targeted,\n                        showGlow = cast.showGlow,\n                        playSound = cast.playSound,\n                        bigIcon = cast.bigIcon,\n                        showIcon = cast.showIcon,\n                    }\n                    change = true\n                end\n            end\n            \n            -- count how much of the same cast is showing each icon\n            -- remove casts stopped from state.casts\n            -- remove state if state.casts is empty\n            for index, state in pairs(allstates) do \n                if state.show and state.showIcon then\n                    local countcasts = 0\n                    for sourceGUID,_ in pairs(state.casts) do\n                        local cast = allcasts[sourceGUID]\n                        if not cast\n                        or (cast and cast.targetGUID ~= state.targetGUID)\n                        then\n                            state.casts[sourceGUID] = nil\n                        else \n                            countcasts = countcasts + 1\n                        end\n                    end\n                    if state.stacks ~= countcasts then\n                        state.stacks = countcasts\n                        state.changed = true\n                        change = true\n                    end\n                    -- hide if no cast\n                    if countcasts == 0 then\n                        state.show = false \n                        state.changed = true\n                        change = true\n                    end\n                end\n            end\n            if change then\n                return true \n            end\n        end\n    end\nend",
						["spellIds"] = {
						},
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED UNIT_SPELLCAST_CHANNEL_START UNIT_SPELLCAST_CHANNEL_STOP UNIT_SPELLCAST_CHANNEL_UPDATE UNIT_SPELLCAST_DELAYED UNIT_SPELLCAST_FAILED UNIT_SPELLCAST_FAILED_QUIET UNIT_SPELLCAST_INTERRUPTED UNIT_SPELLCAST_START UNIT_SPELLCAST_STOP UNIT_TARGET ENCOUNTER_END",
						["check"] = "event",
						["custom_type"] = "stateupdate",
						["buffShowOn"] = "showOnActive",
						["customVariables"] = "{\n    targeted = {\n        display = \"Targeted\",\n        type = \"bool\"\n    },\n    playSound = {\n        display = \"Play Sound\",\n        type = \"bool\"\n    },\n    showGlow = {\n        display = \"Glow\",\n        type = \"bool\"\n    },\n    bigIcon = {\n        display = \"Big Icon\",\n        type = \"bool\"\n    },\n    spellId = {\n        display = \"Spell Id\",\n        type = \"number\"\n    },\n    notInterruptible = {\n        display = \"Not Interruptible\",\n        type = \"bool\"\n    },\n    castType = {\n        display = \"Cast Type\",\n        type = \"select\",\n        values = {\n            [\"cast\"] = \"Cast\",\n            [\"channel\"] = \"Channeling\"\n        }\n    }\n}",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "",
				["activeTriggerMode"] = -10,
			},
			["text2"] = "%p",
			["text1Enabled"] = true,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["easeStrength"] = 3,
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["easeStrength"] = 3,
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["easeStrength"] = 3,
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["url"] = "https://wago.io/BFADungeonTargetedSpells/65",
			["actions"] = {
				["start"] = {
					["do_glow"] = false,
					["custom"] = "\n\n",
					["glow_action"] = "show",
					["do_sound"] = false,
					["do_custom"] = false,
					["sound"] = " custom",
				},
				["finish"] = {
					["hide_all_glows"] = true,
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "-- update 25/04/20 -- by Buds - https://wago.io/BFADungeonTargetedSpells\n\n-- Spell list\naura_env.spells = {}\nfor i, v in ipairs(aura_env.config.spells) do\n    if v.spellId ~= 0 then\n        local opt = v.options\n        aura_env.spells[v.spellId] = { icon = opt[1], glow = opt[2], nameplate = opt[3], sound = opt[4], bigIcon = opt[5] }\n    end\nend\n\n\n-- TODO move this in aura_env.config\naura_env.blacklist_npc = {\n    [120651] = true, -- explosive orb affix\n}\naura_env.blacklist_spell = {\n    \n}\n\n-- DO NOT EDIT BELOW --\n\naura_env.loaded = false\n\naura_env.isBlackListed = function(spellId, unit)\n    local guid = UnitGUID(unit)\n    local npc_id= select(6,strsplit(\"-\",guid))\n    return aura_env.blacklist_spell[spellId] or aura_env.blacklist_npc[npc_id]\nend\n\naura_env.allcasts = {}\n\n-- Nameplates Text\nlocal fonts = {}\nlocal subtext = WeakAuras.GetData(aura_env.id).subRegions[2]\nlocal SharedMedia = LibStub(\"LibSharedMedia-3.0\")\n\naura_env.addFontToNameplate = function(unit, target)\n    local nameplate = C_NamePlate.GetNamePlateForUnit(unit)\n    if nameplate then\n        local nameplateUnit = nameplate.namePlateUnitToken or nameplate.unitFrame and nameplate.unitFrame.unit\n        if nameplateUnit then\n            local font = fonts[nameplateUnit]\n            if not font then\n                fonts[nameplateUnit] = UIParent:CreateFontString(nil, \"OVERLAY\")\n                font = fonts[nameplateUnit]\n                local fontPath = SharedMedia:Fetch(\"font\", subtext.text_font)\n                font:SetFont(fontPath or STANDARD_TEXT_FONT, subtext.text_fontSize or 20, subtext.text_fontType or \"OUTLINE\")\n                font:SetShadowColor(unpack(subtext.text_shadowColor))\n                font:SetShadowOffset(subtext.text_shadowXOffset, subtext.text_shadowYOffset)\n            end\n            font:ClearAllPoints()\n            local selfPoint = subtext.text_selfPoint == \"AUTO\" and \"CENTER\" or subtext.text_selfPoint\n            local anchorPoint = subtext.text_anchorPoint:gsub(\"%OUTER_\", \"\"):gsub(\"%INNER_\", \"\")\n            font:SetPoint(selfPoint, nameplate, anchorPoint, subtext.text_anchorXOffset, subtext.text_anchorYOffset)\n            font:SetText(WA_ClassColorName(target))\n            font:Show()\n            return nameplateUnit\n        end\n    end\n    return true\nend\n\naura_env.removeFontFromNameplate = function(unit)\n    local font = fonts[unit]\n    if font then\n        font:Hide()\n    end\nend\n\n\naura_env.loaded = true",
					["do_custom"] = true,
				},
			},
			["stickyDuration"] = false,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["text1Point"] = "BOTTOM",
			["version"] = 65,
			["text2FontFlags"] = "OUTLINE",
			["height"] = 20,
			["internalVersion"] = 40,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["difficulty"] = {
					["multi"] = {
						["challenge"] = true,
						["heroic"] = true,
						["lfr"] = true,
						["timewalking"] = true,
						["none"] = true,
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["ten"] = true,
						["twentyfive"] = true,
						["fortyman"] = true,
						["flexible"] = true,
						["pvp"] = true,
						["arena"] = true,
						["party"] = true,
						["none"] = true,
					},
				},
			},
			["selfPoint"] = "CENTER",
			["xOffset"] = 0,
			["text1Containment"] = "OUTSIDE",
			["text2Containment"] = "INSIDE",
			["cooldownTextDisabled"] = true,
			["text1Font"] = "Friz Quadrata TT",
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%c",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "OUTER_BOTTOM",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "Nameplate Font Settings",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "TOP",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_anchorXOffset"] = 0,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = false,
					["text_anchorPoint"] = "INNER_TOP",
					["text_anchorYOffset"] = 0,
					["text_fontSize"] = 20,
					["anchorXOffset"] = 0,
					["text_fontType"] = "OUTLINE",
				}, -- [2]
			},
			["text2Font"] = "Friz Quadrata TT",
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["cooldownTextEnabled"] = true,
			["desaturate"] = false,
			["text2FontSize"] = 24,
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1"] = "%c",
			["auto"] = true,
			["anchorFrameFrame"] = "UIParent",
			["zoom"] = 0,
			["useGlowColor"] = true,
			["tocversion"] = 80300,
			["id"] = "Targeted Spells 2",
			["semver"] = "3.0.3",
			["frameStrata"] = 6,
			["anchorFrameType"] = "SCREEN",
			["width"] = 20,
			["config"] = {
				["nameplate"] = {
					["enable"] = 1,
				},
				["spells"] = {
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 259832,
						["desc"] = "Massive Glaive - Stormbound Conqueror (Warport Wastari, Zuldazar, for testing purpose only)",
					}, -- [1]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== Atal'Dazar ==",
					}, -- [2]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 253239,
						["desc"] = "Dazar'ai Juggernaut - Merciless Assault",
					}, -- [3]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 256846,
						["desc"] = "Dinomancer Kish'o - Deadeye Aim",
					}, -- [4]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 257407,
						["desc"] = "Rezan - Pursuit",
					}, -- [5]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== Freehold ==",
					}, -- [6]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 257739,
						["desc"] = "Blacktooth Scrapper - Blind Rage",
					}, -- [7]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 258338,
						["desc"] = "Captain Raoul - Blackout Barrel",
					}, -- [8]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 256979,
						["desc"] = "Captain Eudora - Powder Shot",
					}, -- [9]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== Kings'Rest ==",
					}, -- [10]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 266231,
						["desc"] = "Kula the Butcher - Severing Axe",
					}, -- [11]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 270507,
						["desc"] = "Spectral Beastmaster - Poison Barrage",
					}, -- [12]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 265773,
						["desc"] = "The Golden Serpent - Spit Gold",
					}, -- [13]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 270506,
						["desc"] = "Spectral Beastmaster - Deadeye Shot",
					}, -- [14]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== Shrine of the Storm ==",
					}, -- [15]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 264166,
						["desc"] = "Aqu'sirr - Undertow",
					}, -- [16]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 268214,
						["desc"] = "Runecarver Sorn - Carve Flesh",
					}, -- [17]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== Siege of Boralus ==",
					}, -- [18]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 257641,
						["desc"] = "Kul Tiran Marksman - Molten Slug",
					}, -- [19]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 272874,
						["desc"] = "Ashvane Commander - Trample",
					}, -- [20]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 272581,
						["desc"] = "Bilge Rat Tempest - Water Spray",
					}, -- [21]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 272528,
						["desc"] = "Ashvane Sniper - Shoot",
					}, -- [22]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 272542,
						["desc"] = "Ashvane Sniper - Ricochet",
					}, -- [23]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== Temple of Sethraliss ==",
					}, -- [24]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 268703,
						["desc"] = "Charged Dust Devil - Lightning Bolt",
					}, -- [25]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 272670,
						["desc"] = "Sandswept Marksman - Shoot",
					}, -- [26]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 267278,
						["desc"] = "Static-charged Dervish - Electrocute",
					}, -- [27]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 272820,
						["desc"] = "Spark Channeler - Shock",
					}, -- [28]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 274642,
						["desc"] = "Hoodoo Hexer - Lava Burst",
					}, -- [29]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 268061,
						["desc"] = "Plague Doctor - Chain Lightning",
					}, -- [30]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== The Motherlode!! ==",
					}, -- [31]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 268185,
						["desc"] = "Refreshment Vendor, Iced Spritzer",
					}, -- [32]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 258674,
						["desc"] = "Off-Duty Laborer - Throw Wrench",
					}, -- [33]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 276304,
						["desc"] = "Rowdy Reveler - Penny For Your Thoughts",
					}, -- [34]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 263628,
						["desc"] = "Mechanized Peacekeeper - Charged Claw",
					}, -- [35]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 263209,
						["desc"] = "Mine Rat - Throw Rock",
					}, -- [36]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 263202,
						["desc"] = "Venture Co. Earthshaper - Rock Lance",
					}, -- [37]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 262794,
						["desc"] = "Venture Co. Mastermind - Energy Lash",
					}, -- [38]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 260669,
						["desc"] = "Rixxa Fluxflame - Propellant Blast",
					}, -- [39]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== The Underrot ==",
					}, -- [40]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 265376,
						["desc"] = "Fanatical Headhunter - Barbed Spear",
					}, -- [41]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 265084,
						["desc"] = "Devout Blood Priest - Blood Bolt",
					}, -- [42]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 265625,
						["desc"] = "Befouled Spirit - Dark Omen",
					}, -- [43]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== Tol Dagor ==",
					}, -- [44]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 256039,
						["desc"] = "Overseer Korgus - Deadeye",
					}, -- [45]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 185857,
						["desc"] = "Ashvane Spotter - Shoot",
					}, -- [46]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== Waycrest Manor ==",
					}, -- [47]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 263891,
						["desc"] = "Heartsbane Vinetwister - Grasping Thorns",
					}, -- [48]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 264510,
						["desc"] = "Crazed Marksman - Shoot",
					}, -- [49]
					{
						["options"] = {
							true, -- [1]
							false, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 260699,
						["desc"] = "Coven Diviner - Soul Bolt",
					}, -- [50]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 260551,
						["desc"] = "Soulbound Goliath - Soul Thorns",
					}, -- [51]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 260741,
						["desc"] = "Heartsbane Triad - Jagged Nettles",
					}, -- [52]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 268202,
						["desc"] = "Gorak Tul - Death Lens",
					}, -- [53]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							true, -- [4]
							true, -- [5]
						},
						["spellId"] = 0,
						["desc"] = "== Season 4 Affix ==",
					}, -- [54]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 314406,
						["desc"] = "Crippling Pestilence",
					}, -- [55]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 314411,
						["desc"] = "Lingering Doubt",
					}, -- [56]
					{
						["options"] = {
							true, -- [1]
							true, -- [2]
							true, -- [3]
							false, -- [4]
							true, -- [5]
						},
						["spellId"] = 314592,
						["desc"] = "Mind Flay",
					}, -- [57]
				},
				["icon"] = {
					["enable"] = true,
				},
			},
			["inverse"] = false,
			["glowParticules"] = 4,
			["alpha"] = 1,
			["conditions"] = {
				{
					["check"] = {
						["trigger"] = 1,
						["variable"] = "playSound",
						["value"] = 1,
						["checks"] = {
							{
								["trigger"] = 1,
								["variable"] = "targeted",
								["value"] = 1,
							}, -- [1]
							{
								["trigger"] = 1,
								["variable"] = "playSound",
								["value"] = 1,
							}, -- [2]
						},
					},
					["changes"] = {
						{
							["value"] = {
								["sound_kit_id"] = "12889",
								["sound_type"] = "Play",
								["sound"] = " KitID",
								["sound_channel"] = "Master",
							},
							["property"] = "sound",
						}, -- [1]
					},
				}, -- [1]
				{
					["check"] = {
						["trigger"] = 1,
						["variable"] = "showGlow",
						["value"] = 1,
					},
					["changes"] = {
						{
							["value"] = {
								["glow_frame_type"] = "UNITFRAME",
								["glow_type"] = "Pixel",
								["use_glow_color"] = true,
								["glow_action"] = "show",
							},
							["property"] = "glowexternal",
						}, -- [1]
					},
				}, -- [2]
				{
					["check"] = {
						["trigger"] = 1,
						["variable"] = "bigIcon",
						["value"] = 1,
					},
					["changes"] = {
						{
							["value"] = {
								["custom"] = "-- Send event for aura \"BigIcon when targeted\"\nWeakAuras.ScanEvents(\n    \"SHOW_BIGICON\",\n    aura_env.state.icon,\n    aura_env.state.spellId,\n    aura_env.state.duration\n)",
							},
							["property"] = "customcode",
						}, -- [1]
					},
				}, -- [3]
			},
			["cooldown"] = true,
			["text2Enabled"] = false,
		},
		["RavenProfileSwap - Paladin"] = {
			["outline"] = "OUTLINE",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayText"] = "",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "stateupdate",
						["customVariables"] = "\n\n",
						["names"] = {
						},
						["event"] = "Health",
						["unit"] = "player",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function()\n    --((LibStub(\"AceAddon-3.0\"):GetAddon(\"Raven\")).db):SetProfile(\"ProfileName\")\n    local currentSpec = GetSpecialization()\n    if currentSpec == 1 then\n        ((LibStub(\"AceAddon-3.0\"):GetAddon(\"Raven\")).db):SetProfile(\"KQUI\")\n    else\n        ((LibStub(\"AceAddon-3.0\"):GetAddon(\"Raven\")).db):SetProfile(\"KDTANK\")\n    end\nend",
						["spellIds"] = {
						},
						["events"] = "ACTIVE_TALENT_GROUP_CHANGED",
						["check"] = "event",
						["subeventSuffix"] = "_CAST_START",
						["buffShowOn"] = "showOnActive",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["wordWrap"] = "WordWrap",
			["font"] = "Friz Quadrata TT",
			["load"] = {
				["use_class"] = true,
				["use_never"] = true,
				["faction"] = {
				},
				["class"] = {
					["single"] = "PALADIN",
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["fontSize"] = 12,
			["shadowXOffset"] = 1,
			["regionType"] = "text",
			["uid"] = "TojrlZ(UARr",
			["parent"] = "A Kureq UI Customizations",
			["justify"] = "LEFT",
			["selfPoint"] = "BOTTOM",
			["id"] = "RavenProfileSwap - Paladin",
			["authorOptions"] = {
			},
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["fixedWidth"] = 200,
			["config"] = {
			},
			["shadowYOffset"] = -1,
			["xOffset"] = 0,
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
		},
		["Kureq Titan"] = {
			["outline"] = "OUTLINE",
			["parent"] = "A Kureq UI Customizations",
			["displayText"] = "%p",
			["shadowYOffset"] = -1,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["init"] = {
					["do_custom"] = true,
					["custom"] = "local channels = {\n    CHAT_MSG_SAY = { channel = 'SAY', enabled = true },\n    CHAT_MSG_YELL = { channel = 'YELL', enabled = false },\n    CHAT_MSG_CHANNEL = { channel = 'CHANNEL', enabled = false, extra = 4 },\n    CHAT_MSG_GUILD = { channel = 'GUILD', enabled = false },\n    CHAT_MSG_WHISPER = { channel = 'WHISPER', enabled = true },\n    CHAT_MSG_MSG_RAID_LEADER = { channel = 'RAID', enabled = true },\n    CHAT_MSG_MSG_RAID = { channel = 'RAID', enabled = true },\n    CHAT_MSG_PARTY_LEADER = { channel = 'PARTY', enabled = true },\n    CHAT_MSG_PARTY = { channel = 'PARTY', enabled = true },\n    CHAT_MSG_INSTANCE_CHAT = { channel = 'INSTANCE_CHAT', enabled = true },\n    CHAT_MSG_INSTANCE_CHAT_LEADER = { channel = 'INSTANCE_CHAT', enabled = true }\n}\n\naura_env.chat = function(channel, from, number)\n    if channels[channel] ~= nil and channels[channel].enabled == true then\n        SendChatMessage(aura_env.getKey(), channels[channel].channel, nil, from or nil)\n    end\nend\n\naura_env.getKey = function()\n    local itemID = 158923;\n    \n    for i = 0, NUM_BAG_SLOTS do\n        for z = 1, GetContainerNumSlots(i) do\n            if GetContainerItemID(i, z) == itemID then\n                return GetContainerItemLink(i,z)\n            end\n        end\n    end\nend",
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
						["names"] = {
						},
						["event"] = "Chat Message",
						["unit"] = "player",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(channel,message, a, b, target, c, d,name, number)\n    local seconds = GetTime();\n    \n    if((not aura_env.timer or (aura_env.timer + 5 < seconds)) and (message == '!tr' or message == 'titan' or message == '!titan' or message == 'tr')) then\n        \n        print(\"+10: 625\")\n        print(\"+11: 667\")\n        print(\"+12: 709\")\n        print(\"+13: 751\")\n        print(\"+14: 793\")\n        print(\"+15: 835\")\n        print(\"+16: 866\")\n        print(\"+17: 897\")\n        print(\"+18: 928\")\n        print(\"+19: 959\")\n        print(\"+20: 990\")\n        print(\"+21: 1010\")\n        print(\"+22: 1030\")\n        print(\"+23: 1050\")\n        print(\"+24: 1070\")\n        print(\"+25: 1090\")\n    end\n    \nend\n\n\n\n\n\n\n\n",
						["events"] = "CHAT_MSG_SAY, CHAT_MSG_CHANNEL,CHAT_MSG_GUILD,CHAT_MSG_YELL,CHAT_MSG_WHISPER,CHAT_MSG_RAID_LEADER,CHAT_MSG_RAID,CHAT_MSG_PARTY_LEADER,CHAT_MSG_PARTY,CHAT_MSG_INSTANCE_CHAT,CHAT_MSG_INSTANCE_CHAT_LEADER",
						["unevent"] = "auto",
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["buffShowOn"] = "showOnActive",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
						["custom"] = "function()\n    return true\nend",
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["displayText_format_p_format"] = "timed",
			["internalVersion"] = 40,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["font"] = "Friz Quadrata TT",
			["load"] = {
				["use_size"] = false,
				["use_never"] = true,
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
						["party"] = true,
						["scenario"] = true,
						["none"] = true,
					},
				},
			},
			["fontSize"] = 12,
			["shadowXOffset"] = 1,
			["regionType"] = "text",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayText_format_p_time_precision"] = 1,
			["displayText_format_p_time_dynamic"] = false,
			["authorOptions"] = {
			},
			["justify"] = "LEFT",
			["fixedWidth"] = 200,
			["id"] = "Kureq Titan",
			["selfPoint"] = "BOTTOM",
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["yOffset"] = 0,
			["config"] = {
			},
			["xOffset"] = 0,
			["uid"] = "aIiXHHcEipb",
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["wordWrap"] = "WordWrap",
		},
		["UNDR: Bone Shield"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 266201,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Bone Shield",
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["names"] = {
							"Bone Shield", -- [1]
						},
						["spellIds"] = {
							266201, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["genericShowOn"] = "showOnActive",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "GTxXhxf0DZO",
			["id"] = "UNDR: Bone Shield",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 458717,
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["BigIcon when targeted 2"] = {
			["iconSource"] = -1,
			["authorOptions"] = {
			},
			["customText"] = "\n\n",
			["yOffset"] = 380,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["url"] = "https://wago.io/BFADungeonTargetedSpells/45",
			["icon"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["unevent"] = "timed",
						["custom_type"] = "stateupdate",
						["duration"] = "1",
						["event"] = "Health",
						["unit"] = "player",
						["genericShowOn"] = "showOnActive",
						["spellIds"] = {
						},
						["events"] = "SHOW_BIGICON, HIDE_BIGICON",
						["names"] = {
						},
						["check"] = "event",
						["custom"] = "function(states, event, ...)\n    if event == \"SHOW_BIGICON\" then\n        local icon, castId, duration = ...\n        if castId then\n            states[castId] = {}\n            local state = states[castId]\n            state.show = true\n            state.icon = icon\n            state.changed = true\n            state.autoHide = true\n            state.progressType = \"timed\"\n            state.duration = duration\n            state.expirationTime = GetTime() + duration\n        end\n    end\n    \n    if event == \"HIDE_BIGICON\" then\n        local castId = ...\n        if castId then\n            local state = states[castId]\n            if state then\n                state.show = false\n                state.changed = true\n            end\n        end\n    end\n    \n    return true\nend",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["stickyDuration"] = false,
			["version"] = 45,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%c",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "OUTER_BOTTOM",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 150,
			["load"] = {
				["use_size"] = false,
				["use_never"] = true,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["ten"] = true,
						["twentyfive"] = true,
						["fortyman"] = true,
						["flexible"] = true,
						["none"] = true,
						["party"] = true,
						["arena"] = true,
						["twenty"] = true,
						["pvp"] = true,
					},
				},
			},
			["cooldownTextDisabled"] = false,
			["xOffset"] = 0,
			["desaturate"] = false,
			["regionType"] = "icon",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["actions"] = {
				["start"] = {
					["do_custom"] = false,
					["custom"] = "\n\n",
					["sound"] = " custom",
					["do_sound"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["parent"] = "BFA Dungeon - Targeted Spells 2",
			["uid"] = "(KngZre55pW",
			["zoom"] = 0,
			["auto"] = true,
			["semver"] = "2.2.0",
			["id"] = "BigIcon when targeted 2",
			["anchorFrameType"] = "SCREEN",
			["frameStrata"] = 6,
			["width"] = 150,
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["cooldownEdge"] = false,
			["conditions"] = {
			},
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["Kureq Keystone"] = {
			["outline"] = "OUTLINE",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayText"] = "%p",
			["shadowYOffset"] = -1,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
					["do_custom"] = true,
					["custom"] = "local channels = {\n    CHAT_MSG_SAY = { channel = 'SAY', enabled = true },\n    CHAT_MSG_YELL = { channel = 'YELL', enabled = false },\n    CHAT_MSG_CHANNEL = { channel = 'CHANNEL', enabled = false, extra = 4 },\n    CHAT_MSG_GUILD = { channel = 'GUILD', enabled = false },\n    CHAT_MSG_WHISPER = { channel = 'WHISPER', enabled = true },\n    CHAT_MSG_MSG_RAID_LEADER = { channel = 'RAID', enabled = true },\n    CHAT_MSG_MSG_RAID = { channel = 'RAID', enabled = true },\n    CHAT_MSG_PARTY_LEADER = { channel = 'PARTY', enabled = true },\n    CHAT_MSG_PARTY = { channel = 'PARTY', enabled = true },\n    CHAT_MSG_INSTANCE_CHAT = { channel = 'INSTANCE_CHAT', enabled = true },\n    CHAT_MSG_INSTANCE_CHAT_LEADER = { channel = 'INSTANCE_CHAT', enabled = true }\n}\n\naura_env.chat = function(channel, from, number)\n    if channels[channel] ~= nil and channels[channel].enabled == true then\n        SendChatMessage(aura_env.getKey(), channels[channel].channel, nil, from or nil)\n    end\nend\n\naura_env.getKey = function()\n    local itemID = 158923;\n    \n    for i = 0, NUM_BAG_SLOTS do\n        for z = 1, GetContainerNumSlots(i) do\n            if GetContainerItemID(i, z) == itemID then\n                return GetContainerItemLink(i,z)\n            end\n        end\n    end\nend",
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["unevent"] = "auto",
						["debuffType"] = "HELPFUL",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["unit"] = "player",
						["events"] = "CHAT_MSG_SAY, CHAT_MSG_CHANNEL,CHAT_MSG_GUILD,CHAT_MSG_YELL,CHAT_MSG_WHISPER,CHAT_MSG_RAID_LEADER,CHAT_MSG_RAID,CHAT_MSG_PARTY_LEADER,CHAT_MSG_PARTY,CHAT_MSG_INSTANCE_CHAT,CHAT_MSG_INSTANCE_CHAT_LEADER",
						["spellIds"] = {
						},
						["names"] = {
						},
						["custom"] = "function(channel,message, a, b, target, c, d,name, number)\n    local seconds = GetTime();\n    \n    if((not aura_env.timer or (aura_env.timer + 5 < seconds)) and (message == '!key' or message == 'key' or message == 'Key' or message == 'KEY')) then\n        \n        aura_env.chat(channel, a, message)\n        aura_env.timer = GetTime();\n    end\n    \nend\n\n\n\n\n\n\n\n",
						["subeventSuffix"] = "_CAST_START",
						["buffShowOn"] = "showOnActive",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
						["custom"] = "function()\n    return true\nend",
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["displayText_format_p_format"] = "timed",
			["internalVersion"] = 40,
			["wordWrap"] = "WordWrap",
			["font"] = "Friz Quadrata TT",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = true,
				["use_size"] = false,
				["use_ingroup"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
						["party"] = true,
						["scenario"] = true,
						["none"] = true,
					},
				},
			},
			["fontSize"] = 12,
			["shadowXOffset"] = 1,
			["regionType"] = "text",
			["xOffset"] = 0,
			["displayText_format_p_time_precision"] = 1,
			["displayText_format_p_time_dynamic"] = false,
			["selfPoint"] = "BOTTOM",
			["justify"] = "LEFT",
			["conditions"] = {
			},
			["id"] = "Kureq Keystone",
			["parent"] = "A Kureq UI Customizations",
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["yOffset"] = 0,
			["uid"] = "Ncx9dirLwgc",
			["authorOptions"] = {
			},
			["config"] = {
			},
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["fixedWidth"] = 200,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
		},
		["Timer Bar"] = {
			["overlays"] = {
				{
					0, -- [1]
					1, -- [2]
					0.10980392156863, -- [3]
					1, -- [4]
				}, -- [1]
				{
					0.92941176470588, -- [1]
					1, -- [2]
					0, -- [3]
					1, -- [4]
				}, -- [2]
			},
			["iconSource"] = -1,
			["authorOptions"] = {
				{
					["type"] = "number",
					["useDesc"] = false,
					["max"] = 3,
					["step"] = 1,
					["width"] = 1,
					["min"] = 0,
					["name"] = "Timer-Decimals",
					["key"] = "Decimals",
					["default"] = 0,
				}, -- [1]
				{
					["type"] = "number",
					["useDesc"] = false,
					["max"] = 3,
					["step"] = 1,
					["width"] = 1,
					["min"] = 0,
					["key"] = "DecimalsF",
					["name"] = "Decimals on Finish Time",
					["default"] = 1,
				}, -- [2]
				{
					["type"] = "toggle",
					["key"] = "KeyInfo",
					["default"] = true,
					["useDesc"] = false,
					["name"] = "Show Keystone Info",
					["width"] = 1,
				}, -- [3]
				{
					["type"] = "toggle",
					["key"] = "DeathInfo",
					["default"] = true,
					["useDesc"] = false,
					["name"] = "Show Death Info",
					["width"] = 1,
				}, -- [4]
				{
					["type"] = "toggle",
					["key"] = "ChestTimers",
					["default"] = true,
					["useDesc"] = false,
					["name"] = "Show Chest Timers",
					["width"] = 1,
				}, -- [5]
				{
					["type"] = "toggle",
					["key"] = "print",
					["desc"] = "Only for yourself, not in group or smth",
					["default"] = true,
					["useDesc"] = true,
					["name"] = "Print Finish-Time in Chat",
					["width"] = 1,
				}, -- [6]
				{
					["type"] = "color",
					["key"] = "color",
					["default"] = {
						0, -- [1]
						1, -- [2]
						0.094117647058824, -- [3]
						1, -- [4]
					},
					["useDesc"] = false,
					["name"] = "Completion Color",
					["width"] = 1,
				}, -- [7]
			},
			["displayText"] = "%c",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["sparkRotation"] = 0,
			["url"] = "https://wago.io/M+Timer/79",
			["backgroundColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.52409601211548, -- [4]
			},
			["icon_color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["useTooltip"] = false,
			["selfPoint"] = "LEFT",
			["barColor"] = {
				0, -- [1]
				1, -- [2]
				0.086274509803922, -- [3]
				1, -- [4]
			},
			["desaturate"] = false,
			["font"] = "Vixar",
			["sparkOffsetY"] = 0,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["use_zoneId"] = false,
				["use_difficulty"] = true,
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["party"] = true,
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["zoneId"] = "1039, 1040, 1004",
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["single"] = "challenge",
					["multi"] = {
						["challenge"] = true,
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["use_size"] = true,
				["use_zone"] = false,
			},
			["useAdjustededMin"] = false,
			["regionType"] = "aurabar",
			["texture"] = "Minimalist",
			["sparkTexture"] = "Interface\\CastingBar\\UI-CastingBar-Spark",
			["auto"] = true,
			["tocversion"] = 80300,
			["alpha"] = 1,
			["sparkColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["sparkOffsetX"] = 0,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["customText"] = "function()\n    if WeakAuras.IsOptionsOpen() then\n        aura_env.keyinfo = aura_env.showinfo and aura_env.keyfake or \"\"\n        aura_env.deathresult = aura_env.showdeaths and aura_env.deathfake or \"\"\n        if not aura_env.showchests then\n            aura_env.threeD, aura_env.twoD, aura_env.maxD = \"\", \"\", \"\"\n        end\n    end\n    aura_env.finish = select(3, C_ChallengeMode.GetCompletionInfo())\n    local timer = (aura_env.finish ~= 0 and aura_env.finish/1000) or aura_env.timer or 0    \n    local timeMS  = select(2, strsplit(\".\", (timer))) or select(2, strsplit(\".\", (GetTime()-timer)))\n    local timertext\n    if aura_env.finish ~= 0 then\n        \n        timeMS = (aura_env.decimalsF == 0 and 0) or (timeMS and string.sub(timeMS, 1, aura_env.decimalsF))\n        if (aura_env.start or timer > 0) and timeMS and timeMS ~= 0 then\n            timeMS = (\".%s\"):format(timeMS)\n        else\n            timeMS = \"\"\n        end\n        local current = aura_env.formattime(math.floor(timer))\n        timertext = (\"%s%s\"):format(current, timeMS) or \"00:00\"\n        timertext = timertext..\"/\"..aura_env.formattime(aura_env.timelimit)\n        \n        \n        if aura_env.showchests then\n            local chest = select(5, C_ChallengeMode.GetCompletionInfo())\n            aura_env.threeD = (chest >= 3 and aura_env.color..\"-\"..aura_env.formattime(aura_env.three-timer)..\"|r\")\n            or \"|cFFFF0000+\"..aura_env.formattime(timer-aura_env.three)..\"|r\"\n            aura_env.twoD = (chest >= 2 and aura_env.color..\"-\"..aura_env.formattime(aura_env.two-timer)..\"|r\")\n            or \"|cFFFF0000+\"..aura_env.formattime(timer-aura_env.two)..\"|r\"\n            aura_env.maxD = (chest >= 1 and aura_env.color..\"-\"..aura_env.formattime(aura_env.timelimit-timer)..\"|r\")\n            or \"|cFFFF0000+\"..aura_env.formattime(timer-aura_env.timelimit)..\"|r\"\n        else\n            aura_env.threeD, aura_env.twoD, aura_env.maxD = \"\", \"\", \"\"\n        end\n        if select(4, C_ChallengeMode.GetCompletionInfo()) then\n            timertext = aura_env.color..timertext..\"|r\"\n        else\n            timertext = \"|cFFFF0000\"..timertext..\"|r\"\n        end\n    else\n        timeMS = (aura_env.decimals == 0 and 0) or (timeMS and string.sub(timeMS, 1, aura_env.decimals))\n        if (aura_env.start or timer > 0) and timeMS and timeMS ~= 0 then\n            timeMS = (\".%s\"):format(timeMS)\n        else\n            timeMS = \"\"\n        end\n        local current = aura_env.formattime(timer, timeMS, aura_env.decimals)\n        timertext = current..\"/\"..aura_env.formattime(aura_env.timelimit)\n    end\n    return aura_env.keyinfo, aura_env.deathresult, timertext, aura_env.threeD, aura_env.twoD, aura_env.maxD\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
			["customTextUpdate"] = "event",
			["automaticWidth"] = "Auto",
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "stateupdate",
						["debuffType"] = "HELPFUL",
						["customVariables"] = "{   \n    status = \"number\",\n    additionalProgress = 2,\n}",
						["event"] = "Health",
						["unit"] = "player",
						["subeventPrefix"] = "SPELL",
						["spellIds"] = {
						},
						["custom"] = "function(states, e, ...)\n    if e == \"OPTIONS\" or e == \"OPTIONS_CLOSED\" then\n        aura_env.finish = (select(3, C_ChallengeMode.GetCompletionInfo()) == 0 and 0) or select(3, C_ChallengeMode.GetCompletionInfo())\n        --        if aura_env.finish == 0 then\n        local mapID = C_ChallengeMode.GetActiveChallengeMapID();\n        if mapID then\n            local time = GetTime()\n            aura_env.start = (select(2, GetWorldElapsedTime(1)) < 2 and time) or aura_env.start\n            aura_env.timelimit  = select(3, C_ChallengeMode.GetMapUIInfo(mapID))\n            local timeremain = aura_env.timelimit-aura_env.timer\n            if aura_env.timelimit >= aura_env.timer then\n                aura_env.deaths, aura_env.deathtime = C_ChallengeMode.GetDeathCount()\n            else\n                aura_env.deaths = C_ChallengeMode.GetDeathCount()\n            end\n            aura_env.timer = (aura_env.start and time-aura_env.start+aura_env.deathtime) or select(2, GetWorldElapsedTime(1)) or 0\n            if aura_env.showdeaths then\n                aura_env.deaths = aura_env.deaths or 0\n                aura_env.deathtime = aura_env.deathtime or 0\n                local deathtext = aura_env.deathtime and (aura_env.deaths and \"\\124TInterface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_8:12\\124t\"..aura_env.deaths) or \"\"\n                aura_env.deathresult = deathtext..((aura_env.deathtime == 0 and \"\")  or (aura_env.deathtime < 60 and \"(+\"..aura_env.deathtime..\"s)\") or \"(+\"..aura_env.formattime(aura_env.deathtime)..\")\")\n            else aura_env.deathresult = \"\" end\n            aura_env.two = aura_env.timelimit*0.8\n            aura_env.three = aura_env.timelimit*0.6\n            if aura_env.showchests then\n                aura_env.threeD = (aura_env.timer < aura_env.three and aura_env.formattime(aura_env.three-aura_env.timer)) or \"\"\n                aura_env.twoD = (aura_env.timer < aura_env.two and aura_env.formattime(aura_env.two-aura_env.timer))  or \"\"\n                aura_env.maxD = (aura_env.timer < aura_env.timelimit and aura_env.formattime(aura_env.timelimit-aura_env.timer)) \n                or (aura_env.timer > aura_env.timelimit and \"|cFFFF0000+\"..aura_env.formattime(aura_env.timer-aura_env.timelimit)..\"|r\")\n                or \"\"\n            else\n                aura_env.threeD, aura_env.twoD, aura_env.maxD = \"\", \"\", \"\"\n            end\n            \n            local chest = (aura_env.timer >= aura_env.timelimit and 3) or (aura_env.timer >= aura_env.two and 2) or (aura_env.timer >= aura_env.three and 1) or 0\n            states[\"\"] = {\n                show = true,\n                progressType = \"timed\",\n                duration = aura_env.timelimit,\n                expirationTime = timeremain+time,\n                status = chest,\n                changed = true,\n            }\n            return true\n            --   end\n        end\n    elseif e == \"CHALLENGE_MODE_COMPLETED\" and aura_env.timelimit > 0  then\n        local time = select(3, C_ChallengeMode.GetCompletionInfo())\n        if aura_env.config[\"print\"] and time ~= 0 then\n            local timer = (time/1000)  \n            local timeMS  = select(2, strsplit(\".\", (timer))) or select(2, strsplit(\".\", (GetTime()-timer)))\n            timeMS = (aura_env.decimalsF == 0 and 0) or (timeMS and string.sub(timeMS, 1, aura_env.decimalsF))\n            if timer > 0 and timeMS and timeMS ~= 0 then\n                timeMS = (\".%s\"):format(timeMS)\n            else\n                timeMS = \"\"\n            end\n            local current = aura_env.formattime(math.floor(timer))\n            local timertext = (\"%s%s\"):format(current, timeMS) or \"00:00\"\n            timertext = timertext..\"/\"..aura_env.formattime(aura_env.timelimit)\n            \n            if aura_env.showchests then\n                local chest = select(5, C_ChallengeMode.GetCompletionInfo())\n                aura_env.threeDD = (chest >= 3 and aura_env.color..\"-\"..aura_env.formattime(aura_env.three-timer)..\"|r\")\n                or \"|cFFFF0000+\"..aura_env.formattime(timer-aura_env.three)..\"|r\"\n                aura_env.twoDD = (chest >= 2 and aura_env.color..\"-\"..aura_env.formattime(aura_env.two-timer)..\"|r\")\n                or \"|cFFFF0000+\"..aura_env.formattime(timer-aura_env.two)..\"|r\"\n                aura_env.maxDD = (chest >= 1 and aura_env.color..\"-\"..aura_env.formattime(aura_env.timelimit-timer)..\"|r\")\n                or \"|cFFFF0000+\"..aura_env.formattime(timer-aura_env.timelimit)..\"|r\"\n                aura_env.threeDD, aura_env.twoDD, aura_env.maxDD = \"3Chest:\"..aura_env.threeDD, \"2Chest:\"..aura_env.twoDD, \"1Chest:\"..aura_env.maxDD\n            else\n                aura_env.threeDD, aura_env.twoDD, aura_env.maxDD = \"\", \"\", \"\"\n            end\n            if select(4, C_ChallengeMode.GetCompletionInfo()) then\n                timertext = aura_env.color..timertext..\"|r\"\n            else\n                timertext = \"|cFFFF0000\"..timertext..\"|r\"\n            end\n            print(\"Finish Time: \"..timertext, aura_env.threeDD, aura_env.twoDD, aura_env.maxDD)\n        end\n        return true\n    elseif e == \"CHALLENGE_MODE_START\" and ... then\n        aura_env.finish = 0\n        aura_env.start = nil\n        \n    elseif (e == \"WORLD_STATE_TIMER_START\" or e == \"WA_DELAYED_PLAYER_ENTERING_WORLD\") and aura_env.finish == 0 then\n        \n        local mapID = C_ChallengeMode.GetActiveChallengeMapID()\n        if aura_env.showinfo then\n            aura_env.dungeon = aura_env.maptoname[mapID] or \"\"\n            aura_env.level, aura_env.affixes = C_ChallengeMode.GetActiveKeystoneInfo()\n            aura_env.icon = \"\"\n            for _, v in pairs(aura_env.affixes) do\n                if aura_env.icon == \"\" then\n                    aura_env.icon = select(3, C_ChallengeMode.GetAffixInfo(v))\n                else\n                    aura_env.icon = aura_env.icon..\" \"..select(3, C_ChallengeMode.GetAffixInfo(v))\n                end\n            end\n            aura_env.keyinfo = \"+\"..aura_env.level..\" \"..aura_env.dungeon..\" \"\n            for i=1, 4 do\n                if select(i, strsplit(\" \", aura_env.icon)) then\n                    aura_env.keyinfo = aura_env.keyinfo..\"\\124T\"..select(i, strsplit(\" \", aura_env.icon))..\":12:12:\"..1-i..\":0:64:64:6:60:6:60\\124t\"\n                end\n            end\n        else aura_env.keyinfo = \"\" end\n        if mapID then\n            local time = GetTime()\n            aura_env.start = (select(2, GetWorldElapsedTime(1)) < 2 and time) or aura_env.start\n            aura_env.timelimit  = select(3, C_ChallengeMode.GetMapUIInfo(mapID))\n            if aura_env.showdeaths then\n                if aura_env.timelimit >= aura_env.timer then\n                    aura_env.deaths, aura_env.deathtime = C_ChallengeMode.GetDeathCount()\n                else\n                    aura_env.deaths = C_ChallengeMode.GetDeathCount()\n                end\n                aura_env.deaths = aura_env.deaths or 0\n                aura_env.deathtime = aura_env.deathtime or 0\n                local deathtext = aura_env.deathtime and (aura_env.deaths and \"\\124TInterface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_8:12\\124t\"..aura_env.deaths) or \"\"\n                aura_env.deathresult = deathtext..((aura_env.deathtime == 0 and \"\")  or (aura_env.deathtime < 60 and \"(+\"..aura_env.deathtime..\"s)\") or \"(+\"..aura_env.formattime(aura_env.deathtime)..\")\")\n            else aura_env.deathresult = \"\" end\n            aura_env.timer = (aura_env.start and time-aura_env.start+aura_env.deathtime) or select(2, GetWorldElapsedTime(1)) or 0\n            local timeremain = aura_env.timelimit-aura_env.timer\n            aura_env.two = aura_env.timelimit*0.8\n            aura_env.three = aura_env.timelimit*0.6\n            if aura_env.showchests then\n                aura_env.threeD = (aura_env.timer < aura_env.three and aura_env.formattime(aura_env.three-aura_env.timer)) or \"\"\n                aura_env.twoD = (aura_env.timer < aura_env.two and aura_env.formattime(aura_env.two-aura_env.timer))  or \"\"\n                aura_env.maxD = (aura_env.timer < aura_env.timelimit and aura_env.formattime(aura_env.timelimit-aura_env.timer)) \n                or (aura_env.timer > aura_env.timelimit and \"|cFFFF0000+\"..aura_env.formattime(aura_env.timer-aura_env.timelimit)..\"|r\")\n                or \"\"\n            else\n                aura_env.threeD, aura_env.twoD, aura_env.maxD = \"\", \"\", \"\"\n            end\n            \n            local chest = (aura_env.timer >= aura_env.timelimit and 3) or (aura_env.timer >= aura_env.two and 2) or (aura_env.timer >= aura_env.three and 1) or 0\n            states[\"\"] = {\n                show = true,\n                progressType = \"timed\",\n                duration = aura_env.timelimit,\n                expirationTime = timeremain+time,\n                status = chest,\n                changed = true,\n            }\n            return true\n        end\n    elseif e == \"FRAME_UPDATE\" and ((not aura_env.last) or aura_env.last < GetTime()-0.10) and select(3, C_ChallengeMode.GetCompletionInfo()) == 0  then\n        aura_env.last = GetTime()\n        if aura_env.timelimit >= aura_env.timer then\n            aura_env.deaths, aura_env.deathtime = C_ChallengeMode.GetDeathCount()\n        else\n            aura_env.deaths = C_ChallengeMode.GetDeathCount()\n        end\n        aura_env.timer = (aura_env.start and aura_env.last-aura_env.start+aura_env.deathtime) or select(2, GetWorldElapsedTime(1)) or 0\n        local timeremain = aura_env.timelimit-aura_env.timer\n        if aura_env.showdeaths then\n            aura_env.deaths = aura_env.deaths or 0\n            aura_env.deathtime = aura_env.deathtime or 0\n            local deathtext = aura_env.deathtime and (aura_env.deaths and \"\\124TInterface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_8:12\\124t\"..aura_env.deaths) or \"\"\n            aura_env.deathresult = deathtext..((aura_env.deathtime == 0 and \"\")  or (aura_env.deathtime < 60 and \"(+\"..aura_env.deathtime..\"s)\") or \"(+\"..aura_env.formattime(aura_env.deathtime)..\")\")\n        else aura_env.deathresult = \"\" end\n        \n        local timermath = (aura_env.start and math.floor(aura_env.timer)) or aura_env.timer\n        \n        if aura_env.showchests then\n            aura_env.threeD = (timermath <= aura_env.three and aura_env.formattime(aura_env.three-timermath)) or \"\"\n            aura_env.twoD = (timermath <= aura_env.two and aura_env.formattime(aura_env.two-timermath))  or \"\"\n            aura_env.maxD = (timermath <= aura_env.timelimit and aura_env.formattime(aura_env.timelimit-timermath)) \n            or (timermath > aura_env.timelimit and \"|cFFFF0000+\"..aura_env.formattime(timermath-aura_env.timelimit)..\"|r\")\n            or \"\"\n        else\n            aura_env.threeD, aura_env.twoD, aura_env.maxD = \"\", \"\", \"\"\n        end\n        \n        \n        local chest = (aura_env.timer >= aura_env.timelimit and 3) or (aura_env.timer >= aura_env.two and 2) or (aura_env.timer >= aura_env.three and 1) or 0\n        if not states[\"\"] then\n            states[\"\"] = {\n                show = true,\n                progressType = \"timed\",\n                duration = aura_env.timelimit,\n                expirationTime = timeremain+aura_env.last,\n                status = chest,\n                changed = true,\n            }\n        else\n            states[\"\"].expirationTime = timeremain+aura_env.last\n            states[\"\"].status = chest\n            states[\"\"].changed = true\n            if chest == 3 then\n                states[\"\"].additionalProgress = {}\n            elseif chest == 2 then\n                states[\"\"].additionalProgress = {\n                    { \n                        direction = \"backward\",\n                        width = aura_env.timelimit*0.6,\n                        offset = -(aura_env.timelimit-timeremain)\n                    },\n                    { \n                        direction = \"backward\",\n                        width = aura_env.timelimit*0.2,\n                        offset = -(aura_env.timelimit-timeremain)+aura_env.timelimit*0.6\n                    }\n                }\n            elseif chest == 1 then\n                states[\"\"].additionalProgress = {\n                    { \n                        direction = \"backward\",\n                        width = aura_env.timelimit*0.6,\n                        offset = -(aura_env.timelimit-timeremain)\n                    }\n                }\n            end\n        end\n        return true\n    end\nend    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["events"] = "WA_DELAYED_PLAYER_ENTERING_WORLD OPTIONS_CLOSED CHALLENGE_MODE_START CHALLENGE_MODE_COMPLETED FRAME_UPDATE WORLD_STATE_TIMER_START",
						["check"] = "event",
						["names"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["activeTriggerMode"] = 1,
			},
			["internalVersion"] = 40,
			["useAdjustedMin"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["colorR"] = 1,
					["scalex"] = 1,
					["colorA"] = 1,
					["colorG"] = 1,
					["type"] = "none",
					["easeType"] = "none",
					["scaley"] = 1,
					["alpha"] = 0,
					["colorB"] = 1,
					["y"] = 0,
					["colorType"] = "custom",
					["x"] = 0,
					["easeStrength"] = 3,
					["colorFunc"] = "\n\n",
					["rotate"] = 0,
					["use_color"] = false,
					["duration_type"] = "seconds",
				},
			},
			["backdropInFront"] = false,
			["stickyDuration"] = true,
			["version"] = 79,
			["subRegions"] = {
				{
					["type"] = "aurabar_bar",
				}, -- [1]
				{
					["text_shadowXOffset"] = 1,
					["text_text"] = "%c1",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_anchorXOffset"] = -2,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["border_color"] = {
					},
					["text_anchorYOffset"] = 20,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_text_format_c1_format"] = "none",
					["text_shadowYOffset"] = -1,
					["text_anchorPoint"] = "INNER_LEFT",
					["text_fontSize"] = 16,
					["anchorXOffset"] = 0,
					["text_font"] = "Expressway",
				}, -- [2]
				{
					["text_shadowXOffset"] = 1,
					["text_text"] = "%c2",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["border_color"] = {
					},
					["text_shadowYOffset"] = -1,
					["text_fontType"] = "OUTLINE",
					["text_text_format_c2_format"] = "none",
					["text_visible"] = true,
					["text_anchorPoint"] = "INNER_RIGHT",
					["text_anchorYOffset"] = 21,
					["text_wordWrap"] = "WordWrap",
					["text_fontSize"] = 16,
					["anchorXOffset"] = 0,
					["text_font"] = "Expressway",
				}, -- [3]
				{
					["text_shadowXOffset"] = 1,
					["text_text"] = "%c3",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_anchorXOffset"] = -1,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["border_color"] = {
					},
					["text_anchorYOffset"] = 1,
					["text_visible"] = true,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMLEFT",
					["text_shadowYOffset"] = -1,
					["text_font"] = "Expressway",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_text_format_c3_format"] = "none",
				}, -- [4]
				{
					["text_shadowXOffset"] = 1,
					["text_text"] = "%c4",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_anchorXOffset"] = -114,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["border_color"] = {
					},
					["text_shadowYOffset"] = -1,
					["text_visible"] = true,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_font"] = "Expressway",
					["text_text_format_c4_format"] = "none",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_anchorYOffset"] = 1,
				}, -- [5]
				{
					["text_shadowXOffset"] = 1,
					["text_text"] = "%c5",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_anchorXOffset"] = -55,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["border_color"] = {
					},
					["text_shadowYOffset"] = -1,
					["text_visible"] = true,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_font"] = "Expressway",
					["text_text_format_c5_format"] = "none",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_anchorYOffset"] = 1,
				}, -- [6]
				{
					["text_shadowXOffset"] = 1,
					["text_text"] = "%c6",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_anchorXOffset"] = 3,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["border_color"] = {
					},
					["text_text_format_c6_format"] = "none",
					["text_shadowYOffset"] = -1,
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontType"] = "OUTLINE",
					["text_font"] = "Expressway",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_anchorYOffset"] = 1,
				}, -- [7]
				{
					["tick_blend_mode"] = "ADD",
					["type"] = "subtick",
					["tick_xOffset"] = 0,
					["tick_desaturate"] = false,
					["automatic_length"] = true,
					["tick_thickness"] = 2,
					["tick_rotation"] = 0,
					["use_texture"] = false,
					["tick_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["tick_placement"] = "40",
					["tick_visible"] = true,
					["tick_yOffset"] = 0,
					["tick_texture"] = "Interface\\CastingBar\\UI-CastingBar-Spark",
					["tick_length"] = 30,
					["tick_mirror"] = false,
					["tick_placement_mode"] = "AtPercent",
				}, -- [8]
				{
					["tick_blend_mode"] = "ADD",
					["type"] = "subtick",
					["tick_xOffset"] = 0,
					["tick_desaturate"] = false,
					["automatic_length"] = true,
					["tick_thickness"] = 2,
					["tick_rotation"] = 0,
					["use_texture"] = false,
					["tick_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["tick_placement"] = "20",
					["tick_visible"] = true,
					["tick_yOffset"] = 0,
					["tick_texture"] = "Interface\\CastingBar\\UI-CastingBar-Spark",
					["tick_length"] = 30,
					["tick_mirror"] = false,
					["tick_placement_mode"] = "AtPercent",
				}, -- [9]
				{
					["border_size"] = 1,
					["type"] = "subborder",
					["border_anchor"] = "bar",
					["text_color"] = {
					},
					["border_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["border_visible"] = true,
					["border_edge"] = "1 Pixel",
					["border_offset"] = 0,
				}, -- [10]
			},
			["height"] = 24,
			["sparkBlendMode"] = "ADD",
			["backdropColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0, -- [4]
			},
			["fontSize"] = 30,
			["preferToUpdate"] = false,
			["config"] = {
				["KeyInfo"] = true,
				["DeathInfo"] = true,
				["Decimals"] = 0,
				["color"] = {
					0.003921568627451, -- [1]
					1, -- [2]
					0, -- [3]
					1, -- [4]
				},
				["DecimalsF"] = 1,
				["print"] = true,
				["ChestTimers"] = true,
			},
			["uid"] = "pW1cBfiWdPQ",
			["useAdjustedMax"] = false,
			["parent"] = "M+ - Timer",
			["sparkWidth"] = 10,
			["xOffset"] = 0,
			["borderInFront"] = true,
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "aura_env.decimals = aura_env.config[\"Decimals\"]\naura_env.decimalsF = aura_env.config[\"DecimalsF\"]\naura_env.deaths = aura_env.deaths or C_ChallengeMode.GetDeathCount() or 0\naura_env.timer = aura_env.timer or 0\naura_env.timelimit = aura_env.timelimit or 0\naura_env.two = aura_env.two or 0\naura_env.three = aura_env.three or 0\naura_env.twoD = aura_env.twoD or 0\naura_env.threeD = aura_env.threeD or 0\naura_env.maxD = aura_env.maxD or 0\naura_env.keyinfo  = aura_env.keyinfo or \"\"\naura_env.finish = (select(3, C_ChallengeMode.GetCompletionInfo()) == 0 and 0) or select(3, C_ChallengeMode.GetCompletionInfo()) or 0\naura_env.intime = aura_env.intime or false\naura_env.chest = aura_env.chest or 0\naura_env.deathresult = aura_env.deathresult  or  \"\\124TInterface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_8:12\\124t\"..0\naura_env.deathfake = \"\\124TInterface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_8:12\\124t2(+10s)\"\naura_env.showinfo = aura_env.config[\"KeyInfo\"]\naura_env.showdeaths = aura_env.config[\"DeathInfo\"]\naura_env.showchests = aura_env.config[\"ChestTimers\"]\n\nlocal c = aura_env.config.color\n\nlocal col = {}\n\nfor i=1, 4 do\n    if i == 1 then \n        col[i] = string.format(\"%x\", c[i] *255*255)\n    else\n        col[i] = string.format(\"%x\", c[i] *255)\n    end\n    if col[i] == \"0\" then\n        col[i] = \"00\"\n    end\nend\n\naura_env.color = \"|c\"..col[4]..col[1]..col[2]..col[3]\n\naura_env.keyfake = \"+30 JY \"\nfor i=1, 4 do\n    aura_env.keyfake = aura_env.keyfake..\"\\124T\"..select(i, strsplit(\" \", \"463829 132333 132090 442737\"))..\":13:13:\"..1-i..\":0:64:64:6:60:6:60\\124t\"\nend\n\naura_env.formattime = function(time, MS, dec)\n    if time then\n        local timeMin = math.floor(time / 60)\n        local timeSec = math.floor(time - (timeMin*60))\n        if timeMin < 10 then\n            timeMin = (\"0%d\"):format(timeMin)\n        end\n        if timeSec < 10 then\n            timeSec = (\"0%d\"):format(timeSec)\n        end\n        if MS and aura_env.decimals > 0 then\n            local timeMS  = select(2, strsplit(\".\", (time))) or select(2, strsplit(\".\", (GetTime()-time)))\n            local timeMS100 = math.floor(timeMS/100) or 0\n            local timeMS10 = math.floor((timeMS-(timeMS100*100))/10) or 0\n            local timeMS1 =timeMS-(timeMS100*100)-(timeMS10*10) or 0\n            timeMS = string.sub((\".%s%s%s\"):format(timeMS100, timeMS10, timeMS1), 1, dec+1)\n            return (\"%s:%s%s|r\"):format(timeMin, timeSec, timeMS)\n        end\n        \n        return (\"%s:%s\"):format(timeMin, timeSec)\n    end\nend\n\n\naura_env.maptoname = {\n    [244] = \"AD\",\n    [245] = \"FH\",\n    [246] = \"TD\",\n    [247] = \"ML\",\n    [248] = \"WM\",\n    [249] = \"KR\",\n    [250] = \"ToS\",\n    [251] = \"UR\",\n    [252] = \"SotS\",\n    [353] = \"SoB\",\n    [369] = \"JY\",\n    [370] = \"WS\",\n    \n    [375] = \"MoTS\",\n    [376] = \"TNW\",\n    [377] = \"DOS\",\n    [378] = \"HoA\",\n    [379] = \"PF\",\n    [380] = \"SD\",\n    [381] = \"SoA\",\n    [382] = \"ToP\",\n}\n\n\n\n--[[\nfor i = 300, 400 do \n    if C_ChallengeMode.GetMapUIInfo(i) then\n        print(C_ChallengeMode.GetMapUIInfo(i))\n    end\nend]]\n\n\n",
					["do_custom"] = true,
				},
				["finish"] = {
					["hide_all_glows"] = true,
				},
			},
			["icon_side"] = "RIGHT",
			["wordWrap"] = "WordWrap",
			["zoom"] = 0,
			["sparkHeight"] = 30,
			["anchorFrameType"] = "SCREEN",
			["semver"] = "1.2.18",
			["justify"] = "LEFT",
			["sparkHidden"] = "NEVER",
			["id"] = "Timer Bar",
			["useAdjustededMax"] = false,
			["frameStrata"] = 4,
			["width"] = 292,
			["spark"] = false,
			["icon"] = false,
			["inverse"] = true,
			["borderBackdrop"] = "Blizzard Tooltip",
			["orientation"] = "HORIZONTAL",
			["conditions"] = {
				{
					["check"] = {
						["trigger"] = 1,
						["op"] = "==",
						["variable"] = "status",
						["value"] = "3",
					},
					["changes"] = {
						{
							["value"] = {
								0.34901960784314, -- [1]
								0.35294117647059, -- [2]
								0.36078431372549, -- [3]
								1, -- [4]
							},
							["property"] = "barColor",
						}, -- [1]
						{
							["property"] = "sub.8.tick_visible",
						}, -- [2]
						{
							["property"] = "sub.9.tick_visible",
						}, -- [3]
					},
				}, -- [1]
				{
					["check"] = {
						["trigger"] = 1,
						["op"] = "==",
						["variable"] = "status",
						["value"] = "2",
					},
					["changes"] = {
						{
							["value"] = {
								1, -- [1]
								0.43921568627451, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["property"] = "barColor",
						}, -- [1]
						{
							["property"] = "sub.8.tick_visible",
						}, -- [2]
						{
							["property"] = "sub.9.tick_visible",
						}, -- [3]
					},
				}, -- [2]
				{
					["check"] = {
						["trigger"] = 1,
						["op"] = "==",
						["variable"] = "status",
						["value"] = "1",
					},
					["changes"] = {
						{
							["value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["property"] = "barColor",
						}, -- [1]
						{
							["property"] = "sub.9.tick_visible",
						}, -- [2]
					},
				}, -- [3]
				{
					["check"] = {
						["trigger"] = 1,
						["op"] = "==",
						["variable"] = "status",
						["value"] = "0",
					},
					["changes"] = {
						{
							["value"] = {
								0, -- [1]
								1, -- [2]
								0.11764705882353, -- [3]
								1, -- [4]
							},
							["property"] = "barColor",
						}, -- [1]
						{
							["value"] = true,
							["property"] = "sub.8.tick_visible",
						}, -- [2]
						{
							["value"] = true,
							["property"] = "sub.9.tick_visible",
						}, -- [3]
					},
				}, -- [4]
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["sparkRotationMode"] = "AUTO",
		},
		["WAYC: Enrage (E)"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 257260,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Enrage", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							257260, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Enrage",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "Enrage",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Accidental Presidency",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMLEFT",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["use_class"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
						["HUNTER"] = true,
						["SHAMAN"] = true,
						["DRUID"] = true,
						["PALADIN"] = true,
						["PRIEST"] = true,
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["regionType"] = "icon",
			["icon"] = true,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeType"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["preset"] = "pulse",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "(BGqWzh)dv(",
			["id"] = "WAYC: Enrage (E)",
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["width"] = 35,
			["frameStrata"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 132344,
			["cooldown"] = true,
			["authorOptions"] = {
			},
		},
		["FRHD: Healing Balm"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 257397,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Healing Balm", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							257397, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Healing Balm",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["parent"] = "M+ - Purgeable Buffs",
			["authorOptions"] = {
			},
			["cooldownTextDisabled"] = false,
			["zoom"] = 0,
			["auto"] = false,
			["uid"] = "Kz(rYDeV7QF",
			["id"] = "FRHD: Healing Balm",
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["width"] = 35,
			["frameStrata"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayIcon"] = "1385268",
			["cooldown"] = true,
			["desaturate"] = false,
		},
		["Cooldowns on RaidFrames Devotion Aura (20%)"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text1Enabled"] = true,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["tocversion"] = 80300,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["uid"] = "R4VSkA5ojnB",
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["automaticWidth"] = "Auto",
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "event",
						["spellId"] = "31821",
						["unevent"] = "timed",
						["duration"] = "8",
						["event"] = "Combat Log",
						["unit"] = "player",
						["debuffType"] = "HELPFUL",
						["use_spellId"] = true,
						["spellIds"] = {
						},
						["names"] = {
						},
						["subeventSuffix"] = "_CAST_SUCCESS",
						["use_sourceFlags"] = true,
						["subeventPrefix"] = "SPELL",
						["sourceFlags"] = "InGroup",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["tooltipValueNumber"] = 1,
						["unit"] = "group",
						["use_tooltipValue"] = true,
						["debuffType"] = "HELPFUL",
						["showClones"] = true,
						["type"] = "aura2",
						["tooltip_operator"] = "find('%s')",
						["tooltip"] = "6%",
						["event"] = "Health",
						["useExactSpellId"] = true,
						["names"] = {
						},
						["spellIds"] = {
						},
						["subeventPrefix"] = "SPELL",
						["auraspellids"] = {
							"210320", -- [1]
						},
						["subeventSuffix"] = "_CAST_START",
						["tooltipValue_operator"] = "==",
						["tooltipValue"] = "20",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "all",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 2,
			},
			["glowScale"] = 1,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["cooldownEdge"] = true,
			["useglowColor"] = false,
			["stickyDuration"] = false,
			["parent"] = "Cooldowns on RaidFrames",
			["alpha"] = 1,
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["preferToUpdate"] = false,
			["glowLines"] = 8,
			["authorOptions"] = {
			},
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["config"] = {
			},
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["width"] = 20,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayIcon"] = 841384,
			["glow"] = false,
			["text2"] = "%p",
			["semver"] = "1.0.8",
			["text1Point"] = "BOTTOMRIGHT",
			["text1Containment"] = "INSIDE",
			["text1"] = "%s",
			["cooldownTextEnabled"] = false,
			["zoom"] = 0,
			["justify"] = "LEFT",
			["wordWrap"] = "WordWrap",
			["id"] = "Cooldowns on RaidFrames Devotion Aura (20%)",
			["icon"] = true,
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["text1Font"] = "Friz Quadrata TT",
			["text2Font"] = "Friz Quadrata TT",
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["Cooldowns on RaidFrames Hunter"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text1Enabled"] = true,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["tocversion"] = 80300,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["uid"] = "UrVa2sSpTtd",
			["displayIcon"] = 841384,
			["outline"] = "OUTLINE",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
						},
						["spellIds"] = {
						},
						["auraspellids"] = {
							"186265", -- [1]
							"264735", -- [2]
							"281195", -- [3]
						},
						["useExactSpellId"] = true,
						["unit"] = "group",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["glowScale"] = 1,
			["alpha"] = 1,
			["stickyDuration"] = false,
			["fixedWidth"] = 200,
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["text2Font"] = "Friz Quadrata TT",
			["glowLines"] = 8,
			["config"] = {
			},
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1Font"] = "Friz Quadrata TT",
			["width"] = 20,
			["glow"] = false,
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["glowLength"] = 4,
			["text2"] = "%p",
			["authorOptions"] = {
			},
			["semver"] = "1.0.8",
			["text1Point"] = "BOTTOMRIGHT",
			["useglowColor"] = false,
			["text1"] = "%s",
			["zoom"] = 0,
			["wordWrap"] = "WordWrap",
			["justify"] = "LEFT",
			["cooldownTextEnabled"] = false,
			["id"] = "Cooldowns on RaidFrames Hunter",
			["automaticWidth"] = "Auto",
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["icon"] = true,
			["text1Containment"] = "INSIDE",
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["Automatic Trash Item Seller & Repairer 2.0"] = {
			["iconSource"] = -1,
			["authorOptions"] = {
			},
			["yOffset"] = 90,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["url"] = "https://www.weakauras.online/a/np3Z5NBAL6",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "custom",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["names"] = {
						},
						["custom_type"] = "event",
						["spellIds"] = {
						},
						["unit"] = "player",
						["genericShowOn"] = "showOnActive",
						["custom"] = "-- Automatically sells all \"grey\" items when interacting with a vendor type npc. Counts Items, posts them into the chat including their value / the gain and sums everything up at the end. Also, automatically repairs your items with priority on guild-repair, if available, and posts the according info into the chat.\n\n-- If you have any questions or suggestions, feel free to contact me via battle.net: Falco#2415. Best wishes! :)\n\n\nfunction()\n    local sum = 0\n    for bag=0,4 do\n        for slot=1,GetContainerNumSlots(bag) do\n            if GetContainerItemLink(bag,slot)~=nil then\n                if select(3,GetItemInfo(GetContainerItemLink(bag,slot)))==0\n                or (select(2,GetItemInfo(GetContainerItemLink(bag,slot))) ~= nil and strfind(select(2,GetItemInfo(GetContainerItemLink(bag,slot))), \"item:124439\"))\n                or (select(2,GetItemInfo(GetContainerItemLink(bag,slot))) ~= nil and strfind(select(2,GetItemInfo(GetContainerItemLink(bag,slot))), \"item:124438\"))\n                or (select(2,GetItemInfo(GetContainerItemLink(bag,slot))) ~= nil and strfind(select(2,GetItemInfo(GetContainerItemLink(bag,slot))), \"item:143681\"))\n                or (select(2,GetItemInfo(GetContainerItemLink(bag,slot))) ~= nil and strfind(select(2,GetItemInfo(GetContainerItemLink(bag,slot))), \"item:124117\"))\n                or (select(2,GetItemInfo(GetContainerItemLink(bag,slot))) ~= nil and strfind(select(2,GetItemInfo(GetContainerItemLink(bag,slot))), \"item:124121\"))\n                or (select(2,GetItemInfo(GetContainerItemLink(bag,slot))) ~= nil and strfind(select(2,GetItemInfo(GetContainerItemLink(bag,slot))), \"item:142336\"))\n                or (select(2,GetItemInfo(GetContainerItemLink(bag,slot))) ~= nil and strfind(select(2,GetItemInfo(GetContainerItemLink(bag,slot))), \"item:142335\"))\n                --or (select(2,GetItemInfo(GetContainerItemLink(bag,slot))) ~= nil and strfind(select(2,GetItemInfo(GetContainerItemLink(bag,slot))), \"item:124118\"))\n                --or GetItemSpell(GetContainerItemLink(bag,slot)) ~= nil and (GetItemSpell(GetContainerItemLink(bag,slot))==\"Macht verleihen\")\n                then\n                    UseContainerItem(bag,slot)\n                    print((\"|cffDA70D6Sold:|r \"..GetContainerItemLink(bag,slot)..\" |cffDA70D6x\"..select(2,GetContainerItemInfo(bag,slot))..\". Gain:|r |cffffcc00%dg|r |cffbbbbbb%ds|r |cffFF4500%dc|r\"):format(((select(11,GetItemInfo(GetContainerItemLink(bag,slot)))) * (select(2,GetContainerItemInfo(bag,slot)))) / 100 / 100, (((select(11,GetItemInfo(GetContainerItemLink(bag,slot)))) * (select(2,GetContainerItemInfo(bag,slot)))) / 100) % 100, ((select(11,GetItemInfo(GetContainerItemLink(bag,slot)))) * (select(2,GetContainerItemInfo(bag,slot)))) % 100)..\"|cffDA70D6.|r\")\n                    sum = sum + ((select(11,GetItemInfo(GetContainerItemLink(bag,slot)))) * (select(2,GetContainerItemInfo(bag,slot))))\n                end\n            end \n        end \n    end\n    ---\n    ---\n    ---\n    if sum > 0 then\n        print((\"|cffDA70D6Total:|r |cffffcc00%dg|r |cffbbbbbb%ds|r |cffFF4500%dc|r\"):format(sum / 100 / 100, (sum / 100) % 100, sum % 100)..\"|cffDA70D6.|r\")\n    end\n    if CanMerchantRepair()\n    and GetRepairAllCost() > 0 then\n        if CanGuildBankRepair()\n        and GetRepairAllCost() < GetGuildBankWithdrawMoney() then\n            print((\"|cffDA70D6You just repaired for|r |cffffcc00%dg|r |cffbbbbbb%ds|r |cffFF4500%dc|r\"):format(GetRepairAllCost() / 100 / 100, (GetRepairAllCost() / 100) % 100, GetRepairAllCost() % 100)..\"|cffDA70D6 from your guild bank's gold depot.|r\")\n            RepairAllItems(1)\n        elseif CanGuildBankRepair()\n        and GetRepairAllCost() > GetGuildBankWithdrawMoney() then\n            print((\"|cffDA70D6You just repaired for|r |cffffcc00%dg|r |cffbbbbbb%ds|r |cffFF4500%dc|r\"):format(GetRepairAllCost() / 100 / 100, (GetRepairAllCost() / 100) % 100, GetRepairAllCost() % 100)..\"|cffDA70D6 from your own gold.|r\")\n            RepairAllItems()\n        elseif not CanGuildBankRepair() then\n            print((\"|cffDA70D6You just repaired for|r |cffffcc00%dg|r |cffbbbbbb%ds|r |cffFF4500%dc|r\"):format(GetRepairAllCost() / 100 / 100, (GetRepairAllCost() / 100) % 100, GetRepairAllCost() % 100)..\"|cffDA70D6 from your own gold.|r\")\n            RepairAllItems()\n        end\n    end\nend\n\n-- wow, well... this basically checks all your bag slots for items of grey quality (or given id, which are basically trash, too) and then posts some info into the chat. let's be honest, this code is a fucking mess, so i wont go through it line by line now. if you have any questions, feel free to contact me ingame. ^.~",
						["events"] = "MERCHANT_SHOW",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["version"] = 1,
			["subRegions"] = {
				{
					["text_text_format_n_format"] = "none",
					["text_text"] = "%n",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "OUTER_BOTTOM",
					["text_visible"] = true,
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_shadowXOffset"] = 0,
				}, -- [1]
			},
			["height"] = 64,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_combat"] = false,
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["uid"] = "lVD4k29mjKQ",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["xOffset"] = 0,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["regionType"] = "icon",
			["desc"] = "\nAutomatic Trash Item Seller & Repairer 2.0\n\nVersion: 1.0.1\nAuthor: Falco\n\nPowered by WeakAuras.online\nYour No. 1 platform to manage and share your own WeakAuras.\n",
			["stickyDuration"] = false,
			["displayIcon"] = 133628,
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["parent"] = "A Kureq UI Customizations",
			["zoom"] = 0,
			["auto"] = true,
			["width"] = 64,
			["id"] = "Automatic Trash Item Seller & Repairer 2.0",
			["frameStrata"] = 1,
			["alpha"] = 1,
			["anchorFrameType"] = "SCREEN",
			["cooldownTextDisabled"] = false,
			["config"] = {
			},
			["inverse"] = false,
			["icon"] = true,
			["conditions"] = {
			},
			["cooldown"] = false,
			["cooldownEdge"] = false,
		},
		["Details! Aura Group"] = {
			["grow"] = "RIGHT",
			["controlledChildren"] = {
			},
			["borderBackdrop"] = "Blizzard Tooltip",
			["xOffset"] = -678.999450683594,
			["yOffset"] = 212.765991210938,
			["anchorPoint"] = "CENTER",
			["borderColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["space"] = 0,
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
						},
						["spellIds"] = {
						},
						["debuffType"] = "HELPFUL",
						["unit"] = "player",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = 1,
			},
			["columnSpace"] = 1,
			["radius"] = 200,
			["selfPoint"] = "LEFT",
			["align"] = "CENTER",
			["rotation"] = 0,
			["height"] = 20,
			["internalVersion"] = 40,
			["load"] = {
				["talent2"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["use_combat"] = true,
				["faction"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["authorOptions"] = {
			},
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["useLimit"] = false,
			["animate"] = true,
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["scale"] = 1,
			["rowSpace"] = 1,
			["border"] = false,
			["borderEdge"] = "Square Full White",
			["regionType"] = "dynamicgroup",
			["borderSize"] = 2,
			["sort"] = "none",
			["gridType"] = "RD",
			["limit"] = 5,
			["config"] = {
			},
			["borderOffset"] = 16,
			["uid"] = "99vlsuF7qdp",
			["width"] = 199.999969482422,
			["id"] = "Details! Aura Group",
			["frameStrata"] = 1,
			["gridWidth"] = 5,
			["anchorFrameType"] = "SCREEN",
			["stagger"] = 0,
			["borderInset"] = 0,
			["constantFactor"] = "RADIUS",
			["arcLength"] = 360,
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["fullCircle"] = true,
		},
		["FRHD: Bestial Wrath (E)"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 257476,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Bestial Wrath",
						["names"] = {
							"Bestial Wrath", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							257476, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "Enrage",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Accidental Presidency",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMLEFT",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["use_class"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
						["HUNTER"] = true,
						["SHAMAN"] = true,
						["DRUID"] = true,
						["PALADIN"] = true,
						["PRIEST"] = true,
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["regionType"] = "icon",
			["icon"] = true,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "fPF5IsHMY1W",
			["id"] = "FRHD: Bestial Wrath (E)",
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["width"] = 35,
			["frameStrata"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 132117,
			["cooldown"] = true,
			["authorOptions"] = {
			},
		},
		["Dungeon - Targeted Spells"] = {
			["arcLength"] = 360,
			["controlledChildren"] = {
				"Targeted Spells 2", -- [1]
				"Sound when targeted by a boss", -- [2]
			},
			["xOffset"] = 0,
			["preferToUpdate"] = false,
			["groupIcon"] = 1033497,
			["anchorPoint"] = "CENTER",
			["borderColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["rowSpace"] = 1,
			["url"] = "https://wago.io/BFADungeonTargetedSpells/65",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["backgroundInset"] = 0,
			["wordWrap"] = "WordWrap",
			["stagger"] = 0,
			["font"] = "Friz Quadrata TT",
			["load"] = {
				["use_class"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["animate"] = false,
			["scale"] = 1,
			["regionType"] = "dynamicgroup",
			["constantFactor"] = "RADIUS",
			["borderOffset"] = 4,
			["tocversion"] = 80300,
			["config"] = {
			},
			["fixedWidth"] = 200,
			["grow"] = "HORIZONTAL",
			["borderBackdrop"] = "Blizzard Tooltip",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["fullCircle"] = true,
			["useAnchorPerUnit"] = true,
			["automaticWidth"] = "Auto",
			["triggers"] = {
				{
					["trigger"] = {
						["debuffType"] = "HELPFUL",
						["type"] = "aura2",
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["names"] = {
						},
						["subeventPrefix"] = "SPELL",
						["event"] = "Health",
						["unit"] = "player",
					},
					["untrigger"] = {
					},
				}, -- [1]
			},
			["columnSpace"] = 1,
			["internalVersion"] = 40,
			["useLimit"] = true,
			["align"] = "CENTER",
			["version"] = 65,
			["subRegions"] = {
			},
			["limit"] = 3,
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["fontSize"] = 12,
			["radius"] = 200,
			["rotation"] = 0,
			["background"] = "None",
			["customTextUpdate"] = "update",
			["border"] = false,
			["borderEdge"] = "1 Pixel",
			["authorOptions"] = {
			},
			["borderSize"] = 2,
			["sort"] = "none",
			["outline"] = "OUTLINE",
			["gridType"] = "RD",
			["anchorPerUnit"] = "UNITFRAME",
			["space"] = 1,
			["gridWidth"] = 5,
			["justify"] = "LEFT",
			["selfPoint"] = "CENTER",
			["id"] = "Dungeon - Targeted Spells",
			["semver"] = "3.0.3",
			["frameStrata"] = 6,
			["anchorFrameType"] = "SCREEN",
			["displayText"] = "%p",
			["yOffset"] = 0,
			["uid"] = "zSrl30KxJ6i",
			["animation"] = {
				["start"] = {
					["easeStrength"] = 3,
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["easeStrength"] = 3,
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["easeStrength"] = 3,
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["borderInset"] = 1,
		},
		["A Kureq UI Customizations"] = {
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["controlledChildren"] = {
				"Buff BS", -- [1]
				"Pull Percent", -- [2]
				"Automatic Trash Item Seller & Repairer 2.0", -- [3]
				"Kureq Keystone", -- [4]
				"Kureq Titan", -- [5]
				"Skip Azerite Trait Reveal", -- [6]
				"KureqShitItems", -- [7]
				"RIP PATRICK", -- [8]
				"Grid2ProfileSwap", -- [9]
				"RavenProfileSwap - Paladin", -- [10]
				"FunGambling", -- [11]
			},
			["borderBackdrop"] = "Blizzard Tooltip",
			["authorOptions"] = {
			},
			["border"] = false,
			["yOffset"] = 0,
			["regionType"] = "group",
			["borderSize"] = 16,
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["scale"] = 1,
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["debuffType"] = "HELPFUL",
						["type"] = "aura",
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["unit"] = "player",
						["subeventPrefix"] = "SPELL",
						["event"] = "Health",
						["names"] = {
						},
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["xOffset"] = 0,
			["borderOffset"] = 5,
			["borderEdge"] = "None",
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["id"] = "A Kureq UI Customizations",
			["anchorPoint"] = "CENTER",
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
				["groupOffset"] = true,
			},
			["uid"] = "k)CHBbMvgou",
			["internalVersion"] = 40,
			["selfPoint"] = "BOTTOMLEFT",
			["borderInset"] = 11,
			["conditions"] = {
			},
			["load"] = {
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["config"] = {
			},
		},
		["SGBR: Ferocity (E)"] = {
			["iconSource"] = 0,
			["authorOptions"] = {
			},
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 272888,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Ferocity",
						["names"] = {
							"Ferocity", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							272888, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "Enrage",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Accidental Presidency",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMLEFT",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["use_class"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
						["HUNTER"] = true,
						["SHAMAN"] = true,
						["DRUID"] = true,
						["PALADIN"] = true,
						["PRIEST"] = true,
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeType"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["preset"] = "pulse",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["conditions"] = {
			},
			["regionType"] = "icon",
			["xOffset"] = 0,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["parent"] = "M+ - Purgeable Buffs",
			["stickyDuration"] = false,
			["cooldownTextDisabled"] = false,
			["zoom"] = 0,
			["auto"] = false,
			["config"] = {
			},
			["id"] = "SGBR: Ferocity (E)",
			["frameStrata"] = 1,
			["alpha"] = 1,
			["width"] = 35,
			["anchorFrameType"] = "SCREEN",
			["uid"] = "Qvj7Ixcg1bk",
			["inverse"] = false,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayIcon"] = 2065624,
			["cooldown"] = true,
			["icon"] = true,
		},
		["STRM: Consuming Void"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 276767,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Consuming Void",
						["names"] = {
							"Consuming Void", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							276767, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "NdWCRPPq9SQ",
			["id"] = "STRM: Consuming Void",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 134430,
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["Bosses"] = {
			["outline"] = "OUTLINE",
			["xOffset"] = 0,
			["displayText"] = "%name%formating%defeated%formating2%max %time",
			["displayText_format_formating_format"] = "none",
			["anchorPoint"] = "CENTER",
			["displayText_format_formating2_format"] = "none",
			["displayText_format_time_format"] = "none",
			["displayText_format_max_format"] = "none",
			["customTextUpdate"] = "event",
			["url"] = "https://wago.io/M+Timer/79",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "aura_env.decimals = aura_env.config[\"Decimals\"]\naura_env.obeliskE = aura_env.config[\"ObeliskE\"]\naura_env.level = 0\naura_env.obelisks = {\n    [\"161241\"] = true,\n    [\"161243\"] = true,\n    [\"161244\"] = true,\n    [\"161124\"] = true,\n}\naura_env.plevel = UnitLevel(\"player\")\naura_env.obeliskstore = aura_env.obeliskstore or 0\naura_env.bossname = {}\n\naura_env.formattime = function(time, msg)\n    local timeMin = math.floor(time / 60)\n    local timeSec = math.floor(time - (timeMin*60))\n    if timeMin < 10 then\n        timeMin = (\"0%d\"):format(timeMin)\n    end\n    if timeSec < 10 then\n        timeSec = (\"0%d\"):format(timeSec)\n    end\n    \n    local timeMS  = msg or select(2, strsplit(\".\", (time))) or select(2, strsplit(\".\", (GetTime()-time)))\n    local timeMS100 = math.floor(timeMS/100)\n    local timeMS10 = math.floor((timeMS-(timeMS100*100))/10)\n    local timeMS1 =timeMS-(timeMS100*100)-(timeMS10*10)\n    \n    \n    timeMS = (\".%s%s%s\"):format(timeMS100, timeMS10, timeMS1)\n    timeMS = (aura_env.decimals == 0 and \"\") or (timeMS and string.sub(timeMS, 1, aura_env.decimals+1))\n    return (\"- \"..\"%s:%s%s|r\"):format(timeMin, timeSec, timeMS)\nend\n\naura_env.obdef = aura_env.obdef or 0\n\n\nC_ChatInfo.RegisterAddonMessagePrefix(\"RELOE_M+_SYNCH\")\naura_env.bosstime = aura_env.bosstime or {}\n\n\n\nLoadAddOn(\"Blizzard_EncounterJournal\")\n\n\n\naura_env.maptoinst = {\n    [1677] = 1188, -- De Other Side\n    [1678] = 1188, -- De Other Side\n    [1679] = 1188, -- De Other Side\n    [1680] = 1188, -- De Other Side\n    [1669] = 1184, -- Mists of Tirna Scithe\n    [1697] = 1183, -- Plaguefall\n    [1675] = 1189, -- Sanguine Depths\n    [1676] = 1189, -- Sanguine Depths\n    [1692] = 1186, -- Spires of Ascension\n    [1693] = 1186, -- Spires of Ascension\n    [1694] = 1186, -- Spires of Ascension\n    [1695] = 1186, -- Spires of Ascension\n    [1666] = 1182, -- The Necrotic Wake\n    [1667] = 1182, -- The Necrotic Wake\n    [1668] = 1182, -- The Necrotic Wake\n    [1683] = 1187, -- Theater of Pain\n    [1684] = 1187, -- Theater of Pain\n    [1685] = 1187, -- Theater of Pain\n    [1686] = 1187, -- Theater of Pain\n    [1687] = 1187, -- Theater of Pain\n    [1663] = 1185, -- Halls of Atonement\n    [1664] = 1185, -- Halls of Atonement\n    [1665] = 1185, -- Halls of Atonement\n}\n\naura_env.setbossnames = function()\n    EncounterJournal_OpenJournal()\n    if EncounterJournalBossButton1 then\n        EncounterJournalBossButton1:Click()\n        EncounterJournalNavBarHomeButton:Click()\n    end\n    if aura_env.plevel == 120 or aura_env.plevel == 50 then\n        EJ_SelectTier(8)\n    elseif aura_env.plevel == 60 then\n        EJ_SelectTier(9)\n    end\n    EncounterJournalInstanceSelectDungeonTab:Click()\n    local mapID = C_Map.GetBestMapForUnit(\"player\")\n    local instanceID = EJ_GetInstanceForMap(mapID)\n    if instanceID == 0 then \n        instanceID = aura_env.maptoinst[mapID]\n    end\n    if instanceID and instanceID ~= 0 then\n        EJ_SelectInstance(instanceID)\n        for i=1, 10 do\n            local name = EJ_GetEncounterInfoByIndex(i, instanceID)\n            if name then\n                aura_env.bossname[i] = name\n            end\n        end\n        if EncounterJournalBossButton2 then\n            EncounterJournalBossButton2:Click()\n            EncounterJournalNavBarHomeButton:Click()\n        end\n        EncounterJournalInstanceSelectDungeonTab:Click()\n        EncounterJournal.CloseButton:Click()\n    else\n        EncounterJournal.CloseButton:Click()\n        print(\"bad instanceID for mapID: \"..mapID)\n    end\nend\n\n\n\n\n\n\n",
					["do_custom"] = true,
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["debuffType"] = "HELPFUL",
						["event"] = "Health",
						["unit"] = "player",
						["custom_type"] = "stateupdate",
						["names"] = {
						},
						["custom"] = "function(states, e, ...)\n    if e == \"OPTIONS\" then\n        local decimals = aura_env.config[\"Decimals\"]\n        local time = (decimals == 0 and \"10:53\") or (decimals == 1 and \"10:53.2\") or (decimals == 2 and \"10:53.27\") or (decimals == 3 and \"10:53.271\")\n        for i =11, 15 do\n            states[i] = {\n                name = \"Test Boss Name \"..i-10,\n                index = i, \n                time = time,\n                show = true,\n                done = true,\n                changed = true\n            }\n        end\n        states[14].done = false\n        states[15].done = false\n        return true\n    elseif e == \"CHAT_MSG_ADDON\" then\n        local prefix, msg, _, send = ...\n        if prefix == \"RELOE_M+_SYNCH\" then\n            local sender = send or UnitName(\"player\")\n            sender = gsub(sender, \"%-[^|]+\", \"\")\n            if sender == UnitName(\"player\") or not UnitExists(sender) or not UnitIsVisible(sender) then return end\n            if strsplit(\" \", msg) == \"Obelisk\" then\n                local id = select(2, strsplit(\" \", msg))\n                if aura_env.obelisks[id] then \n                    aura_env.obelisks[id] = false\n                    for k, _ in pairs(states) do\n                        if states[k].name == \"Obelisks\" and states[k].defeated < 4 then\n                            states[k].defeated = states[k].defeated+1\n                            aura_env.obdef = states[k].defeated\n                            states[k].changed = true\n                            if states[k].defeated == 4 then\n                                if not states[k].time then\n                                    local cur = (aura_env.start and GetTime()-aura_env.start+(C_ChallengeMode.GetDeathCount()*5)) or select(2, GetWorldElapsedTime(1)) or 0  \n                                    states[k].timer = cur\n                                    states[k].time = aura_env.formattime(cur)\n                                    states[k].MS = select(2, strsplit(\".\", (cur))) or select(2, strsplit(\".\", (GetTime()-cur)))\n                                    states[k].done = true\n                                    states[k].changed = true\n                                    aura_env.bosstime[k] = cur\n                                end\n                            end\n                            return true\n                        end\n                    end\n                end\n            elseif msg ==\"SYNCHPLS\" then\n                local text = \"\"\n                local count = 0\n                for k, _ in pairs(states) do\n                    if states[k].time then\n                        count = count+1\n                        text = text..\" \"..k..\" \"..states[k].timer..\" \"..states[k].MS\n                    end \n                end\n                if count > 0 then\n                    text = count..text\n                    C_ChatInfo.SendAddonMessage(\"RELOE_M+_SYNCH\", text, \"PARTY\")\n                end\n                for k, v in pairs(aura_env.obelisks) do\n                    if not v then\n                        C_ChatInfo.SendAddonMessage(\"RELOE_M+_SYNCH\", \"Obelisk \"..k, \"PARTY\")\n                    end\n                end\n            else\n                local count = strsplit(\" \", msg)\n                count = tonumber(count)\n                \n                msg = string.sub(msg, 3, string.len(msg))\n                local updatestate = false\n                if count > 0 then\n                    for i=1, count do\n                        local index, newtime, MS = select(1+(3*i)-3, strsplit(\" \", msg))\n                        index = tonumber(index)\n                        newtime = tonumber(newtime)\n                        MS = tonumber(string.sub(MS, 1, aura_env.decimals))\n                        if states[index] then\n                            if (not states[index].timer) or newtime < states[index].timer then\n                                local cur = (aura_env.start and GetTime()-aura_env.start+(C_ChallengeMode.GetDeathCount()*5)) or select(2, GetWorldElapsedTime(1)) or 0  \n                                states[index].timer = newtime\n                                states[index].time = aura_env.formattime(newtime, MS)\n                                states[index].MS = MS\n                                states[index].done = true\n                                states[index].changed = true\n                                aura_env.bosstime[index] = cur\n                                updatestate = true\n                                \n                            end\n                        end\n                    end\n                    return updatestate\n                end\n            end\n            \n        end\n        \n    elseif e == \"SCENARIO_CRITERIA_UPDATE\" or e == \"WORLD_STATE_TIMER_START\" or e == \"CHALLENGE_MODE_START\" or e ==\"WA_DELAYED_PLAYER_ENTERING_WORLD\" or e == \"OPTIONS_CLOSED\" then\n        aura_env.level = C_ChallengeMode.GetActiveKeystoneInfo()\n        if e == \"CHALLENGE_MODE_START\" then \n            if e == \"CHALLENGE_MODE_START\" and select(2, GetWorldElapsedTime(1)) < 2 then\n                for _, k in pairs(states) do\n                    k.show = false\n                    k.changed = true\n                end\n                aura_env.obelisks = {\n                    [\"161241\"] = true,\n                    [\"161243\"] = true,\n                    [\"161244\"] = true,\n                    [\"161124\"] = true,\n                }\n                aura_env.bossname = {}\n                aura_env.bosstime = {}\n                aura_env.obdef = 0\n            end\n            if aura_env.bossname ~= {} then\n                WeakAuras.ScanEvents(\"RELOE_SETBGHEIGHT\", #states)\n            else\n                WeakAuras.ScanEvents(\"RELOE_SETBGHEIGHT\", 0)\n            end\n            return true\n        end\n        if e == \"WORLD_STATE_TIMER_START\" then\n            if #aura_env.bossname < 2 then\n                aura_env.setbossnames()\n            end\n            aura_env.start = (select(2, GetWorldElapsedTime(1)) < 2 and GetTime()) or aura_env.start\n        end\n        if e == \"WA_DELAYED_PLAYER_ENTERING_WORLD\" then\n            C_ChatInfo.SendAddonMessage(\"RELOE_M+_SYNCH\", \"SYNCHPLS\", \"PARTY\")\n        end\n        local max = select(3, C_Scenario.GetStepInfo())\n        if #aura_env.bossname < max-1 then\n            aura_env.setbossnames()\n        end\n        for i=1, max do\n            if select(7, C_Scenario.GetCriteriaInfo(i)) ~= 0 then\n                local num = i\n                if C_ChallengeMode.GetActiveChallengeMapID() == 370 then \n                    num = i+4\n                end\n                aura_env.name = aura_env.bossname[num]\n                if aura_env.name and string.len(aura_env.name) > 25 then aura_env.name = string.sub(aura_env.name, 1, 25) end\n                \n                if aura_env.name and not states[i] then\n                    states[i] = {\n                        name = aura_env.name,\n                        index = i,\n                        show = true,\n                        done = false,\n                        changed = true,\n                        \n                    }\n                    if aura_env.bosstime[i] then\n                        local cur = aura_env.bosstime[i]\n                        states[i].timer = cur\n                        states[i].MS = select(2, strsplit(\".\", (cur))) or select(2, strsplit(\".\", (GetTime()-cur)))\n                        states[i].time = aura_env.formattime(cur)\n                        states[i].done = true\n                        states[i].changed = true\n                    end\n                end\n                \n                if select(3, C_Scenario.GetCriteriaInfo(i)) then\n                    if states[i] and not states[i].time then\n                        local cur = (aura_env.start and GetTime()-aura_env.start+(C_ChallengeMode.GetDeathCount()*5)) or select(2, GetWorldElapsedTime(1)) or 0\n                        states[i].timer = cur\n                        states[i].MS = select(2, strsplit(\".\", (cur))) or select(2, strsplit(\".\", (GetTime()-cur)))\n                        states[i].time = aura_env.formattime(cur)\n                        states[i].done = true\n                        states[i].changed = true\n                        aura_env.bosstime[i] = cur\n                    end\n                end\n                \n                if i == max and aura_env.obeliskE and aura_env.level > 9 and aura_env.plevel ~= 60 then\n                    if not states[i+1] then\n                        states[i+1] = {\n                            name = \"Obelisks\",\n                            defeated = aura_env.obdef or 0,\n                            formating = \" - \",\n                            formating2 = \"/\",\n                            max = 4,\n                            done = false,\n                            index = i, \n                            show = true,\n                            changed = true\n                        }\n                        if aura_env.bosstime[i+1] then\n                            local cur = aura_env.bosstime[i+1]\n                            states[i+1].timer = cur\n                            states[i+1].MS = select(2, strsplit(\".\", (cur))) or select(2, strsplit(\".\", (GetTime()-cur)))\n                            states[i+1].time = aura_env.formattime(cur)\n                            states[i+1].done = true\n                            states[i+1].changed = true\n                        end\n                    end\n                end\n            elseif i == max and aura_env.obeliskE and aura_env.level > 9 and aura_env.plevel ~= 60 then\n                if not states[i] then\n                    states[i] = {\n                        name = \"Obelisks\",\n                        defeated = aura_env.obdef or 0,\n                        formating = \" - \",\n                        formating2 = \"/\",\n                        max = 4,\n                        done = false,\n                        index = i,\n                        show = true,\n                        changed = true\n                    }\n                    if aura_env.bosstime[i] then\n                        local cur = aura_env.bosstime[i]\n                        states[i].timer = cur\n                        states[i].MS = select(2, strsplit(\".\", (cur))) or select(2, strsplit(\".\", (GetTime()-cur)))\n                        states[i].time = aura_env.formattime(cur)\n                        states[i].done = true\n                        states[i].changed = true\n                    end\n                end\n            end\n        end\n        if e == \"WORLD_STATE_TIMER_START\" then\n            if aura_env.bossname ~= {} then\n                WeakAuras.ScanEvents(\"RELOE_SETBGHEIGHT\", #states)\n            else\n                WeakAuras.ScanEvents(\"RELOE_SETBGHEIGHT\", 0)\n            end\n        end\n        return true\n    elseif e == \"ENCOUNTER_START\" and aura_env.obeliskE then\n        for k, _ in pairs(states) do\n            if states[k].name == \"Obelisks\" then \n                aura_env.obeliskstore = states[k].defeated \n                break\n            end\n        end\n    elseif e == \"ENCOUNTER_END\" and select(5, ...) == 0 and aura_env.obeliskE then \n        for k, _ in pairs(states) do\n            if states[k].name == \"Obelisks\" then\n                states[k].defeated  = aura_env.obeliskstore\n                aura_env.obdef = states[k].defeated\n                if aura_env.obdef < 4 then \n                    states[k].time = nil\n                    states[k].timer = nil\n                    states[k].MS = nil\n                    states[k].done = false\n                    states[k].changed = true\n                    for l, _ in pairs(aura_env.obelisks) do\n                        aura_env.obelisks[l] = true\n                    end\n                end\n                return true\n            end\n        end\n    elseif aura_env.obeliskE then\n        local destGUID = select(8, ...)\n        local unitID = destGUID and select(6, strsplit(\"-\", destGUID))\n        if aura_env.obelisks[unitID] then\n            aura_env.obelisks[unitID] = false\n            C_ChatInfo.SendAddonMessage(\"RELOE_M+_SYNCH\", \"Obelisk \"..unitID, \"PARTY\")\n            for k, _ in pairs(states) do\n                if states[k].name == \"Obelisks\" and states[k].defeated < 4 then\n                    states[k].defeated = states[k].defeated+1\n                    aura_env.obdef = states[k].defeated\n                    states[k].changed = true\n                    if states[k].defeated == 4 then\n                        if not states[k].time then\n                            local cur = (aura_env.start and GetTime()-aura_env.start+(C_ChallengeMode.GetDeathCount()*5)) or select(2, GetWorldElapsedTime(1)) or 0  \n                            states[k].timer = cur\n                            states[k].time = aura_env.formattime(cur)\n                            states[k].MS = select(2, strsplit(\".\", (cur))) or select(2, strsplit(\".\", (GetTime()-cur)))\n                            states[k].done = true\n                            states[k].changed = true\n                            aura_env.bosstime[k] = cur\n                        end\n                    end\n                    return true\n                end\n            end\n        end\n    end\nend",
						["events"] = "WA_DELAYED_PLAYER_ENTERING_WORLD CHAT_MSG_ADDON ENCOUNTER_START ENCOUNTER_END CLEU:UNIT_DIED CHALLENGE_MODE_START SCENARIO_CRITERIA_UPDATE WORLD_STATE_TIMER_START",
						["check"] = "event",
						["spellIds"] = {
						},
						["subeventPrefix"] = "SPELL",
						["customVariables"] = "{\n    done = \"bool\"\n}\n\n\n\n",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["displayText_format_defeated_format"] = "none",
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["displayText_format_name_format"] = "none",
			["font"] = "Expressway",
			["version"] = 79,
			["subRegions"] = {
			},
			["load"] = {
				["difficulty"] = {
					["single"] = "challenge",
					["multi"] = {
						["challenge"] = true,
					},
				},
				["role"] = {
				},
				["use_never"] = false,
				["use_size"] = true,
				["spec"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = true,
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["party"] = true,
					},
				},
			},
			["fontSize"] = 16,
			["shadowXOffset"] = 1,
			["preferToUpdate"] = false,
			["fixedWidth"] = 200,
			["regionType"] = "text",
			["shadowYOffset"] = -1,
			["wordWrap"] = "WordWrap",
			["parent"] = "M+ - Timer",
			["yOffset"] = 0,
			["selfPoint"] = "BOTTOM",
			["semver"] = "1.2.18",
			["tocversion"] = 80300,
			["id"] = "Bosses",
			["config"] = {
				["ObeliskE"] = true,
				["Decimals"] = 0,
			},
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["justify"] = "LEFT",
			["uid"] = "xzpK4p03vCb",
			["automaticWidth"] = "Auto",
			["authorOptions"] = {
				{
					["type"] = "number",
					["useDesc"] = false,
					["max"] = 3,
					["step"] = 1,
					["width"] = 1,
					["min"] = 0,
					["name"] = "Decimals on Finish Time",
					["key"] = "Decimals",
					["default"] = 0,
				}, -- [1]
				{
					["type"] = "toggle",
					["key"] = "ObeliskE",
					["default"] = true,
					["useDesc"] = false,
					["name"] = "Show Obelisk Count",
					["width"] = 1,
				}, -- [2]
			},
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
				{
					["check"] = {
						["trigger"] = 1,
						["variable"] = "done",
						["value"] = 1,
					},
					["changes"] = {
						{
							["value"] = {
								0, -- [1]
								1, -- [2]
								0.14117647058824, -- [3]
								0.79000000655651, -- [4]
							},
							["property"] = "color",
						}, -- [1]
					},
				}, -- [1]
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["MOLO: Earth Shield"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 268709,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Earth Shield",
						["names"] = {
							"Earth Shield", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							268709, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "UcAvA7QJZy4",
			["id"] = "MOLO: Earth Shield",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = "136089",
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["Cooldowns on RaidFrames Druid"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text2Font"] = "Friz Quadrata TT",
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["talent2"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["uid"] = "OTXST5D74R)",
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["spellIds"] = {
						},
						["auraspellids"] = {
							"61336", -- [1]
							"22812", -- [2]
							"102342", -- [3]
							"192081", -- [4]
							"158792", -- [5]
							"102558", -- [6]
						},
						["useExactSpellId"] = true,
						["unit"] = "group",
						["names"] = {
						},
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["authorOptions"] = {
			},
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["preferToUpdate"] = false,
			["zoom"] = 0,
			["stickyDuration"] = false,
			["parent"] = "Cooldowns on RaidFrames",
			["alpha"] = 1,
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["text1Containment"] = "INSIDE",
			["glowLines"] = 8,
			["text1Point"] = "BOTTOMRIGHT",
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["text1Font"] = "Friz Quadrata TT",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["width"] = 20,
			["text1Enabled"] = true,
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["glow"] = false,
			["displayIcon"] = 841384,
			["cooldownTextEnabled"] = false,
			["justify"] = "LEFT",
			["automaticWidth"] = "Auto",
			["useglowColor"] = false,
			["text1"] = "%s",
			["config"] = {
			},
			["text2"] = "%p",
			["semver"] = "1.0.8",
			["icon"] = true,
			["id"] = "Cooldowns on RaidFrames Druid",
			["wordWrap"] = "WordWrap",
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["tocversion"] = 80300,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["TSTH: Charged"] = {
			["iconSource"] = 0,
			["authorOptions"] = {
			},
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 269129,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Accumulated Charge",
						["names"] = {
							"Accumulated Charge", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							269129, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["desaturate"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Accidental Presidency",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 16,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["parent"] = "M+ - Purgeable Buffs",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "awSs)fmVXJv",
			["id"] = "TSTH: Charged",
			["width"] = 35,
			["alpha"] = 1,
			["anchorFrameType"] = "SCREEN",
			["frameStrata"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["stickyDuration"] = false,
			["displayIcon"] = 135769,
			["cooldown"] = true,
			["xOffset"] = 0,
		},
		["New 2"] = {
			["textureWrapMode"] = "CLAMP",
			["rotate"] = true,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["xOffset"] = -112.5,
			["width"] = 225,
			["mirror"] = false,
			["yOffset"] = 112.5,
			["regionType"] = "texture",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["blendMode"] = "BLEND",
			["authorOptions"] = {
			},
			["anchorPoint"] = "CENTER",
			["parent"] = "trumpet",
			["actions"] = {
				["start"] = {
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["texture"] = "interface\\wizard\\trump.tga",
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["spellIds"] = {
						},
						["buffShowOn"] = "showOnActive",
						["unit"] = "player",
						["names"] = {
							"Avenging Wrath", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["rotation"] = 0,
			["selfPoint"] = "CENTER",
			["id"] = "New 2",
			["animation"] = {
				["start"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["preset"] = "shrink",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
				},
				["main"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["preset"] = "wobble",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["frameStrata"] = 1,
			["desaturate"] = false,
			["discrete_rotation"] = 0,
			["config"] = {
			},
			["uid"] = "5qQEXdtsO6e",
			["alpha"] = 1,
			["height"] = 225,
			["conditions"] = {
			},
			["load"] = {
				["talent2"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["single"] = "PALADIN",
					["multi"] = {
					},
				},
				["use_class"] = true,
				["role"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["anchorFrameType"] = "SCREEN",
		},
		["Haste"] = {
			["outline"] = "OUTLINE",
			["modelIsUnit"] = false,
			["borderBackdrop"] = "Blizzard Tooltip",
			["xOffset"] = 0,
			["displayText"] = "%c",
			["customText"] = "function ()                     \n    local hastePercent = GetHaste();\n    \n    return \"Haste: \" .. string.format(\"%.1f\", hastePercent) .. \"%\"\nend",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["model_x"] = 0,
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "status",
						["use_alwaystrue"] = true,
						["subeventSuffix"] = "_CAST_START",
						["duration"] = "1",
						["genericShowOn"] = "showOnActive",
						["use_unit"] = true,
						["custom_hide"] = "timed",
						["names"] = {
						},
						["spellIds"] = {
						},
						["unit"] = "player",
						["event"] = "Conditions",
						["subeventPrefix"] = "SPELL",
						["unevent"] = "auto",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["advance"] = false,
			["model_path"] = "Creature/Arthaslichking/arthaslichking.m2",
			["rotation"] = 0,
			["font"] = "FORCED SQUARE",
			["wordWrap"] = "WordWrap",
			["height"] = 15.316210746765,
			["selfPoint"] = "BOTTOMLEFT",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["fontSize"] = 20,
			["sequence"] = 1,
			["color"] = {
				0, -- [1]
				0.35686274509804, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["scale"] = 1,
			["parent"] = "Stats",
			["border"] = false,
			["borderEdge"] = "None",
			["regionType"] = "text",
			["borderSize"] = 16,
			["shadowYOffset"] = -1,
			["conditions"] = {
			},
			["shadowXOffset"] = 1,
			["uid"] = "YcbhtQ1wtvp",
			["model_z"] = 0,
			["justify"] = "LEFT",
			["authorOptions"] = {
			},
			["id"] = "Haste",
			["model_y"] = 0,
			["frameStrata"] = 4,
			["width"] = 103.93161010742,
			["anchorFrameType"] = "SCREEN",
			["config"] = {
			},
			["borderOffset"] = 5,
			["borderInset"] = 11,
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["fixedWidth"] = 200,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
		},
		["Skip Azerite Trait Reveal"] = {
			["outline"] = "OUTLINE",
			["glow"] = false,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = "",
			["text2"] = "%p",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["shadowYOffset"] = -1,
			["text2Point"] = "CENTER",
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["icon"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["use_alwaystrue"] = true,
						["use_absorbMode"] = true,
						["genericShowOn"] = "showOnActive",
						["use_unit"] = true,
						["customIcon"] = "",
						["custom_hide"] = "timed",
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Conditions",
						["debuffType"] = "HELPFUL",
						["names"] = {
						},
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(e,name)\n    if e == \"ADDON_LOADED\" and name == \"Blizzard_AzeriteUI\" then\n        aura_env.hook()\n    end\nend",
						["unit"] = "player",
						["events"] = "ADDON_LOADED",
						["spellIds"] = {
						},
						["unevent"] = "auto",
						["subeventSuffix"] = "_CAST_START",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["events"] = "AZERITE_EMPOWERED_ITEM_LOOTED",
						["subeventSuffix"] = "_CAST_START",
						["custom"] = "function(e,...)\n    if e == \"AZERITE_EMPOWERED_ITEM_LOOTED\" then\n        local item = ...\n        local itemId = GetItemInfoFromHyperlink(item)\n        local bag\n        local slot\n        \n        C_Timer.After(0.4,function() \n                for i = 0, NUM_BAG_SLOTS do\n                    for j = 1, GetContainerNumSlots(i) do\n                        local id = GetContainerItemID(i,j)\n                        if id and id == itemId then\n                            slot = j\n                            bag = i\n                        end\n                    end\n                end\n                \n                if slot then\n                    local location = ItemLocation:CreateFromBagAndSlot(bag,slot)\n                    \n                    C_AzeriteEmpoweredItem.SetHasBeenViewed(location)\n                    C_AzeriteEmpoweredItem.HasBeenViewed(location)\n                end\n        end)\n    end\nend\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["activeTriggerMode"] = -10,
			},
			["parent"] = "A Kureq UI Customizations",
			["text1Enabled"] = false,
			["keepAspectRatio"] = false,
			["selfPoint"] = "BOTTOM",
			["fixedWidth"] = 200,
			["authorOptions"] = {
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["text1Containment"] = "INSIDE",
			["internalVersion"] = 40,
			["font"] = "Friz Quadrata TT",
			["uid"] = "1tiqGqeCzfd",
			["text2FontFlags"] = "OUTLINE",
			["height"] = 1.0000075101852,
			["text2Font"] = "Friz Quadrata TT",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["anchorFrameType"] = "SCREEN",
			["frameStrata"] = 1,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["wordWrap"] = "WordWrap",
			["text1Font"] = "Friz Quadrata TT",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["desaturate"] = false,
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["regionType"] = "text",
			["auto"] = true,
			["cooldownTextDisabled"] = false,
			["text2FontSize"] = 24,
			["text1Point"] = "BOTTOMRIGHT",
			["text1"] = "%s",
			["text1FontFlags"] = "OUTLINE",
			["zoom"] = 0,
			["justify"] = "LEFT",
			["shadowXOffset"] = 1,
			["id"] = "Skip Azerite Trait Reveal",
			["stickyDuration"] = false,
			["text2Enabled"] = false,
			["width"] = 1.0000075101852,
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.hook = function()\n    hooksecurefunc(AzeriteEmpoweredItemUI,\"OnItemSet\",function(self)\n            local itemLocation = self.azeriteItemDataSource:GetItemLocation()\n            if self:IsAnyTierRevealing() then\n                C_Timer.After(0.7,function() \n                        OpenAzeriteEmpoweredItemUIFromItemLocation(itemLocation)\n                end)\n            end\n    end)\nend\n\n\nif not (IsAddOnLoaded(\"Blizzard_AzeriteUI\")) then\n    UIParentLoadAddOn(\"Blizzard_AzeriteUI\")\nelse\n    aura_env.hook()\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["do_custom"] = true,
				},
			},
			["config"] = {
			},
			["inverse"] = false,
			["displayIcon"] = 2065560,
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["Cooldowns on RaidFrames"] = {
			["arcLength"] = 360,
			["controlledChildren"] = {
				"Cooldowns on RaidFrames Deathknight", -- [1]
				"Cooldowns on RaidFrames Demonhunter", -- [2]
				"Cooldowns on RaidFrames Warlock", -- [3]
				"Cooldowns on RaidFrames Hunter", -- [4]
				"Cooldowns on RaidFrames Rogue", -- [5]
				"Cooldowns on RaidFrames Paladin", -- [6]
				"Cooldowns on RaidFrames Monk", -- [7]
				"Cooldowns on RaidFrames Mage", -- [8]
				"Cooldowns on RaidFrames Druid", -- [9]
				"Cooldowns on RaidFrames Warrior", -- [10]
				"Cooldowns on RaidFrames Priest", -- [11]
				"Cooldowns on RaidFrames Shaman", -- [12]
				"Cooldowns on RaidFrames Devotion Aura (20%)", -- [13]
			},
			["xOffset"] = 3,
			["displayText"] = "%p",
			["yOffset"] = 8,
			["gridType"] = "RU",
			["borderColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["rowSpace"] = 1,
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["backgroundInset"] = 0,
			["wordWrap"] = "WordWrap",
			["stagger"] = 0,
			["font"] = "Friz Quadrata TT",
			["load"] = {
				["use_class"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["animate"] = false,
			["scale"] = 1,
			["regionType"] = "dynamicgroup",
			["constantFactor"] = "RADIUS",
			["borderOffset"] = 16,
			["tocversion"] = 80300,
			["borderInset"] = 0,
			["fixedWidth"] = 200,
			["grow"] = "GRID",
			["borderBackdrop"] = "Blizzard Tooltip",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["fullCircle"] = true,
			["useAnchorPerUnit"] = true,
			["background"] = "None",
			["triggers"] = {
				{
					["trigger"] = {
						["debuffType"] = "HELPFUL",
						["type"] = "aura2",
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["subeventPrefix"] = "SPELL",
						["unit"] = "player",
						["event"] = "Health",
						["names"] = {
						},
					},
					["untrigger"] = {
					},
				}, -- [1]
			},
			["columnSpace"] = 1,
			["internalVersion"] = 40,
			["useLimit"] = false,
			["align"] = "CENTER",
			["version"] = 29,
			["subRegions"] = {
			},
			["anchorPoint"] = "BOTTOMLEFT",
			["rotation"] = 0,
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["fontSize"] = 12,
			["config"] = {
			},
			["defaultIcon"] = true,
			["outline"] = "OUTLINE",
			["authorOptions"] = {
			},
			["border"] = false,
			["borderEdge"] = "1 Pixel",
			["radius"] = 200,
			["borderSize"] = 2,
			["anchorPerUnit"] = "UNITFRAME",
			["uid"] = "xsv3SGwjwRx",
			["customTextUpdate"] = "update",
			["limit"] = 5,
			["gridWidth"] = 4,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["justify"] = "LEFT",
			["selfPoint"] = "BOTTOMLEFT",
			["id"] = "Cooldowns on RaidFrames",
			["semver"] = "1.0.8",
			["frameStrata"] = 6,
			["anchorFrameType"] = "SCREEN",
			["space"] = 2,
			["automaticWidth"] = "Auto",
			["sort"] = "none",
			["preferToUpdate"] = false,
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["groupIcon"] = 134950,
		},
		["UNDR: Gift of G'huun"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 265091,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Gift of G'huun",
						["names"] = {
							"Gift of G'huun", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							265091, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["unevent"] = "auto",
						["custom_type"] = "event",
						["genericShowOn"] = "showOnActive",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "2dOyDV(HKhs",
			["id"] = "UNDR: Gift of G'huun",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = "1357795",
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["Targeted Spells"] = {
			["iconSource"] = -1,
			["authorOptions"] = {
				{
					["type"] = "description",
					["key"] = "option2",
					["fontSize"] = "large",
					["text"] = "Glow",
					["name"] = "Option #2",
					["width"] = 2,
				}, -- [1]
				{
					["type"] = "toggle",
					["key"] = "glowShow",
					["desc"] = "Glow frames when targeted by important spell",
					["default"] = true,
					["useDesc"] = true,
					["name"] = "Enable",
					["width"] = 0.65,
				}, -- [2]
				{
					["type"] = "color",
					["key"] = "glowColor",
					["default"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["name"] = "Color",
					["width"] = 0.65,
				}, -- [3]
				{
					["type"] = "select",
					["values"] = {
						"Standard", -- [1]
						"Pixel", -- [2]
						"AutoCast", -- [3]
					},
					["default"] = 2,
					["key"] = "glowType",
					["name"] = "Type",
					["width"] = 0.65,
				}, -- [4]
				{
					["softMin"] = 1,
					["type"] = "range",
					["bigStep"] = 1,
					["max"] = 50,
					["step"] = 1,
					["width"] = 0.65,
					["min"] = 1,
					["name"] = "Particules",
					["desc"] = "Number of particle groups (each groups contains 4 particles)",
					["softMax"] = 50,
					["useDesc"] = true,
					["key"] = "glowParticules",
					["default"] = 14,
				}, -- [5]
				{
					["min"] = 0,
					["type"] = "range",
					["key"] = "glowFrequency",
					["default"] = 0.3,
					["max"] = 1,
					["name"] = "Frequency",
					["step"] = 0.05,
					["width"] = 0.65,
				}, -- [6]
				{
					["type"] = "range",
					["useDesc"] = true,
					["max"] = 10,
					["step"] = 0.05,
					["width"] = 0.65,
					["min"] = 0,
					["name"] = "AutoCast's Scale",
					["desc"] = "Scale of particles",
					["key"] = "glowScale",
					["default"] = 1,
				}, -- [7]
				{
					["type"] = "range",
					["bigStep"] = 1,
					["max"] = 100,
					["step"] = 1,
					["width"] = 1,
					["min"] = -100,
					["key"] = "glowxOffset",
					["name"] = "X-Offset",
					["default"] = 0,
				}, -- [8]
				{
					["type"] = "range",
					["bigStep"] = 1,
					["max"] = 100,
					["step"] = 1,
					["width"] = 1,
					["min"] = -100,
					["key"] = "glowyOffset",
					["name"] = "Y-Offset",
					["default"] = 0,
				}, -- [9]
				{
					["type"] = "toggle",
					["key"] = "glowBorder",
					["desc"] = "Create border under lines",
					["default"] = false,
					["useDesc"] = true,
					["name"] = "Pixel's Border",
					["width"] = 0.65,
				}, -- [10]
				{
					["type"] = "number",
					["useDesc"] = true,
					["max"] = 20,
					["step"] = 0.05,
					["width"] = 0.65,
					["min"] = 0,
					["name"] = "Pixel's Length",
					["desc"] = "Length of lines",
					["key"] = "glowLength",
					["default"] = 8,
				}, -- [11]
				{
					["type"] = "number",
					["useDesc"] = true,
					["max"] = 10,
					["step"] = 0.05,
					["width"] = 0.65,
					["min"] = 0,
					["name"] = "Pixel's Thickness",
					["desc"] = "Thickness of lines",
					["key"] = "glowThickness",
					["default"] = 2,
				}, -- [12]
				{
					["type"] = "space",
					["variableWidth"] = true,
					["width"] = 1,
				}, -- [13]
				{
					["type"] = "description",
					["key"] = "option15",
					["fontSize"] = "large",
					["text"] = "Icons",
					["name"] = "Option #15",
					["width"] = 2,
				}, -- [14]
				{
					["type"] = "toggle",
					["key"] = "iconShow",
					["desc"] = "Show cast's icons on Unit Frames",
					["default"] = true,
					["useDesc"] = true,
					["name"] = "Enable",
					["width"] = 1,
				}, -- [15]
				{
					["type"] = "toggle",
					["key"] = "iconFilter",
					["desc"] = "Show icons for listed spells only",
					["default"] = false,
					["useDesc"] = true,
					["name"] = "Filter",
					["width"] = 1,
				}, -- [16]
				{
					["type"] = "range",
					["useDesc"] = true,
					["max"] = 5,
					["step"] = 1,
					["width"] = 1,
					["min"] = 1,
					["name"] = "Max Icons",
					["desc"] = "Maximum number of icons per frame",
					["key"] = "iconMax",
					["default"] = 3,
				}, -- [17]
				{
					["min"] = 0,
					["type"] = "number",
					["key"] = "iconSpacing",
					["default"] = 0,
					["max"] = 9999,
					["name"] = "Spacing",
					["step"] = 0.05,
					["width"] = 1,
				}, -- [18]
				{
					["type"] = "range",
					["bigStep"] = 1,
					["max"] = 100,
					["step"] = 1,
					["width"] = 1,
					["min"] = -100,
					["key"] = "iconxOffset",
					["name"] = "X-Offset",
					["default"] = 0,
				}, -- [19]
				{
					["min"] = -100,
					["type"] = "range",
					["key"] = "iconyOffset",
					["default"] = 0,
					["max"] = 100,
					["name"] = "Y-Offset",
					["step"] = 1,
					["width"] = 1,
				}, -- [20]
				{
					["type"] = "select",
					["values"] = {
						"LEFT", -- [1]
						"TOPLEFT", -- [2]
						"TOP", -- [3]
						"TOPRIGHT", -- [4]
						"RIGHT", -- [5]
						"BOTTOMRIGHT", -- [6]
						"BOTTOM", -- [7]
						"BOTTOMLEFT", -- [8]
						"CENTER", -- [9]
					},
					["default"] = 9,
					["key"] = "iconPosition",
					["name"] = "Position",
					["width"] = 1,
				}, -- [21]
				{
					["type"] = "select",
					["values"] = {
						"LEFT", -- [1]
						"RIGHT", -- [2]
						"TOP", -- [3]
						"BOTTOM", -- [4]
						"HORIZONTAL", -- [5]
						"VERTICAL", -- [6]
					},
					["default"] = 5,
					["key"] = "iconGrowDirection",
					["name"] = "Grow Direction",
					["width"] = 1,
				}, -- [22]
				{
					["type"] = "space",
					["variableWidth"] = true,
					["width"] = 1,
				}, -- [23]
				{
					["type"] = "description",
					["key"] = "option24",
					["fontSize"] = "large",
					["text"] = "Nameplate",
					["name"] = "Nameplate Options",
					["width"] = 2,
				}, -- [24]
				{
					["type"] = "toggle",
					["key"] = "nameplateShow",
					["desc"] = "Show cast's target on nameplate",
					["default"] = true,
					["useDesc"] = true,
					["name"] = "Enable",
					["width"] = 1,
				}, -- [25]
				{
					["type"] = "toggle",
					["key"] = "nameplateFilter",
					["desc"] = "Show nameplates for listed spells only",
					["default"] = true,
					["useDesc"] = true,
					["name"] = "Filter",
					["width"] = 1,
				}, -- [26]
				{
					["min"] = -200,
					["type"] = "range",
					["key"] = "nameplatexOffset",
					["default"] = 0,
					["max"] = 200,
					["name"] = "X-Offset",
					["step"] = 1,
					["width"] = 1,
				}, -- [27]
				{
					["min"] = -200,
					["type"] = "range",
					["key"] = "nameplateyOffset",
					["default"] = 20,
					["max"] = 200,
					["name"] = "Y-Offset",
					["step"] = 1,
					["width"] = 1,
				}, -- [28]
				{
					["type"] = "space",
					["variableWidth"] = true,
					["height"] = 1,
					["width"] = 2,
					["useHeight"] = false,
				}, -- [29]
				{
					["type"] = "description",
					["key"] = "option29",
					["fontSize"] = "small",
					["text"] = "Nameplate's font can be set in the \"Display\" tab -> text2",
					["name"] = "Option #29",
					["width"] = 2,
				}, -- [30]
				{
					["type"] = "space",
					["variableWidth"] = true,
					["height"] = 2,
					["width"] = 2,
					["useHeight"] = true,
				}, -- [31]
				{
					["type"] = "description",
					["text"] = "Line to Nameplate",
					["fontSize"] = "large",
					["width"] = 2,
				}, -- [32]
				{
					["type"] = "toggle",
					["key"] = "lineToNameplate",
					["desc"] = "Show a line between you and the caster on dangerous spells",
					["default"] = true,
					["useDesc"] = true,
					["name"] = "Enable",
					["width"] = 2,
				}, -- [33]
				{
					["softMin"] = 1,
					["type"] = "range",
					["bigStep"] = 1,
					["max"] = 20,
					["step"] = 1,
					["width"] = 1,
					["min"] = 1,
					["name"] = "Thickness",
					["softMax"] = 20,
					["useDesc"] = false,
					["key"] = "lineThickness",
					["default"] = 2,
				}, -- [34]
				{
					["type"] = "color",
					["name"] = "Color",
					["default"] = {
						1, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["useDesc"] = false,
					["key"] = "lineColor",
					["width"] = 1,
				}, -- [35]
				{
					["type"] = "space",
					["variableWidth"] = true,
					["height"] = 5,
					["width"] = 2,
					["useHeight"] = true,
				}, -- [36]
			},
			["customText"] = "function()\n    if aura_env.state and aura_env.state.stacks and aura_env.state.stacks > 1 then\n        return aura_env.state.stacks\n    end\nend",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["url"] = "https://wago.io/BFADungeonTargetedSpells/45",
			["actions"] = {
				["start"] = {
					["do_glow"] = false,
					["custom"] = "if aura_env.state.valid then\n    if aura_env.show_GLOW and aura_env.state.frame then\n        aura_env.Glow(aura_env.state.frame, true)\n    end\n    \n    if aura_env.state.targeted and aura_env.show_BIGICON then \n        WeakAuras.ScanEvents(\n            \"SHOW_BIGICON\",\n            aura_env.state.icon,\n            aura_env.state.spellId,\n            aura_env.state.duration\n        )\n    end\nend\n\n\n\n\n\n",
					["glow_action"] = "show",
					["do_custom"] = false,
					["sound"] = " custom",
					["do_sound"] = false,
				},
				["init"] = {
					["custom"] = "-- update 23/02/09 -- by Buds - https://wago.io/BFADungeonTargetedSpells\n\n-- Spell list\naura_env.spells = { \n    -- [spellId] = important (true or false),\n    [259832] = true, -- Massive Glaive - Stormbound Conqueror (Warport Wastari, Zuldazar, for testing purpose only)\n    \n    -- Raid\n    [284405] = true, -- Sirens - Tormented Song (Stormwall Blockade)\n    \n    -- Affixes\n    [288693] = false, -- Tormented Soul - Grave Bolt (Reaping affix)\n    \n    -- Atal'Dazar\n    [253239] = false, -- Dazar'ai Juggernaut - Merciless Assault\n    [256846] = false, -- Dinomancer Kish'o - Deadeye Aim\n    [257407] = true, -- Rezan - Pursuit\n    \n    -- Freehold\n    [257739] = true, -- Blacktooth Scrapper - Blind Rage\n    [258338] = true, -- Captain Raoul - Blackout Barrel\n    [256979] = true, -- Captain Eudora - Powder Shot\n    \n    -- Kings'Rest\n    [266231] = true, -- Kula the Butcher - Severing Axe\n    [270507] = true, --  Spectral Beastmaster - Poison Barrage\n    [265773] = true, -- The Golden Serpent - Spit Gold\n    [270506] = true, -- Spectral Beastmaster - Deadeye Shot\n    \n    -- Shrine of the Storm\n    [264166] = true, -- Aqu'sirr - Undertow\n    [268214] = true, -- Runecarver Sorn - Carve Flesh\n    \n    -- Siege of Boralus\n    [257641] = false, -- Kul Tiran Marksman - Molten Slug\n    [272874] = true, -- Ashvane Commander - Trample\n    [272581] = false, -- Bilge Rat Tempest - Water Spray\n    [272528] = false, -- Ashvane Sniper - Shoot\n    [272542] = true, -- Ashvane Sniper - Ricochet\n    \n    -- Temple of Sethraliss\n    [268703] = false, -- Charged Dust Devil - Lightning Bolt\n    [272670] = false, -- Sandswept Marksman - Shoot\n    [267278] = false, -- Static-charged Dervish - Electrocute\n    [272820] = false, -- Spark Channeler - Shock\n    [274642] = false, -- Hoodoo Hexer - Lava Burst\n    [268061] = false, -- Plague Doctor - Chain Lightning\n    \n    -- The Motherlode!!\n    [268185] = true, -- Refreshment Vendor, Iced Spritzer\n    [258674] = false, -- Off-Duty Laborer - Throw Wrench\n    [276304] = false, -- Rowdy Reveler - Penny For Your Thoughts\n    [263628] = true, -- Mechanized Peacekeeper - Charged Claw\n    [263209] = false, -- Mine Rat - Throw Rock\n    [263202] = false, -- Venture Co. Earthshaper - Rock Lance\n    [262794] = false, -- Venture Co. Mastermind - Energy Lash\n    [260669] = true, -- Rixxa Fluxflame - Propellant Blast\n    \n    -- The Underrot\n    [265376] = true, -- Fanatical Headhunter - Barbed Spear\n    [265084] = false, -- Devout Blood Priest - Blood Bolt\n    [265625] = true, -- Befouled Spirit - Dark Omen\n    \n    -- Tol Dagor\n    [256039] = true, -- Overseer Korgus - Deadeye\n    [185857] = false, -- Ashvane Spotter - Shoot\n    \n    -- Waycrest Manor\n    [263891] = false, -- Heartsbane Vinetwister - Grasping Thorns\n    [264510] = false, -- Crazed Marksman - Shoot\n    [260699] = false, -- Coven Diviner - Soul Bolt\n    [260551] = true, -- Soulbound Goliath - Soul Thorns\n    [260741] = true, -- Heartsbane Triad - Jagged Nettles\n    [268202] = true, -- Gorak Tul - Death Lens\n}\n\naura_env.blacklist_npc = {\n    [120651] = true, -- explosive orb affix\n}\naura_env.blacklist_spell = {\n    \n}\n\n-- DO NOT EDIT BELOW --\n\naura_env.loaded = false\n\naura_env.position = {\"LEFT\",\"TOPLEFT\",\"TOP\",\"TOPRIGHT\",\"RIGHT\",\"BOTTOMRIGHT\",\"BOTTOM\",\"BOTTOMLEFT\",\"CENTER\"}\naura_env.direction = {\"LEFT\",\"RIGHT\",\"TOP\",\"BOTTOM\",\"HORIZONTAL\",\"VERTICAL\"}\n\naura_env.isBlackListed = function(spellId, unit)\n    local guid = UnitGUID(unit)\n    local npc_id= select(6,strsplit(\"-\",guid))\n    return aura_env.blacklist_spell[spellId] or aura_env.blacklist_npc[npc_id]\nend\n\naura_env.allcasts = {}\n\nif select(4, GetAddOnInfo(\"LibGetFrame-1.0\")) then\n    aura_env.GetFrame = LibStub(\"LibGetFrame-1.0\").GetFrame\nelse\n    WeakAuras.prettyPrint((\"'%s' requires LibGetFrame-1.0 get it at https://www.curseforge.com/wow/addons/libgetframe\"):format(aura_env.id))\n    return\nend\n\n-- Custom Glow\n\nlocal LCG = LibStub(\"LibCustomGlow-1.0\")\nlocal glowTypes = {\"Standard\", \"Pixel\", \"AutoCast\"}\n\nlocal glowFunc\nif type(budsCleanFrames) ~= \"table\" then\n    budsCleanFrames = {}\n    local cleaner = function()\n        if not InCombatLockdown() then\n            for auraid, frames in pairs(budsCleanFrames) do\n                for frame, glowType in pairs(frames) do\n                    glowFunc(frame, false, auraid, glowType)\n                end\n            end\n        end\n    end\n    -- hide glow on opening WeakAurasOptions\n    hooksecurefunc(WeakAuras, \"OpenOptions\", cleaner)\nend\nif type(budsCleanFrames[aura_env.id]) ~= \"table\" then\n    budsCleanFrames[aura_env.id] = {} \nend\n\nglowFunc = function(frame, show, id, glowType)\n    if frame then\n        id = id or aura_env.id\n        glowType = glowType or glowTypes[aura_env.config.glowType]\n        if show then\n            budsCleanFrames[id][frame] = glowType\n            if glowType == \"AutoCast\" then\n                LCG.AutoCastGlow_Start(\n                    frame,\n                    aura_env.config.glowColor,\n                    aura_env.config.glowParticules,\n                    aura_env.config.glowFrequency,\n                    aura_env.config.glowScale,\n                    aura_env.config.glowxOffset,\n                    aura_env.config.glowyOffset,\n                    id\n                )\n            elseif glowType == \"Pixel\" then\n                LCG.PixelGlow_Start(\n                    frame,\n                    aura_env.config.glowColor,\n                    aura_env.config.glowParticules,\n                    aura_env.config.glowFrequency,\n                    aura_env.config.glowLength,\n                    aura_env.config.glowThickness,\n                    aura_env.config.glowxOffset,\n                    aura_env.config.glowyOffset,\n                    aura_env.config.glowBorder,\n                    id\n                )\n            elseif glowType == \"Standard\" then\n                LCG.ButtonGlow_Start(\n                    frame,\n                    aura_env.config.glowColor,\n                    aura_env.config.glowFrequency\n                )\n            end\n        else\n            budsCleanFrames[id][frame] = nil\n            if glowType == \"AutoCast\" then\n                LCG.AutoCastGlow_Stop(frame, id)\n            elseif glowType == \"Pixel\" then\n                LCG.PixelGlow_Stop(frame, id)\n            elseif glowType == \"Standard\" then\n                LCG.ButtonGlow_Stop(frame)\n            end\n        end\n    end\nend\n\naura_env.Glow = glowFunc\n\n\n\n-- Nameplates Text\nlocal fonts = {}\n\naura_env.addFontToNameplate = function(unit, target)\n    local nameplate = C_NamePlate.GetNamePlateForUnit(unit)\n    if nameplate then\n        local nameplateUnit = nameplate.namePlateUnitToken or nameplate.unitFrame and nameplate.unitFrame.unit\n        if nameplateUnit then\n            if not fonts[nameplateUnit] then\n                fonts[nameplateUnit] = UIParent:CreateFontString(nil, \"OVERLAY\")\n                fonts[nameplateUnit]:SetFont(aura_env.region.text2:GetFont() or \"Fonts\\\\2002.TTF\", 20, \"OUTLINE\")\n            end\n            local font = fonts[nameplateUnit]\n            font:SetPoint(\"CENTER\", nameplate, \"CENTER\", aura_env.config.nameplatexOffset, aura_env.config.nameplateyOffset)\n            font:SetText(WA_ClassColorName(target))\n            font:Show()\n            return nameplateUnit\n        end\n    end\n    return true\nend\n\naura_env.removeFontFromNameplate = function(unit)\n    local font = fonts[unit]\n    if font then\n        font:Hide()\n    end\nend\n\n-- Nameplates lines\nif type(budsCleanLines) ~= \"table\" then\n    if type(LinesFrames) ~= \"table\" then\n        LinesFrame = CreateFrame(\"Frame\")\n    end\n    local createLine = function()\n        return LinesFrame:CreateLine(nil, \"OVERLAY\", 7)\n    end\n    local releaseLine = function(_, line)\n        line:Hide()\n    end\n    budsCleanLines = CreateObjectPool(createLine, releaseLine)\n    local cleaner = function()\n        if not InCombatLockdown() then\n            budsCleanLines:ReleaseAll()\n        end\n    end\n    hooksecurefunc(WeakAuras, \"OpenOptions\", cleaner)\nend\n\nlocal linePool = budsCleanLines\nlocal lines = {}\n\naura_env.addLineToNameplate = function(unit)\n    local nameplate = C_NamePlate.GetNamePlateForUnit(unit)\n    if nameplate then\n        local nameplateUnit = nameplate.namePlateUnitToken or nameplate.unitFrame and nameplate.unitFrame.unit\n        if nameplateUnit then\n            local line = linePool:Acquire()\n            local color = aura_env.config.lineColor\n            line:SetThickness(aura_env.config.lineThickness)\n            line:SetColorTexture(unpack(color))\n            line:SetStartPoint(\"CENTER\", UIParent)\n            line:SetEndPoint(\"BOTTOM\", nameplate)\n            line:Show()\n            lines[nameplateUnit] = line\n            return nameplateUnit\n        end\n    end\n    return true\nend\n\naura_env.removeLineFromNameplate = function(unit)\n    local line = lines[unit]\n    if line then\n        linePool:Release(line)\n    end\nend\n\n\naura_env.loaded = true",
					["do_custom"] = true,
				},
				["finish"] = {
					["custom"] = "local env = aura_env\nif env.config.glowShow and env.state.frame and env.state.spellInList then\n    env.Glow(env.state.frame, false)\nend\n\nif env.state.targeted and env.show_BIGICON then\n    WeakAuras.ScanEvents(\n        \"HIDE_BIGICON\",\n        env.state.spellId\n    )\nend\n\n-- fix \"ghosts\" casts\nfor sourceGUID in pairs(env.state.casts) do\n    local cast = env.allcasts[sourceGUID]\n    if cast then\n        if cast.nameplate then\n            env.removeFontFromNameplate(cast.nameplate)\n        end\n        if cast.lineToNameplate then\n            env.removeLineFromNameplate(cast.lineToNameplate)\n        end\n        env.allcasts[sourceGUID] = nil\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["duration"] = "1",
						["genericShowOn"] = "showOnActive",
						["names"] = {
						},
						["debuffType"] = "HELPFUL",
						["type"] = "custom",
						["unevent"] = "timed",
						["subeventPrefix"] = "SPELL",
						["unit"] = "player",
						["event"] = "Health",
						["custom_hide"] = "timed",
						["buffShowOn"] = "showOnActive",
						["spellIds"] = {
						},
						["custom"] = "function(allstates, event, sourceUnit)\n    if not aura_env.loaded then return false end\n    if event == \"ENCOUNTER_END\" then\n        -- reset aura state to avoid ghost icons between pulls\n        for _,cast in pairs(aura_env.allcasts) do\n            if cast.nameplate then\n                aura_env.removeFontFromNameplate(cast.nameplate)\n            end\n            if cast.lineToNameplate then\n                aura_env.removeLineFromNameplate(cast.lineToNameplate)\n            end\n        end\n        aura_env.allcasts = {}\n        for _,state in pairs(allstates) do\n            state.show = false\n            state.changed = true\n        end\n        return true\n    end\n    if sourceUnit and UnitIsEnemy(sourceUnit, \"player\") then\n        local allcasts = aura_env.allcasts\n        local sourceGUID = UnitGUID(sourceUnit)\n        local iconChanged = false\n        local cast = allcasts[sourceGUID]\n        \n        if event == \"UNIT_SPELLCAST_START\"\n        or event == \"UNIT_SPELLCAST_DELAYED\" \n        or event == \"UNIT_SPELLCAST_CHANNEL_START\"\n        or event == \"UNIT_SPELLCAST_CHANNEL_UPDATE\"\n        or event == \"UNIT_TARGET\"\n        then\n            if not cast then\n                -- check if unit is casting\n                local castType\n                local name,_,texture,castStart,castEnd,_,_,notInterruptible,spellId = UnitCastingInfo(sourceUnit)\n                if name then\n                    castType = \"cast\"\n                else\n                    name,_,texture,castStart,castEnd,_,notInterruptible,spellId = UnitChannelInfo(sourceUnit)\n                    if name then\n                        castType = \"channel\"\n                    end\n                end\n                \n                if spellId and not aura_env.isBlackListed(spellId, sourceUnit) then\n                    local spellInList = aura_env.spells[spellId] ~= nil\n                    if not aura_env.config.iconFilter or not aura_env.config.nameplateFilter or spellInList then\n                        -- find npc's target\n                        local targetUnit = sourceUnit..\"target\"\n                        if UnitExists(targetUnit) then\n                            for groupmember in WA_IterateGroupMembers() do\n                                if UnitIsUnit(targetUnit, groupmember) then\n                                    if spellInList or not aura_env.config.iconFilter  then\n                                        local targetGUID = UnitGUID(groupmember)\n                                        local targeted = targetGUID == WeakAuras.myGUID\n                                        allcasts[sourceGUID] = {\n                                            name = name,\n                                            icon = texture,\n                                            start = castStart/1000,\n                                            expirationTime = castEnd/1000,\n                                            spellId = spellId,\n                                            target = groupmember,\n                                            targetGUID = targetGUID,\n                                            targeted = targeted,\n                                            spellInList = spellInList,\n                                            notInterruptible = notInterruptible,\n                                            spellIsDangerous = aura_env.spells[spellId],\n                                            castType = castType\n                                        }\n                                        if aura_env.config.nameplateShow\n                                        and (spellInList or not aura_env.config.nameplateFilter)\n                                        then\n                                            allcasts[sourceGUID].nameplate = aura_env.addFontToNameplate(\n                                                sourceUnit,\n                                                groupmember\n                                            )\n                                        end\n                                        if aura_env.config.lineToNameplate and spellInList and targeted then\n                                            allcasts[sourceGUID].lineToNameplate = aura_env.addLineToNameplate(sourceUnit)\n                                        end\n                                        \n                                        iconChanged = true\n                                    end\n                                    break\n                                end\n                            end\n                        end\n                    end\n                end\n            else\n                if UnitExists(sourceUnit) then\n                    if event == \"UNIT_SPELLCAST_DELAYED\" \n                    or event == \"UNIT_SPELLCAST_CHANNEL_UPDATE\"\n                    or event == \"UNIT_SPELLCAST_CHANNEL_START\"\n                    then\n                        local castType\n                        local name,_,_,castStart,castEnd,_,_,notInterruptible,spellId = UnitCastingInfo(sourceUnit)\n                        if name then\n                            castType = \"cast\"\n                        else\n                            name,_,_,castStart,castEnd,_,notInterruptible,spellId = UnitChannelInfo(sourceUnit)\n                            if name then\n                                castType = \"channel\"\n                            end\n                        end\n                        if spellId then\n                            cast.notInterruptible = notInterruptible\n                            cast.castType = castType\n                            cast.start = castStart/1000\n                            cast.expirationTime = castEnd/1000\n                            cast.changed = true                            \n                            \n                            iconChanged = true\n                        end\n                    elseif event == \"UNIT_TARGET\" then\n                        local targetUnit = sourceUnit..\"target\"\n                        if UnitExists(targetUnit) then\n                            for groupmember in WA_IterateGroupMembers() do\n                                if UnitIsUnit(targetUnit, groupmember) then\n                                    if cast.nameplate then\n                                        aura_env.removeFontFromNameplate(cast.nameplate)\n                                    end\n                                    if cast.lineToNameplate then\n                                        aura_env.removeLineFromNameplate(cast.lineToNameplate) \n                                    end                                    \n                                    \n                                    local targetGUID = UnitGUID(groupmember)\n                                    local targeted = targetGUID == WeakAuras.myGUID\n                                    local spellId = cast.spellId\n                                    cast.changed = true\n                                    cast.target = groupmember\n                                    cast.targetGUID = targetGUID\n                                    cast.targeted = targeted\n                                    \n                                    if aura_env.config.nameplateShow\n                                    and (cast.spellInList or not aura_env.nameplateFilter)\n                                    then\n                                        cast.nameplate = aura_env.addFontToNameplate(\n                                            sourceUnit,\n                                            groupmember\n                                        )\n                                    end\n                                    if aura_env.config.lineToNameplate and cast.spellInList and targeted then\n                                        cast.lineToNameplate = aura_env.addLineToNameplate(sourceUnit)\n                                    end\n                                    \n                                    iconChanged = true\n                                    break\n                                end\n                            end\n                        end\n                    end\n                end\n            end\n        elseif event == \"UNIT_SPELLCAST_STOP\" --  or event == \"UNIT_SPELLCAST_SUCCEEDED\"\n        or event == \"UNIT_SPELLCAST_INTERRUPTED\"\n        or event == \"UNIT_SPELLCAST_FAILED\"\n        or event == \"UNIT_SPELLCAST_FAILED_QUIET\"\n        or event == \"UNIT_SPELLCAST_CHANNEL_STOP\"\n        then\n            if cast then\n                if cast.nameplate then\n                    aura_env.removeFontFromNameplate(cast.nameplate)\n                end\n                if cast.lineToNameplate then\n                    aura_env.removeLineFromNameplate(cast.lineToNameplate) \n                end\n                allcasts[sourceGUID] = nil\n                iconChanged = true\n            end\n        elseif event == \"NAME_PLATE_UNIT_REMOVED\" then\n            if cast then\n                if cast.nameplate then\n                    aura_env.removeFontFromNameplate(cast.nameplate)\n                end\n                if cast.lineToNameplate then\n                    aura_env.removeLineFromNameplate(cast.lineToNameplate)\n                end\n            end\n        elseif event == \"NAME_PLATE_UNIT_ADDED\" then\n            if cast and cast.nameplate then\n                cast.nameplate = aura_env.addFontToNameplate(\n                    sourceUnit,\n                    cast.target\n                )\n            end\n            if cast and cast.lineToNameplate then\n                cast.lineToNameplate = aura_env.addLineToNameplate(sourceUnit)\n            end\n        end\n        \n        if iconChanged then\n            -- update allstates from allcasts\n            for sourceGUID, cast in pairs(allcasts) do\n                -- index for allstates is \"spellId_targetGUID\"\n                local index = (\"%s_%s\"):format(cast.spellId, cast.targetGUID)\n                \n                local state = allstates[index]\n                \n                if state and state.show then\n                    state.casts[sourceGUID] = true\n                    if cast.expirationTime > state.expirationTime then\n                        state.expirationTime = cast.expirationTime\n                        state.changed = true\n                    end\n                else\n                    allstates[index] = {\n                        show = true,\n                        name = cast.name,\n                        icon = cast.icon,\n                        changed = true,\n                        autoHide = true,\n                        progressType = \"timed\",\n                        duration = cast.expirationTime - cast.start,\n                        expirationTime = cast.expirationTime,\n                        frame = aura_env.GetFrame(cast.target),\n                        spellId = cast.spellId,\n                        notInterruptible = cast.notInterruptible,\n                        target = cast.target,\n                        targetGUID = cast.targetGUID,\n                        casts = {\n                            [sourceGUID] = true\n                        },\n                        targeted = cast.targeted,\n                        spellInList = cast.spellInList,\n                        spellIsDangerous = cast.spellIsDangerous,\n                        castType = cast.castType\n                    }\n                end\n            end\n            \n            -- count how much of the same cast is showing each icon\n            -- remove casts stopped from state.casts\n            -- remove state if state.casts is empty\n            for index, state in pairs(allstates) do \n                if state.show then\n                    local countcasts = 0\n                    for sourceGUID,_ in pairs(state.casts) do\n                        local cast = allcasts[sourceGUID]\n                        if not cast\n                        or (cast and cast.targetGUID ~= state.targetGUID)\n                        then\n                            state.casts[sourceGUID] = nil\n                        else \n                            state.changed = true\n                            countcasts = countcasts + 1\n                        end\n                    end\n                    allstates[index].stacks = countcasts\n                    -- hide if no cast\n                    if countcasts == 0 then\n                        state.show = false \n                        state.changed = true\n                    end\n                end\n            end\n            \n            if aura_env.config.iconShow then\n                -- count how much icons per player, and set icons order\n                local icon_count = {}\n                for index,state in pairs(allstates) do\n                    if state.show then\n                        icon_count[state.target] = (icon_count[state.target] or 0) + 1\n                        if icon_count[state.target] > aura_env.config.iconMax then\n                            icon_count[state.target] = aura_env.config.iconMax\n                        end\n                        state.icon_order = icon_count[state.target]\n                    end\n                end\n                \n                -- set position of each icon\n                for index, state in pairs(allstates) do\n                    if state.show then\n                        local region = WeakAuras.GetRegion(aura_env.id, index)\n                        local width = region:GetWidth()\n                        if state.frame and region then\n                            local count = icon_count[state.target]\n                            local order = state.icon_order\n                            local height = region:GetHeight() + aura_env.config.iconSpacing\n                            local width = region:GetWidth() + aura_env.config.iconSpacing\n                            local xoffset, yoffset = 0, 0\n                            local growDirection = aura_env.direction[aura_env.config.iconGrowDirection]\n                            if growDirection == \"TOP\" then\n                                yoffset = order * height\n                            elseif growDirection == \"BOTTOM\" then\n                                yoffset = - order * height\n                            elseif growDirection == \"RIGHT\" then\n                                xoffset = order * width\n                            elseif growDirection == \"LEFT\" then\n                                xoffset = - order * width\n                            elseif growDirection == \"HORIZONTAL\" then\n                                xoffset = (-((count - 1) * width / 2)) + (order - 1) * width\n                            elseif growDirection == \"VERTICAL\" then\n                                xoffset = (-((count - 1) * width / 2)) + (order - 1) * width\n                            end\n                            \n                            \n                            if order + 1 > aura_env.config.iconMax then\n                                xoffset = -3000\n                            end\n                            --region:ClearAllPoints()\n                            local position = aura_env.position[aura_env.config.iconPosition]\n                            region:SetAnchor(position, state.frame, position)\n                            region:SetOffset(\n                                aura_env.config.iconxOffset+xoffset,\n                                aura_env.config.iconyOffset+yoffset\n                            )\n                        end\n                    end\n                end\n            end\n        end\n    end\n    \n    return true\nend",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED UNIT_SPELLCAST_CHANNEL_START UNIT_SPELLCAST_CHANNEL_STOP UNIT_SPELLCAST_CHANNEL_UPDATE UNIT_SPELLCAST_DELAYED UNIT_SPELLCAST_FAILED UNIT_SPELLCAST_FAILED_QUIET UNIT_SPELLCAST_INTERRUPTED UNIT_SPELLCAST_START UNIT_SPELLCAST_STOP UNIT_TARGET ENCOUNTER_END",
						["check"] = "event",
						["custom_type"] = "stateupdate",
						["subeventSuffix"] = "_CAST_START",
						["customVariables"] = "{\n    targeted = {\n        display = \"Targeted\",\n        type = \"bool\"\n    },\n    spellIsDangerous = {\n        display = \"Spell is Dangerous\",\n        type = \"bool\"\n    },\n    spellInList = {\n        display = \"Spell is in the List\",\n        type = \"bool\"\n    },\n    spellId = {\n        display = \"Spell Id\",\n        type = \"number\"\n    },\n    notInterruptible = {\n        display = \"Not Interruptible\",\n        type = \"bool\"\n    },\n    castType = {\n        display = \"Cast Type\",\n        type = \"select\",\n        values = {\n            [\"cast\"] = \"Cast\",\n            [\"channel\"] = \"Channeling\"\n        }\n    }\n}",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["stickyDuration"] = false,
			["version"] = 45,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%c",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "2002",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "OUTER_BOTTOM",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 20,
			["load"] = {
				["use_size"] = false,
				["use_never"] = true,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["ten"] = true,
						["twentyfive"] = true,
						["fortyman"] = true,
						["flexible"] = true,
						["none"] = true,
						["party"] = true,
						["arena"] = true,
						["twenty"] = true,
						["pvp"] = true,
					},
				},
			},
			["zoom"] = 0,
			["xOffset"] = -5000,
			["parent"] = "BFA Dungeon - Targeted Spells 2",
			["regionType"] = "icon",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["desaturate"] = false,
			["icon"] = true,
			["config"] = {
				["glowFrequency"] = 0.3,
				["glowxOffset"] = 0,
				["glowType"] = 2,
				["glowThickness"] = 2,
				["iconPosition"] = 9,
				["nameplateyOffset"] = 20,
				["glowLength"] = 8,
				["glowShow"] = true,
				["iconMax"] = 3,
				["iconGrowDirection"] = 5,
				["iconxOffset"] = 0,
				["lineToNameplate"] = true,
				["lineThickness"] = 2,
				["glowyOffset"] = 0,
				["iconSpacing"] = 0,
				["iconFilter"] = false,
				["nameplateFilter"] = true,
				["iconShow"] = true,
				["glowColor"] = {
					1, -- [1]
					1, -- [2]
					1, -- [3]
					1, -- [4]
				},
				["lineColor"] = {
					1, -- [1]
					0, -- [2]
					0, -- [3]
					1, -- [4]
				},
				["iconyOffset"] = 0,
				["glowParticules"] = 14,
				["nameplatexOffset"] = 0,
				["glowScale"] = 1,
				["nameplateShow"] = true,
				["glowBorder"] = false,
			},
			["cooldownTextDisabled"] = true,
			["semver"] = "2.2.0",
			["alpha"] = 1,
			["id"] = "Targeted Spells",
			["anchorFrameType"] = "SCREEN",
			["frameStrata"] = 6,
			["width"] = 20,
			["auto"] = true,
			["uid"] = "t0wiWF7XSbF",
			["inverse"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["conditions"] = {
				{
					["check"] = {
						["trigger"] = -2,
						["variable"] = "AND",
						["checks"] = {
							{
								["trigger"] = 1,
								["variable"] = "targeted",
								["value"] = 1,
							}, -- [1]
							{
								["trigger"] = 1,
								["variable"] = "spellIsDangerous",
								["value"] = 1,
							}, -- [2]
						},
					},
					["changes"] = {
						{
							["value"] = {
								["sound_type"] = "Play",
								["sound_kit_id"] = "12889",
								["sound"] = " KitID",
								["sound_channel"] = "Master",
							},
							["property"] = "sound",
						}, -- [1]
						{
							["value"] = {
								["custom"] = "-- Send event for aura \"BigIcon when targeted\"\nWeakAuras.ScanEvents(\n    \"SHOW_BIGICON\",\n    aura_env.state.icon,\n    aura_env.state.spellId,\n    aura_env.state.duration\n)",
							},
							["property"] = "customcode",
						}, -- [2]
					},
				}, -- [1]
				{
					["check"] = {
						["trigger"] = 1,
						["variable"] = "spellInList",
						["value"] = 1,
					},
					["changes"] = {
						{
							["value"] = {
								["custom"] = "-- Glow frame\nif aura_env.config.glowShow and aura_env.state.frame then\n    aura_env.Glow(aura_env.state.frame, true)\nend",
							},
							["property"] = "customcode",
						}, -- [1]
					},
				}, -- [2]
			},
			["cooldown"] = true,
			["cooldownEdge"] = false,
		},
		["WAYC: Talisman"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend\n\n\n\n\n\n\n",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 264396,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Spectral Talisman", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							264396, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Spectral Talisman",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "6fsC0pr9lit",
			["id"] = "WAYC: Talisman",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 136153,
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["Details! Boss Mods Group"] = {
			["grow"] = "DOWN",
			["controlledChildren"] = {
			},
			["borderBackdrop"] = "Blizzard Tooltip",
			["xOffset"] = 0,
			["yOffset"] = 370,
			["anchorPoint"] = "CENTER",
			["borderColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["space"] = 2,
			["actions"] = {
				["start"] = {
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["unit"] = "player",
						["spellIds"] = {
						},
						["debuffType"] = "HELPFUL",
						["names"] = {
						},
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = 1,
			},
			["columnSpace"] = 1,
			["radius"] = 200,
			["selfPoint"] = "TOP",
			["align"] = "CENTER",
			["rotation"] = 0,
			["height"] = 121.503601074219,
			["limit"] = 5,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["fullCircle"] = true,
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["authorOptions"] = {
			},
			["animate"] = true,
			["internalVersion"] = 40,
			["scale"] = 1,
			["useLimit"] = false,
			["border"] = false,
			["borderEdge"] = "Square Full White",
			["regionType"] = "dynamicgroup",
			["borderSize"] = 2,
			["sort"] = "none",
			["rowSpace"] = 1,
			["stagger"] = 0,
			["uid"] = "UDnrFO7rgGd",
			["borderOffset"] = 16,
			["arcLength"] = 360,
			["anchorFrameType"] = "SCREEN",
			["id"] = "Details! Boss Mods Group",
			["frameStrata"] = 1,
			["gridWidth"] = 5,
			["width"] = 359.096801757813,
			["borderInset"] = 0,
			["config"] = {
			},
			["constantFactor"] = "RADIUS",
			["gridType"] = "RD",
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
		},
		["Cooldowns on RaidFrames Priest"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text2Font"] = "Friz Quadrata TT",
			["keepAspectRatio"] = false,
			["wordWrap"] = "WordWrap",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["uid"] = "SiMJcuMTQ03",
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["cooldownEdge"] = true,
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["useExactSpellId"] = true,
						["event"] = "Health",
						["names"] = {
						},
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["auraspellids"] = {
							"47788", -- [1]
							"33206", -- [2]
							"47585", -- [3]
							"19236", -- [4]
						},
						["unit"] = "group",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["text1Containment"] = "INSIDE",
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["preferToUpdate"] = false,
			["cooldownTextEnabled"] = false,
			["stickyDuration"] = false,
			["parent"] = "Cooldowns on RaidFrames",
			["tocversion"] = 80300,
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["text1Point"] = "BOTTOMRIGHT",
			["glowLines"] = 8,
			["text1Enabled"] = true,
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["config"] = {
			},
			["text1Font"] = "Friz Quadrata TT",
			["width"] = 20,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayIcon"] = 841384,
			["alpha"] = 1,
			["icon"] = true,
			["semver"] = "1.0.8",
			["text2"] = "%p",
			["zoom"] = 0,
			["text1"] = "%s",
			["authorOptions"] = {
			},
			["glow"] = false,
			["justify"] = "LEFT",
			["useglowColor"] = false,
			["id"] = "Cooldowns on RaidFrames Priest",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["selfPoint"] = "CENTER",
			["automaticWidth"] = "Auto",
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["Background"] = {
			["authorOptions"] = {
			},
			["preferToUpdate"] = false,
			["yOffset"] = 166,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/M+Timer/79",
			["actions"] = {
				["start"] = {
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "status",
						["use_alwaystrue"] = true,
						["unevent"] = "auto",
						["duration"] = "1",
						["event"] = "Conditions",
						["use_unit"] = true,
						["use_absorbMode"] = true,
						["spellIds"] = {
						},
						["unit"] = "player",
						["subeventPrefix"] = "SPELL",
						["subeventSuffix"] = "_CAST_START",
						["names"] = {
						},
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["duration"] = "1",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["events"] = "RELOE_SETBGHEIGHT",
						["customIcon"] = "",
						["custom"] = "function(e, ...)\n    if ... then\n        local r = aura_env.region\n        if r then\n            local offset = tonumber(...)*19\n            r:SetHeight(68+offset)\n            r:SetOffset(0, 71+offset)\n            return true\n        end\n    end\nend",
						["custom_type"] = "event",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["selfPoint"] = "CENTER",
			["desaturate"] = false,
			["rotation"] = 0,
			["version"] = 79,
			["subRegions"] = {
				{
					["type"] = "subborder",
					["border_size"] = 1,
					["border_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["border_visible"] = true,
					["border_edge"] = "1 Pixel",
					["border_offset"] = 0,
				}, -- [1]
			},
			["height"] = 163,
			["rotate"] = false,
			["load"] = {
				["difficulty"] = {
					["single"] = "challenge",
				},
				["use_size"] = true,
				["use_never"] = false,
				["use_difficulty"] = true,
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
					},
				},
			},
			["textureWrapMode"] = "CLAMP",
			["mirror"] = true,
			["regionType"] = "texture",
			["blendMode"] = "BLEND",
			["parent"] = "M+ - Timer",
			["anchorFrameType"] = "SCREEN",
			["texture"] = "Interface\\AddOns\\WeakAuras\\Media\\Textures\\Square_FullWhite",
			["color"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				0.57000002264977, -- [4]
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["semver"] = "1.2.18",
			["tocversion"] = 80300,
			["id"] = "Background",
			["alpha"] = 1,
			["frameStrata"] = 2,
			["width"] = 292,
			["discrete_rotation"] = 0,
			["uid"] = "6HJWwNBMNgY",
			["xOffset"] = 0,
			["config"] = {
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
		},
		["KUI - Heal Flash"] = {
			["modelIsUnit"] = false,
			["borderBackdrop"] = "Blizzard Tooltip",
			["api"] = false,
			["authorOptions"] = {
				{
					["fontSize"] = "large",
					["type"] = "description",
					["text"] = "团队框架治疗特效",
					["width"] = 1,
				}, -- [1]
				{
					["fontSize"] = "medium",
					["type"] = "description",
					["text"] = "\n|cffffd100Author: |r 陽光 - 死亡之翼\n|cffffd100Version: |r1.0.1\n",
					["width"] = 1,
				}, -- [2]
				{
					["type"] = "header",
					["useName"] = true,
					["text"] = "显示效果",
					["noMerge"] = false,
					["width"] = 1,
				}, -- [3]
				{
					["type"] = "toggle",
					["key"] = "custom_texture",
					["width"] = 1,
					["name"] = "启用素材变更",
					["useDesc"] = true,
					["default"] = false,
					["desc"] = "启用素材变更",
				}, -- [4]
				{
					["width"] = 1,
					["type"] = "select",
					["default"] = 1,
					["name"] = "素材选择",
					["useDesc"] = true,
					["key"] = "chosen_texture",
					["values"] = {
						"圣光", -- [1]
						"疗伤珠", -- [2]
						"震击", -- [3]
						"自然", -- [4]
						"水花", -- [5]
						"流光", -- [6]
					},
					["desc"] = "选择合适的效果",
				}, -- [5]
				{
					["type"] = "header",
					["useName"] = true,
					["text"] = "施法成功",
					["noMerge"] = true,
					["width"] = 1,
				}, -- [6]
				{
					["type"] = "toggle",
					["key"] = "cast_success",
					["width"] = 1,
					["name"] = "启用施法成功特效",
					["useDesc"] = true,
					["default"] = true,
					["desc"] = "施法成功的目标框架上显示效果",
				}, -- [7]
				{
					["type"] = "header",
					["useName"] = true,
					["text"] = "直接治疗",
					["noMerge"] = false,
					["width"] = 1,
				}, -- [8]
				{
					["type"] = "toggle",
					["key"] = "direct_heal",
					["width"] = 1,
					["name"] = "启用直接治疗特效",
					["useDesc"] = true,
					["default"] = true,
					["desc"] = "目标受到你的直接治疗显示效果",
				}, -- [9]
				{
					["type"] = "range",
					["useDesc"] = true,
					["max"] = 100000,
					["step"] = 1000,
					["width"] = 1,
					["min"] = 0,
					["name"] = "治疗量显示下限",
					["default"] = 10000,
					["key"] = "direct_heal_min",
					["desc"] = "治疗量超过多少才显示",
				}, -- [10]
				{
					["type"] = "header",
					["useName"] = true,
					["text"] = "周期性治疗",
					["noMerge"] = false,
					["width"] = 1,
				}, -- [11]
				{
					["type"] = "toggle",
					["key"] = "periodic_heal",
					["width"] = 1,
					["name"] = "启用HoT特效",
					["useDesc"] = true,
					["default"] = false,
					["desc"] = "目标受到你的HoT每跳显示效果",
				}, -- [12]
				{
					["type"] = "range",
					["useDesc"] = true,
					["max"] = 100000,
					["step"] = 1000,
					["width"] = 1,
					["min"] = 0,
					["name"] = "每跳治疗量下限",
					["default"] = 10000,
					["key"] = "periodic_heal_min",
					["desc"] = "每跳超过治疗量才显示",
				}, -- [13]
				{
					["type"] = "header",
					["useName"] = true,
					["text"] = "黑名单",
					["noMerge"] = false,
					["width"] = 1,
				}, -- [14]
				{
					["type"] = "input",
					["useDesc"] = true,
					["width"] = 2,
					["default"] = "圣光回响,302651",
					["name"] = "法术黑名单",
					["key"] = "blacklist",
					["multiline"] = true,
					["length"] = 10,
					["desc"] = "输入法术名称或ID，对应法术不再有反应",
					["useLength"] = false,
				}, -- [15]
			},
			["preferToUpdate"] = false,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["model_x"] = 0,
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["url"] = "https://wago.io/yvUz8bIEl/4",
			["actions"] = {
				["start"] = {
					["custom"] = "local aura_env = aura_env\nlocal region = aura_env.region\nregion:SetAllPoints(aura_env.state.dest_frame)\nif aura_env.config.custom_texture then\n    region.model:SetModel(aura_env.texture_list[aura_env.config.chosen_texture])\nend\n\n\n",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "local aura_env = aura_env\nlocal LGF = LibStub(\"LibGetFrame-1.0\")\n\naura_env.texture_list = {\n    [1] = 166350,  --圣光\n    [2] = 645522,  --疗伤珠\n    [3] = 1006604,  --震击\n    [4] = 166664,  --自然\n    [5] = 1444970,  --水花\n    [6] = 1453355,  --流光\n}\n\nfunction aura_env.GetFrame(guid)\n    for unit in WA_IterateGroupMembers() do\n        if UnitGUID(unit) == guid then return LGF.GetFrame(unit) end\n    end\n    return nil\nend\n\nfunction aura_env.Throttle(amount,overhealing,limit)\n    local amount, overhealing = amount or 0, overhealing or 0\n    if amount > limit then return true else return false end\nend\n\nfunction aura_env:InBlackList(spellId,spellName)\n    local spellId = tostring(spellId)\n    local spellName = tostring(spellName)\n    return string.find(self.config.blacklist,spellId) or string.find(self.config.blacklist,spellName)\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "stateupdate",
						["debuffType"] = "HELPFUL",
						["duration"] = "1",
						["event"] = "Health",
						["names"] = {
						},
						["subeventPrefix"] = "SPELL",
						["events"] = "CLEU:SPELL_HEAL:SPELL_PERIODIC_HEAL:SPELL_CAST_SUCCESS",
						["spellIds"] = {
						},
						["subeventSuffix"] = "_CAST_START",
						["check"] = "event",
						["custom"] = "function ( allstates, event, ... )\n    local aura_env = aura_env\n    local timestamp,sub_event,hideCaster,sourceGUID,sourceName,sourceFlags,sourceRaidFlags,destGUID,destName,destFlags,destRaidFlags,spellId,spellName,spellSchool = ...\n    local amount,overhealing,absorbed,critical\n    if aura_env:InBlackList(spellId,spellName) then return false end\n    if sourceGUID ~= UnitGUID(\"player\") then return false end\n    if sub_event == \"SPELL_HEAL\" then\n        if not aura_env.config.direct_heal then return false end\n        local limit = aura_env.config.direct_heal_min\n        amount,overhealing,absorbed,critical = select(15,...)\n        if not aura_env.Throttle(amount,overhealing,limit) then return false end\n    elseif sub_event == \"SPELL_PERIODIC_HEAL\" then\n        if not aura_env.config.periodic_heal then return false end\n        local limit = aura_env.config.periodic_heal_min\n        amount,overhealing,absorbed,critical = select(15,...)\n        if not aura_env.Throttle(amount,overhealing,limit) then return false end\n    elseif sub_event == \"SPELL_CAST_SUCCESS\" then\n        if not aura_env.config.cast_success then return false end\n    end\n    local dest_frame = aura_env.GetFrame(destGUID)\n    if not dest_frame then return false end\n    local state = {\n        show = true,\n        changed = true,\n        progressType = \"timed\",\n        duration = 1,\n        expirationTime = GetTime() + 0.3,\n        autoHide = true,\n        dest_frame = dest_frame,\n    }\n    allstates[#allstates+1] = state\n    return true\nend",
						["unit"] = "player",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["model_fileId"] = "166350",
			["selfPoint"] = "CENTER",
			["model_st_ty"] = -203,
			["uid"] = "GKgnbGMlF8O",
			["rotation"] = 0,
			["model_st_ry"] = 171,
			["version"] = 4,
			["subRegions"] = {
			},
			["height"] = 100,
			["xOffset"] = 0,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["raid"] = true,
					},
				},
				["class_and_spec"] = {
					["multi"] = {
						[270] = true,
						[264] = true,
						[105] = true,
						[65] = true,
						[257] = true,
						[256] = true,
					},
				},
				["use_never"] = false,
				["use_class_and_spec"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["model_st_tx"] = -652,
			["sequence"] = 1,
			["advance"] = false,
			["scale"] = 1,
			["animation"] = {
				["start"] = {
					["easeStrength"] = 3,
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["colorR"] = 1,
					["scalex"] = 1,
					["alphaType"] = "custom",
					["colorB"] = 1,
					["colorG"] = 1,
					["alphaFunc"] = "",
					["use_alpha"] = false,
					["type"] = "none",
					["easeType"] = "none",
					["preset"] = "orbit",
					["alpha"] = 1,
					["y"] = 0,
					["x"] = 0,
					["duration_type"] = "seconds",
					["scaley"] = 1,
					["rotate"] = 0,
					["easeStrength"] = 3,
					["duration"] = "10",
					["colorA"] = 1,
				},
				["finish"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["preset"] = "fade",
				},
			},
			["border"] = false,
			["anchorFrameFrame"] = "Sakura_Minimap_Zone_Region",
			["regionType"] = "model",
			["borderSize"] = 16,
			["model_st_us"] = 5,
			["borderInset"] = 11,
			["model_st_rz"] = 217,
			["width"] = 100,
			["model_z"] = 0,
			["semver"] = "1.0.3",
			["tocversion"] = 80300,
			["id"] = "KUI - Heal Flash",
			["model_y"] = 0,
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["model_st_rx"] = 186,
			["config"] = {
				["custom_texture"] = true,
				["direct_heal"] = true,
				["direct_heal_min"] = 10000,
				["cast_success"] = true,
				["blacklist"] = "圣光回响,302651",
				["periodic_heal_min"] = 10000,
				["periodic_heal"] = false,
				["chosen_texture"] = 1,
			},
			["borderOffset"] = 5,
			["borderEdge"] = "None",
			["conditions"] = {
			},
			["model_st_tz"] = -416,
			["model_path"] = "spells/protectionfromnature_chest.m2",
		},
		["Sound when targeted by a boss"] = {
			["text2Point"] = "CENTER",
			["text1FontSize"] = 12,
			["authorOptions"] = {
			},
			["displayText"] = " ",
			["yOffset"] = -40,
			["anchorPoint"] = "TOP",
			["url"] = "https://wago.io/BFADungeonTargetedSpells/65",
			["icon"] = true,
			["text1Enabled"] = true,
			["keepAspectRatio"] = false,
			["wordWrap"] = "WordWrap",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
						["HEALER"] = true,
						["DAMAGER"] = true,
					},
				},
				["size"] = {
					["multi"] = {
						["scenario"] = true,
						["ten"] = true,
						["twentyfive"] = true,
						["fortyman"] = true,
						["flexible"] = true,
						["pvp"] = true,
						["arena"] = true,
						["party"] = true,
						["none"] = true,
					},
				},
				["use_size"] = false,
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["use_role"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["challenge"] = true,
						["heroic"] = true,
						["lfr"] = true,
						["timewalking"] = true,
						["none"] = true,
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["use_encounter"] = true,
				["race"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["shadowXOffset"] = 1,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "text",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["tocversion"] = 80300,
			["text2Enabled"] = false,
			["config"] = {
			},
			["displayIcon"] = 134427,
			["outline"] = "OUTLINE",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["customText"] = "\n-- Do not remove this comment, it is part of this trigger: Sound when a boss target you",
			["shadowYOffset"] = -1,
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["useglowColor"] = false,
			["internalVersion"] = 40,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeType"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["preset"] = "spiral",
				},
				["main"] = {
					["easeStrength"] = 3,
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["easeStrength"] = 3,
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["version"] = 65,
			["height"] = 102.63238525391,
			["text2Font"] = "Friz Quadrata TT",
			["preferToUpdate"] = false,
			["parent"] = "Dungeon - Targeted Spells",
			["text1Containment"] = "INSIDE",
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["cooldownEdge"] = false,
			["text1Font"] = "Friz Quadrata TT",
			["glow"] = false,
			["anchorFrameFrame"] = "UIParent",
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["uid"] = "VCMkmT9LnOU",
			["xOffset"] = 0,
			["width"] = 100.44454956055,
			["triggers"] = {
				{
					["trigger"] = {
						["use_status"] = true,
						["duration"] = "0.1",
						["genericShowOn"] = "showOnActive",
						["names"] = {
						},
						["status"] = 2,
						["debuffType"] = "HELPFUL",
						["type"] = "custom",
						["unit"] = "player",
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "custom",
						["unevent"] = "auto",
						["threatUnit"] = "target",
						["event"] = "Threat Situation",
						["use_threatUnit"] = true,
						["spellIds"] = {
						},
						["custom"] = "function(states, event, unit)\n    if unit == \"boss1\"\n    or unit == \"boss2\"\n    or unit == \"boss3\"\n    or unit == \"boss4\"\n    or unit == \"boss5\"\n    then\n        if UnitIsUnit(\"player\", unit..\"target\") then\n            states[\"\"] = {\n                show = true,\n                changed = true,\n            }\n        else\n            local state = states[\"\"]\n            if state then\n                state.show = false\n                state.changed = true \n            end\n        end\n    end\n    return true\nend",
						["events"] = "UNIT_TARGET:boss",
						["check"] = "event",
						["subeventPrefix"] = "SPELL",
						["use_unit"] = true,
						["custom_type"] = "stateupdate",
					},
					["untrigger"] = {
						["threatUnit"] = "target",
						["custom"] = "function(event, unit)\n    if aura_env.unit and aura_env.unit == unit then\n        return not UnitIsUnit(\"player\", unit..\"target\")\n    end    \nend",
					},
				}, -- [1]
				["activeTriggerMode"] = 1,
			},
			["fixedWidth"] = 200,
			["anchorFrameParent"] = false,
			["text1"] = " ",
			["text1Point"] = "BOTTOMRIGHT",
			["justify"] = "LEFT",
			["semver"] = "3.0.3",
			["zoom"] = 0,
			["id"] = "Sound when targeted by a boss",
			["text2"] = "%p",
			["frameStrata"] = 1,
			["anchorFrameType"] = "SELECTFRAME",
			["actions"] = {
				["start"] = {
					["message"] = "Saw Dingo is forever.",
					["do_sound"] = true,
					["message_type"] = "SAY",
					["sound"] = "Interface\\AddOns\\WeakAuras\\Media\\Sounds\\RobotBlip.ogg",
					["do_message"] = false,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "\n-- Do not remove this comment, it is part of this trigger: Sound when a boss target you",
				},
			},
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["inverse"] = false,
			["selfPoint"] = "TOP",
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["alpha"] = 1,
		},
		["Cooldowns on RaidFrames Warlock"] = {
			["text2Point"] = "CENTER",
			["iconSource"] = -1,
			["text1FontSize"] = 12,
			["xOffset"] = 0,
			["displayText"] = " ",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["url"] = "https://wago.io/CooldownsOnRaidframe/29",
			["actions"] = {
				["start"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
				["init"] = {
					["custom"] = "\n\n",
					["do_custom"] = false,
				},
				["finish"] = {
					["custom"] = "",
					["do_custom"] = false,
				},
			},
			["text1Enabled"] = true,
			["keepAspectRatio"] = false,
			["wordWrap"] = "WordWrap",
			["desaturate"] = false,
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["solo"] = true,
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_encounterid"] = false,
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["encounterid"] = "2271",
				["talent2"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["glowType"] = "buttonOverlay",
			["glowThickness"] = 4,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "icon",
			["text2FontSize"] = 24,
			["cooldownTextDisabled"] = true,
			["auto"] = true,
			["glowScale"] = 1,
			["text2Enabled"] = false,
			["glowYOffset"] = 0,
			["config"] = {
			},
			["fixedWidth"] = 200,
			["outline"] = "OUTLINE",
			["glowLength"] = 4,
			["customText"] = "function()\n    if aura_env.state and aura_env.state.unit then\n        aura_env.UpdateClone(aura_env.state.unit, aura_env.region)\n    end\nend",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "event",
			["automaticWidth"] = "Auto",
			["triggers"] = {
				{
					["trigger"] = {
						["showClones"] = true,
						["type"] = "aura2",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["spellIds"] = {
						},
						["useExactSpellId"] = true,
						["auraspellids"] = {
							"104773", -- [1]
							"108416", -- [2]
							"132413", -- [3]
						},
						["unit"] = "group",
						["names"] = {
						},
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t) return t[3] end",
				["activeTriggerMode"] = 1,
			},
			["preferToUpdate"] = false,
			["internalVersion"] = 40,
			["glowXOffset"] = 0,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["useglowColor"] = false,
			["stickyDuration"] = false,
			["cooldownEdge"] = true,
			["parent"] = "Cooldowns on RaidFrames",
			["version"] = 29,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "%p",
					["text_text_format_p_gcd_cast"] = false,
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["text_text_format_p_time_dynamic"] = false,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["text_text_format_p_big_number_format"] = "AbbreviateNumbers",
					["text_text_format_p_gcd_channel"] = false,
					["text_text_format_p_decimal_precision"] = 0,
					["type"] = "subtext",
					["text_text_format_p_gcd_gcd"] = true,
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "FORCED SQUARE",
					["text_text_format_p_format"] = "Number",
					["text_shadowYOffset"] = 0,
					["text_fontType"] = "OUTLINE",
					["text_wordWrap"] = "WordWrap",
					["text_visible"] = true,
					["text_anchorPoint"] = "CENTER",
					["text_text_format_p_gcd_hide_zero"] = false,
					["text_text_format_p_time_precision"] = 1,
					["text_fontSize"] = 14,
					["anchorXOffset"] = 0,
					["text_text_format_p_round_type"] = "floor",
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["glow"] = true,
					["useGlowColor"] = false,
					["glowType"] = "Pixel",
					["glowLength"] = 6,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowScale"] = 1,
					["glowThickness"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 20,
			["text1Containment"] = "INSIDE",
			["glowLines"] = 8,
			["text2Font"] = "Friz Quadrata TT",
			["glowFrequency"] = 0.25,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["text1Font"] = "Friz Quadrata TT",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["width"] = 20,
			["uid"] = "KUvM5n8lTGo",
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1Point"] = "BOTTOMRIGHT",
			["displayIcon"] = 841384,
			["cooldownTextEnabled"] = false,
			["justify"] = "LEFT",
			["icon"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["text1"] = "%s",
			["text2"] = "%p",
			["zoom"] = 0,
			["semver"] = "1.0.8",
			["glow"] = false,
			["id"] = "Cooldowns on RaidFrames Warlock",
			["tocversion"] = 80300,
			["frameStrata"] = 5,
			["anchorFrameType"] = "SCREEN",
			["selfPoint"] = "CENTER",
			["alpha"] = 1,
			["inverse"] = false,
			["glowParticules"] = 4,
			["conditions"] = {
			},
			["cooldown"] = true,
			["glowBorder"] = false,
		},
		["Sound when a boss target you 2"] = {
			["text2Point"] = "CENTER",
			["text1FontSize"] = 12,
			["authorOptions"] = {
			},
			["displayText"] = " ",
			["yOffset"] = -40,
			["anchorPoint"] = "TOP",
			["url"] = "https://wago.io/BFADungeonTargetedSpells/45",
			["icon"] = true,
			["text2Font"] = "Friz Quadrata TT",
			["keepAspectRatio"] = false,
			["selfPoint"] = "TOP",
			["text1Containment"] = "INSIDE",
			["glowColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["font"] = "Friz Quadrata TT",
			["text2FontFlags"] = "OUTLINE",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_encounter"] = true,
				["class"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
						["ten"] = true,
						["twentyfive"] = true,
						["fortyman"] = true,
						["flexible"] = true,
						["none"] = true,
						["party"] = true,
						["arena"] = true,
						["twenty"] = true,
						["pvp"] = true,
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["use_role"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
						["HEALER"] = true,
						["DAMAGER"] = true,
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["use_size"] = false,
			},
			["glowType"] = "buttonOverlay",
			["shadowXOffset"] = 1,
			["text1FontFlags"] = "OUTLINE",
			["regionType"] = "text",
			["text2FontSize"] = 24,
			["zoom"] = 0,
			["auto"] = false,
			["text2Enabled"] = false,
			["config"] = {
			},
			["displayIcon"] = 134427,
			["outline"] = "OUTLINE",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["shadowYOffset"] = -1,
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["useglowColor"] = false,
			["internalVersion"] = 40,
			["animation"] = {
				["start"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["preset"] = "spiral",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["version"] = 45,
			["height"] = 102.63238525391,
			["parent"] = "BFA Dungeon - Targeted Spells 2",
			["cooldownTextDisabled"] = false,
			["fontSize"] = 12,
			["text2Containment"] = "INSIDE",
			["text1Font"] = "Friz Quadrata TT",
			["text1Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["wordWrap"] = "WordWrap",
			["glow"] = false,
			["anchorFrameFrame"] = "UIParent",
			["uid"] = "bwQamUo)vr6",
			["cooldownEdge"] = false,
			["triggers"] = {
				{
					["trigger"] = {
						["use_status"] = true,
						["duration"] = "0.1",
						["genericShowOn"] = "showOnActive",
						["unit"] = "player",
						["status"] = 2,
						["debuffType"] = "HELPFUL",
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["use_unit"] = true,
						["custom_hide"] = "custom",
						["threatUnit"] = "target",
						["unevent"] = "auto",
						["use_threatUnit"] = true,
						["custom_type"] = "event",
						["custom"] = "function(event, unit)\n    if unit == \"boss1\"\n    or unit == \"boss2\"\n    or unit == \"boss3\"\n    or unit == \"boss4\"\n    or unit == \"boss5\"\n    then\n        aura_env.unit = unit\n        return UnitIsUnit(\"player\", unit..\"target\")\n    end\n    return false\nend",
						["events"] = "UNIT_TARGET",
						["spellIds"] = {
						},
						["subeventPrefix"] = "SPELL",
						["event"] = "Threat Situation",
						["names"] = {
						},
					},
					["untrigger"] = {
						["threatUnit"] = "target",
						["custom"] = "function(event, unit)\n    if aura_env.unit and aura_env.unit == unit then\n        return not UnitIsUnit(\"player\", unit..\"target\")\n    end    \nend",
					},
				}, -- [1]
				["activeTriggerMode"] = 1,
			},
			["actions"] = {
				["start"] = {
					["message"] = "Saw Dingo is forever.",
					["do_sound"] = true,
					["message_type"] = "SAY",
					["sound"] = "Interface\\AddOns\\WeakAuras\\Media\\Sounds\\RobotBlip.ogg",
					["do_message"] = false,
				},
				["init"] = {
				},
				["finish"] = {
				},
			},
			["width"] = 100.44454956055,
			["text1Enabled"] = true,
			["text1"] = " ",
			["fixedWidth"] = 200,
			["justify"] = "LEFT",
			["semver"] = "2.2.0",
			["text1Point"] = "BOTTOMRIGHT",
			["id"] = "Sound when a boss target you 2",
			["alpha"] = 1,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SELECTFRAME",
			["text2Color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["xOffset"] = 0,
			["inverse"] = false,
			["desaturate"] = false,
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["text2"] = "%p",
		},
		["KING: Induce Regen"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 270901,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Induce Regeneration",
						["names"] = {
							"Induce Regeneration", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							270901, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["unevent"] = "auto",
						["custom_type"] = "event",
						["genericShowOn"] = "showOnActive",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = ")XtHGT1uXq9",
			["id"] = "KING: Induce Regen",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 136077,
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["KUI - Heal Flash 2"] = {
			["modelIsUnit"] = false,
			["borderBackdrop"] = "Blizzard Tooltip",
			["api"] = false,
			["xOffset"] = 0,
			["preferToUpdate"] = false,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["model_x"] = 0,
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["url"] = "https://wago.io/yvUz8bIEl/4",
			["actions"] = {
				["start"] = {
					["custom"] = "local aura_env = aura_env\nlocal region = aura_env.region\nregion:SetAllPoints(aura_env.state.dest_frame)\nif aura_env.config.custom_texture then\n    region.model:SetModel(aura_env.texture_list[aura_env.config.chosen_texture])\nend\n\n\n",
					["do_custom"] = true,
				},
				["init"] = {
					["custom"] = "local aura_env = aura_env\nlocal LGF = LibStub(\"LibGetFrame-1.0\")\n\naura_env.texture_list = {\n    [1] = 166350,  --圣光\n    [2] = 645522,  --疗伤珠\n    [3] = 1006604,  --震击\n    [4] = 166664,  --自然\n    [5] = 1444970,  --水花\n    [6] = 1453355,  --流光\n}\n\nfunction aura_env.GetFrame(guid)\n    for unit in WA_IterateGroupMembers() do\n        if UnitGUID(unit) == guid then return LGF.GetFrame(unit) end\n    end\n    return nil\nend\n\nfunction aura_env.Throttle(amount,overhealing,limit)\n    local amount, overhealing = amount or 0, overhealing or 0\n    if amount > limit then return true else return false end\nend\n\nfunction aura_env:InBlackList(spellId,spellName)\n    local spellId = tostring(spellId)\n    local spellName = tostring(spellName)\n    return string.find(self.config.blacklist,spellId) or string.find(self.config.blacklist,spellName)\nend",
					["do_custom"] = true,
				},
				["finish"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "stateupdate",
						["custom_hide"] = "timed",
						["duration"] = "1",
						["event"] = "Health",
						["names"] = {
						},
						["unit"] = "player",
						["custom"] = "function ( allstates, event, ... )\n    local aura_env = aura_env\n    local timestamp,sub_event,hideCaster,sourceGUID,sourceName,sourceFlags,sourceRaidFlags,destGUID,destName,destFlags,destRaidFlags,spellId,spellName,spellSchool = ...\n    local amount,overhealing,absorbed,critical\n    if aura_env:InBlackList(spellId,spellName) then return false end\n    if sourceGUID ~= UnitGUID(\"player\") then return false end\n    if sub_event == \"SPELL_HEAL\" then\n        if not aura_env.config.direct_heal then return false end\n        local limit = aura_env.config.direct_heal_min\n        amount,overhealing,absorbed,critical = select(15,...)\n        if not aura_env.Throttle(amount,overhealing,limit) then return false end\n    elseif sub_event == \"SPELL_PERIODIC_HEAL\" then\n        if not aura_env.config.periodic_heal then return false end\n        local limit = aura_env.config.periodic_heal_min\n        amount,overhealing,absorbed,critical = select(15,...)\n        if not aura_env.Throttle(amount,overhealing,limit) then return false end\n    elseif sub_event == \"SPELL_CAST_SUCCESS\" then\n        if not aura_env.config.cast_success then return false end\n    end\n    local dest_frame = aura_env.GetFrame(destGUID)\n    if not dest_frame then return false end\n    local state = {\n        show = true,\n        changed = true,\n        progressType = \"timed\",\n        duration = 1,\n        expirationTime = GetTime() + 0.3,\n        autoHide = true,\n        dest_frame = dest_frame,\n    }\n    allstates[#allstates+1] = state\n    return true\nend",
						["events"] = "CLEU:SPELL_HEAL:SPELL_PERIODIC_HEAL:SPELL_CAST_SUCCESS",
						["subeventSuffix"] = "_CAST_START",
						["check"] = "event",
						["spellIds"] = {
						},
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["model_fileId"] = "166350",
			["selfPoint"] = "CENTER",
			["model_st_ty"] = -203,
			["config"] = {
				["custom_texture"] = true,
				["direct_heal"] = true,
				["direct_heal_min"] = 10000,
				["cast_success"] = true,
				["chosen_texture"] = 1,
				["periodic_heal"] = false,
				["periodic_heal_min"] = 10000,
				["blacklist"] = "圣光回响,302651",
			},
			["rotation"] = 0,
			["borderOffset"] = 5,
			["version"] = 4,
			["subRegions"] = {
			},
			["height"] = 100,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["easeStrength"] = 3,
					["duration_type"] = "seconds",
					["easeType"] = "none",
				},
				["main"] = {
					["colorR"] = 1,
					["scalex"] = 1,
					["alphaType"] = "custom",
					["colorB"] = 1,
					["colorG"] = 1,
					["alphaFunc"] = "",
					["use_alpha"] = false,
					["type"] = "none",
					["easeType"] = "none",
					["scaley"] = 1,
					["alpha"] = 1,
					["y"] = 0,
					["x"] = 0,
					["colorA"] = 1,
					["duration"] = "10",
					["easeStrength"] = 3,
					["rotate"] = 0,
					["preset"] = "orbit",
					["duration_type"] = "seconds",
				},
				["finish"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["easeStrength"] = 3,
					["preset"] = "fade",
					["duration_type"] = "seconds",
				},
			},
			["load"] = {
				["ingroup"] = {
					["multi"] = {
						["group"] = true,
						["raid"] = true,
					},
				},
				["use_never"] = false,
				["class_and_spec"] = {
					["multi"] = {
						[270] = true,
						[264] = true,
						[105] = true,
						[65] = true,
						[256] = true,
						[257] = true,
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_class_and_spec"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["model_path"] = "spells/protectionfromnature_chest.m2",
			["sequence"] = 1,
			["model_st_tz"] = -416,
			["scale"] = 1,
			["advance"] = false,
			["border"] = false,
			["anchorFrameFrame"] = "Sakura_Minimap_Zone_Region",
			["regionType"] = "model",
			["borderSize"] = 16,
			["model_st_us"] = 5,
			["borderEdge"] = "None",
			["model_st_rz"] = 217,
			["model_st_rx"] = 186,
			["anchorFrameType"] = "SCREEN",
			["model_st_ry"] = 171,
			["semver"] = "1.0.3",
			["tocversion"] = 80300,
			["id"] = "KUI - Heal Flash 2",
			["model_y"] = 0,
			["frameStrata"] = 5,
			["width"] = 100,
			["model_z"] = 0,
			["uid"] = "cCPYKx3Sg7L",
			["borderInset"] = 11,
			["authorOptions"] = {
				{
					["type"] = "description",
					["fontSize"] = "large",
					["text"] = "团队框架治疗特效",
					["width"] = 1,
				}, -- [1]
				{
					["type"] = "description",
					["fontSize"] = "medium",
					["text"] = "\n|cffffd100Author: |r 陽光 - 死亡之翼\n|cffffd100Version: |r1.0.1\n",
					["width"] = 1,
				}, -- [2]
				{
					["useName"] = true,
					["type"] = "header",
					["text"] = "显示效果",
					["noMerge"] = false,
					["width"] = 1,
				}, -- [3]
				{
					["type"] = "toggle",
					["key"] = "custom_texture",
					["desc"] = "启用素材变更",
					["default"] = false,
					["useDesc"] = true,
					["name"] = "启用素材变更",
					["width"] = 1,
				}, -- [4]
				{
					["desc"] = "选择合适的效果",
					["type"] = "select",
					["default"] = 1,
					["values"] = {
						"圣光", -- [1]
						"疗伤珠", -- [2]
						"震击", -- [3]
						"自然", -- [4]
						"水花", -- [5]
						"流光", -- [6]
					},
					["key"] = "chosen_texture",
					["useDesc"] = true,
					["name"] = "素材选择",
					["width"] = 1,
				}, -- [5]
				{
					["useName"] = true,
					["type"] = "header",
					["text"] = "施法成功",
					["noMerge"] = true,
					["width"] = 1,
				}, -- [6]
				{
					["type"] = "toggle",
					["key"] = "cast_success",
					["desc"] = "施法成功的目标框架上显示效果",
					["default"] = true,
					["useDesc"] = true,
					["name"] = "启用施法成功特效",
					["width"] = 1,
				}, -- [7]
				{
					["useName"] = true,
					["type"] = "header",
					["text"] = "直接治疗",
					["noMerge"] = false,
					["width"] = 1,
				}, -- [8]
				{
					["type"] = "toggle",
					["key"] = "direct_heal",
					["desc"] = "目标受到你的直接治疗显示效果",
					["default"] = true,
					["useDesc"] = true,
					["name"] = "启用直接治疗特效",
					["width"] = 1,
				}, -- [9]
				{
					["type"] = "range",
					["useDesc"] = true,
					["max"] = 100000,
					["step"] = 1000,
					["width"] = 1,
					["min"] = 0,
					["name"] = "治疗量显示下限",
					["desc"] = "治疗量超过多少才显示",
					["key"] = "direct_heal_min",
					["default"] = 10000,
				}, -- [10]
				{
					["useName"] = true,
					["type"] = "header",
					["text"] = "周期性治疗",
					["noMerge"] = false,
					["width"] = 1,
				}, -- [11]
				{
					["type"] = "toggle",
					["key"] = "periodic_heal",
					["desc"] = "目标受到你的HoT每跳显示效果",
					["default"] = false,
					["useDesc"] = true,
					["name"] = "启用HoT特效",
					["width"] = 1,
				}, -- [12]
				{
					["type"] = "range",
					["useDesc"] = true,
					["max"] = 100000,
					["step"] = 1000,
					["width"] = 1,
					["min"] = 0,
					["name"] = "每跳治疗量下限",
					["desc"] = "每跳超过治疗量才显示",
					["key"] = "periodic_heal_min",
					["default"] = 10000,
				}, -- [13]
				{
					["useName"] = true,
					["type"] = "header",
					["text"] = "黑名单",
					["noMerge"] = false,
					["width"] = 1,
				}, -- [14]
				{
					["type"] = "input",
					["useDesc"] = true,
					["width"] = 2,
					["key"] = "blacklist",
					["default"] = "圣光回响,302651",
					["desc"] = "输入法术名称或ID，对应法术不再有反应",
					["name"] = "法术黑名单",
					["length"] = 10,
					["multiline"] = true,
					["useLength"] = false,
				}, -- [15]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["model_st_tx"] = -652,
		},
		["KureqShitItems"] = {
			["outline"] = "OUTLINE",
			["authorOptions"] = {
			},
			["displayText"] = "%n",
			["customText"] = "function()\n    \n    local slots = {\n        \"HEADSLOT\",\n        \"NECKSLOT\",\n        \"SHOULDERSLOT\",\n        \"BACKSLOT\",\n        \"CHESTSLOT\",\n        \"WRISTSLOT\",\n        \"HANDSSLOT\",\n        \"WAISTSLOT\",\n        \"LEGSSLOT\",\n        \"FEETSLOT\",\n        \"FINGER0SLOT\",\n        \"FINGER1SLOT\",\n        \"TRINKET0SLOT\",\n        \"TRINKET1SLOT\",\n        \"MAINHANDSLOT\",\n        \"SECONDARYHANDSLOT\"\n    }\n    \n    local shittyitems = {}\n    \n    for k, v in pairs(slots) do\n        local slotID = GetInventorySlotInfo(v)\n        local itemLink = GetInventoryItemLink(\"player\", slotID)\n        local ilvl = GetDetailedItemLevelInfo(itemLink)\n        \n        local shit = \"[ \"..ilvl..\" ] \"..v\n        table.insert(shittyitems, shit)\n        \n    end\n    \n    table.sort(shittyitems)\n    \n    function printable (tbl)\n        local overall, equipped = GetAverageItemLevel()\n        local toprint = \"iLvl: \"..equipped..\" | \"..overall..\"\\r\\n\"\n        local i = 0\n        for k, v in pairs(tbl) do\n            if i > 7 then\n                break\n            end\n            \n            toprint = toprint .. v .. \"\\r\\n\"\n            i = i+1\n        end\n        --toprint = toprint..\"|r\"\n        return toprint\n    end\n    \n    return printable(shittyitems);\nend",
			["shadowYOffset"] = -1,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "event",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["use_absorbMode"] = true,
						["unit"] = "player",
						["custom_hide"] = "custom",
						["use_unit"] = true,
						["type"] = "custom",
						["buffShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["debuffType"] = "HELPFUL",
						["subeventPrefix"] = "SPELL",
						["event"] = "Chat Message",
						["unevent"] = "auto",
						["spellIds"] = {
						},
						["customName"] = "function()\n    \n    local slots = {\n        \"HEADSLOT\",\n        \"SHOULDERSLOT\",\n        \"BACKSLOT\",\n        \"CHESTSLOT\",\n        \"WRISTSLOT\",\n        \"HANDSSLOT\",\n        \"WAISTSLOT\",\n        \"LEGSSLOT\",\n        \"FEETSLOT\",\n        \"FINGER0SLOT\",\n        \"FINGER1SLOT\",\n        \"TRINKET0SLOT\",\n        \"TRINKET1SLOT\",\n        \"MAINHANDSLOT\",\n        \"SECONDARYHANDSLOT\"\n    }\n    \n    local shittyitems = {}\n    \n    for k, v in pairs(slots) do\n        local slotID = GetInventorySlotInfo(v)\n        local itemLink = GetInventoryItemLink(\"player\", slotID)\n        if(itemLink ~= nill) then\n            local ilvl = GetDetailedItemLevelInfo(itemLink)\n            \n            if(ilvl == nill or ilvl == '') then\n            else\n                local shit = \"[ \"..ilvl..\" ] \"..v\n                table.insert(shittyitems, shit)\n            end\n        end\n    end\n    \n    table.sort(shittyitems)\n    \n    function printable (tbl)\n        local overall, equipped = GetAverageItemLevel()\n        local toprint = \"iLvl: \"..equipped..\" | \"..overall..\"\\r\\n\"\n        local i = 0\n        for k, v in pairs(tbl) do\n            if i > 7 then\n                break\n            end\n            \n            toprint = toprint .. v .. \"\\r\\n\"\n            i = i+1\n        end\n        --toprint = toprint..\"|r\"\n        return toprint\n    end\n    \n    return printable(shittyitems);\nend",
						["custom"] = "function()\n    return true\nend",
						["events"] = "PLAYER_ENTERING_WORLD, PLAYER_EQUIPMENT_CHANGED",
						["check"] = "event",
						["subeventSuffix"] = "_CAST_START",
						["names"] = {
						},
						["duration"] = "2",
					},
					["untrigger"] = {
						["custom"] = "function()\n    return false\nend\n\n\n\n\n\n",
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["font"] = "FORCED SQUARE",
			["load"] = {
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["size"] = {
					["multi"] = {
					},
				},
			},
			["fontSize"] = 13,
			["displayText_format_n_format"] = "none",
			["shadowXOffset"] = 1,
			["regionType"] = "text",
			["xOffset"] = -954.999306201935,
			["parent"] = "A Kureq UI Customizations",
			["justify"] = "LEFT",
			["yOffset"] = -315.999496459961,
			["id"] = "KureqShitItems",
			["conditions"] = {
			},
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["config"] = {
			},
			["uid"] = "6coI0xooHds",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["wordWrap"] = "WordWrap",
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["fixedWidth"] = 200,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["selfPoint"] = "BOTTOMLEFT",
		},
		["MOLO: Overcharge"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 262540,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Overcharge",
						["names"] = {
							"Overcharge", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							262540, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["unevent"] = "auto",
						["custom_type"] = "event",
						["genericShowOn"] = "showOnActive",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "D4M739Rb772",
			["id"] = "MOLO: Overcharge",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 136111,
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["New 3"] = {
			["textureWrapMode"] = "CLAMP",
			["rotate"] = true,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["xOffset"] = -212.5,
			["width"] = 225,
			["mirror"] = true,
			["yOffset"] = 121.5,
			["regionType"] = "texture",
			["parent"] = "trumpet",
			["blendMode"] = "BLEND",
			["authorOptions"] = {
			},
			["anchorPoint"] = "CENTER",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["texture"] = "interface\\wizard\\trump.tga",
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["unit"] = "player",
						["spellIds"] = {
						},
						["buffShowOn"] = "showOnActive",
						["subeventPrefix"] = "SPELL",
						["names"] = {
							"Avenging Wrath", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["custom_hide"] = "timed",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["rotation"] = 0,
			["selfPoint"] = "CENTER",
			["id"] = "New 3",
			["animation"] = {
				["start"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["preset"] = "shrink",
				},
				["main"] = {
					["type"] = "preset",
					["easeType"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["preset"] = "wobble",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["frameStrata"] = 1,
			["desaturate"] = false,
			["discrete_rotation"] = 0,
			["config"] = {
			},
			["uid"] = "VX33at4JuZA",
			["alpha"] = 1,
			["height"] = 225,
			["conditions"] = {
			},
			["load"] = {
				["talent2"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["single"] = "PALADIN",
					["multi"] = {
					},
				},
				["use_class"] = true,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["anchorFrameType"] = "SCREEN",
		},
		["SGBR: Watertight Shell"] = {
			["iconSource"] = 0,
			["authorOptions"] = {
			},
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 256957,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Watertight Shell",
						["names"] = {
							"Watertight Shell", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							256957, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["unevent"] = "auto",
						["custom_type"] = "event",
						["genericShowOn"] = "showOnActive",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["desaturate"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
				{
					["glowFrequency"] = 0.25,
					["type"] = "subglow",
					["glowXOffset"] = 0,
					["glowType"] = "buttonOverlay",
					["glowLength"] = 10,
					["glowYOffset"] = 0,
					["glowColor"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["useGlowColor"] = false,
					["glow"] = true,
					["glowThickness"] = 1,
					["glowScale"] = 1,
					["glowLines"] = 8,
					["glowBorder"] = false,
				}, -- [2]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["selfPoint"] = "CENTER",
			["conditions"] = {
			},
			["regionType"] = "icon",
			["parent"] = "M+ - Purgeable Buffs",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["xOffset"] = 0,
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["config"] = {
			},
			["id"] = "SGBR: Watertight Shell",
			["frameStrata"] = 1,
			["alpha"] = 1,
			["width"] = 35,
			["anchorFrameType"] = "SCREEN",
			["uid"] = "CkXEADg5lhn",
			["inverse"] = false,
			["stickyDuration"] = false,
			["displayIcon"] = 132315,
			["cooldown"] = true,
			["icon"] = true,
		},
		["STRM: Detect Thoughts"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 268375,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Detect Thoughts",
						["names"] = {
							"Detect Thoughts", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							268375, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "TuZ41CGvJaH",
			["id"] = "STRM: Detect Thoughts",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = "135994",
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["FRHD: Blind Rage (E)"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 257741,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Blind Rage", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							257741, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Blind Rage",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["selfPoint"] = "CENTER",
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text"] = "Enrage",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Accidental Presidency",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMLEFT",
					["text_fontSize"] = 13,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["use_class"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
						["HUNTER"] = true,
						["SHAMAN"] = true,
						["DRUID"] = true,
						["PALADIN"] = true,
						["PRIEST"] = true,
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["regionType"] = "icon",
			["icon"] = true,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "U4k1E8yx0P3",
			["id"] = "FRHD: Blind Rage (E)",
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["width"] = 35,
			["frameStrata"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 132277,
			["cooldown"] = true,
			["authorOptions"] = {
			},
		},
		["Versatility"] = {
			["outline"] = "OUTLINE",
			["modelIsUnit"] = false,
			["borderBackdrop"] = "Blizzard Tooltip",
			["color"] = {
				0.74509803921569, -- [1]
				0.74509803921569, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["displayText"] = "%c",
			["customText"] = "function ()\n    local versatility = GetCombatRating(CR_VERSATILITY_DAMAGE_DONE);\n    local versatilityDamageBonus = GetCombatRatingBonus(CR_VERSATILITY_DAMAGE_DONE) + GetVersatilityBonus(CR_VERSATILITY_DAMAGE_DONE);\n    local versatilityDamageTakenReduction = GetCombatRatingBonus(CR_VERSATILITY_DAMAGE_TAKEN) + GetVersatilityBonus(CR_VERSATILITY_DAMAGE_TAKEN);\n    \n    return \"Vers: \" .. string.format(\"%.2f\", versatilityDamageBonus) .. \"% / \" .. string.format(\"%.2f%%\", versatilityDamageTakenReduction) .. \"\"\nend",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["model_x"] = 0,
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "status",
						["use_alwaystrue"] = true,
						["subeventSuffix"] = "_CAST_START",
						["duration"] = "1",
						["genericShowOn"] = "showOnActive",
						["use_unit"] = true,
						["custom_hide"] = "timed",
						["names"] = {
						},
						["spellIds"] = {
						},
						["unit"] = "player",
						["event"] = "Conditions",
						["subeventPrefix"] = "SPELL",
						["unevent"] = "auto",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["advance"] = false,
			["model_path"] = "Creature/Arthaslichking/arthaslichking.m2",
			["rotation"] = 0,
			["font"] = "FORCED SQUARE",
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["height"] = 15.316210746765,
			["wordWrap"] = "WordWrap",
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["fontSize"] = 20,
			["sequence"] = 1,
			["selfPoint"] = "BOTTOMLEFT",
			["scale"] = 1,
			["parent"] = "Stats",
			["border"] = false,
			["borderEdge"] = "None",
			["regionType"] = "text",
			["borderSize"] = 16,
			["shadowYOffset"] = -1,
			["conditions"] = {
			},
			["shadowXOffset"] = 1,
			["uid"] = "dNsJ3xx0lb9",
			["model_z"] = 0,
			["justify"] = "LEFT",
			["authorOptions"] = {
			},
			["id"] = "Versatility",
			["model_y"] = 0,
			["frameStrata"] = 4,
			["anchorFrameType"] = "SCREEN",
			["width"] = 154.2564239502,
			["config"] = {
			},
			["borderOffset"] = 5,
			["borderInset"] = 11,
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["fixedWidth"] = 200,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["xOffset"] = 0,
		},
		["WAYC: Spirited Defense"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 265368,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["subeventPrefix"] = "SPELL",
						["debuffType"] = "HELPFUL",
						["name"] = "Spirited Defense",
						["names"] = {
							"Spirited Defense", -- [1]
						},
						["unit"] = "multi",
						["use_specific_unit"] = false,
						["spellIds"] = {
							265368, -- [1]
						},
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "k07cQfTrZyF",
			["id"] = "WAYC: Spirited Defense",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = "135779",
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["STRM: Tidal Surge"] = {
			["iconSource"] = 0,
			["xOffset"] = 0,
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 267977,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Tidal Surge", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							267977, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Tidal Surge",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["custom_type"] = "event",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["subeventSuffix"] = "_CAST_START",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["stickyDuration"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Friz Quadrata TT",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 12,
					["anchorXOffset"] = 0,
					["text_visible"] = false,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["use_size"] = false,
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["race"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
			["parent"] = "M+ - Purgeable Buffs",
			["zoom"] = 0,
			["cooldownTextDisabled"] = false,
			["auto"] = false,
			["uid"] = "zUjcKt1Zisi",
			["id"] = "STRM: Tidal Surge",
			["width"] = 35,
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["desaturate"] = false,
			["displayIcon"] = 538567,
			["cooldown"] = true,
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
		},
		["RIP PATRICK"] = {
			["outline"] = "OUTLINE",
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["displayText"] = " ",
			["shadowYOffset"] = -1,
			["anchorPoint"] = "CENTER",
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["use_absorbMode"] = true,
						["unit"] = "player",
						["custom_hide"] = "custom",
						["type"] = "custom",
						["unevent"] = "timed",
						["debuffType"] = "HELPFUL",
						["names"] = {
						},
						["event"] = "Combat Log",
						["dynamicDuration"] = false,
						["buffShowOn"] = "showOnActive",
						["use_unit"] = true,
						["events"] = "PARTY_LEADER_CHANGED",
						["custom"] = "function()\n    if UnitIsGroupLeader(UnitName(\"player\")) then \n        \n        if UnitInParty(\"Rngèsus\") then\n            PromoteToLeader(UnitName(\"Rngèsus\"))\n        elseif UnitInParty(\"Supernurse\") then\n            PromoteToLeader(UnitName(\"Supernurse\"))\n        elseif UnitInParty(\"Divinenurse\") then\n            PromoteToLeader(UnitName(\"Divinenurse\"))\n        end\n    else\n        return false\n    end\nend\n\n\n\n\n\n\n\n\n\n",
						["spellIds"] = {
						},
						["subeventPrefix"] = "SPELL",
						["custom_type"] = "event",
						["subeventSuffix"] = "_CAST_START",
					},
					["untrigger"] = {
						["custom"] = "function()\nreturn true\nend",
					},
				}, -- [1]
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["wordWrap"] = "WordWrap",
			["font"] = "Friz Quadrata TT",
			["load"] = {
				["spec"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["use_never"] = true,
				["size"] = {
					["multi"] = {
					},
				},
			},
			["fontSize"] = 12,
			["shadowXOffset"] = 1,
			["regionType"] = "text",
			["xOffset"] = 0,
			["selfPoint"] = "BOTTOM",
			["justify"] = "LEFT",
			["uid"] = "a5OvdioZJbk",
			["id"] = "RIP PATRICK",
			["parent"] = "A Kureq UI Customizations",
			["frameStrata"] = 1,
			["anchorFrameType"] = "SCREEN",
			["fixedWidth"] = 200,
			["config"] = {
			},
			["yOffset"] = 0,
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["conditions"] = {
			},
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["authorOptions"] = {
			},
		},
		["Crit"] = {
			["outline"] = "OUTLINE",
			["modelIsUnit"] = false,
			["borderBackdrop"] = "Blizzard Tooltip",
			["xOffset"] = 0,
			["displayText"] = "%c",
			["customText"] = "function ()\n    local critPercent = GetSpellCritChance(2);\n    \n    return \"Crit: \" .. string.format(\"%.1f\", critPercent) .. \"%\"\nend",
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["model_x"] = 0,
			["borderColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["customTextUpdate"] = "update",
			["automaticWidth"] = "Auto",
			["actions"] = {
				["start"] = {
				},
				["finish"] = {
				},
				["init"] = {
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "status",
						["use_alwaystrue"] = true,
						["subeventSuffix"] = "_CAST_START",
						["duration"] = "1",
						["genericShowOn"] = "showOnActive",
						["use_unit"] = true,
						["custom_hide"] = "timed",
						["names"] = {
						},
						["spellIds"] = {
						},
						["unit"] = "player",
						["event"] = "Conditions",
						["subeventPrefix"] = "SPELL",
						["unevent"] = "auto",
						["debuffType"] = "HELPFUL",
					},
					["untrigger"] = {
					},
				}, -- [1]
				["disjunctive"] = "all",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["advance"] = false,
			["model_path"] = "Creature/Arthaslichking/arthaslichking.m2",
			["rotation"] = 0,
			["font"] = "FORCED SQUARE",
			["selfPoint"] = "BOTTOMLEFT",
			["height"] = 15.316210746765,
			["animation"] = {
				["start"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["duration_type"] = "seconds",
					["type"] = "none",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["affixes"] = {
					["multi"] = {
					},
				},
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["talent3"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["class"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["multi"] = {
					},
				},
			},
			["backdropColor"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0.5, -- [4]
			},
			["fontSize"] = 20,
			["sequence"] = 1,
			["parent"] = "Stats",
			["scale"] = 1,
			["wordWrap"] = "WordWrap",
			["border"] = false,
			["borderEdge"] = "None",
			["regionType"] = "text",
			["borderSize"] = 16,
			["shadowYOffset"] = -1,
			["conditions"] = {
			},
			["shadowXOffset"] = 1,
			["uid"] = "CVuEJXqZmsC",
			["borderOffset"] = 5,
			["justify"] = "LEFT",
			["authorOptions"] = {
			},
			["id"] = "Crit",
			["model_y"] = 0,
			["frameStrata"] = 4,
			["anchorFrameType"] = "SCREEN",
			["width"] = 84.239303588867,
			["config"] = {
			},
			["model_z"] = 0,
			["borderInset"] = 11,
			["shadowColor"] = {
				0, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
			["fixedWidth"] = 200,
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["color"] = {
				0.97647058823529, -- [1]
				0, -- [2]
				0, -- [3]
				1, -- [4]
			},
		},
		["TOLD: Inner Flames"] = {
			["iconSource"] = 0,
			["authorOptions"] = {
			},
			["yOffset"] = 0,
			["anchorPoint"] = "CENTER",
			["cooldownSwipe"] = true,
			["customTextUpdate"] = "update",
			["cooldownEdge"] = false,
			["actions"] = {
				["start"] = {
					["custom"] = "aura_env.flag = true",
					["do_custom"] = true,
				},
				["finish"] = {
				},
				["init"] = {
					["custom"] = "aura_env.anchorFunc = function()\n    for k, region in pairs(WeakAuras.clones[aura_env.id]) do\n        if region.toShow then\n            local unit\n            for i = 1, 40 do\n                local u = \"nameplate\"..i\n                if region.state.GUID and region.state.GUID == UnitGUID(u) then\n                    unit = u\n                    break\n                end\n            end\n            if unit then\n                local plate = C_NamePlate.GetNamePlateForUnit(unit)\n                if plate then\n                    region:ClearAllPoints()\n                    region:SetPoint(\"BOTTOM\", plate, \"LEFT\", -15, -10) -- Adjust location of nameplate icon by changing \"LEFT\" to another direction AND/OR adjusting the x and y axes (-15, -10 by default).\n                    region:Show()\n                else\n                    region:Hide()\n                end\n            else\n                region:Hide()\n            end\n        end\n    end\nend",
					["do_custom"] = true,
				},
			},
			["triggers"] = {
				{
					["trigger"] = {
						["type"] = "aura",
						["spellId"] = 258938,
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Health",
						["names"] = {
							"Inner Flames", -- [1]
						},
						["debuffType"] = "HELPFUL",
						["spellIds"] = {
							258938, -- [1]
						},
						["use_specific_unit"] = false,
						["unit"] = "multi",
						["name"] = "Inner Flames",
						["subeventPrefix"] = "SPELL",
						["buffShowOn"] = "showOnActive",
					},
					["untrigger"] = {
					},
				}, -- [1]
				{
					["trigger"] = {
						["type"] = "custom",
						["subeventSuffix"] = "_CAST_START",
						["event"] = "Chat Message",
						["subeventPrefix"] = "SPELL",
						["events"] = "NAME_PLATE_UNIT_ADDED NAME_PLATE_UNIT_REMOVED FRAME_UPDATE",
						["unevent"] = "auto",
						["custom"] = "function(event)\n    if (event == \"FRAME_UPDATE\" and aura_env.flag) \n    or event == \"NAME_PLATE_UNIT_ADDED\" \n    or event == \"NAME_PLATE_UNIT_REMOVED\"\n    then\n        --print(event)\n        aura_env.flag = false\n        aura_env.anchorFunc()\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["genericShowOn"] = "showOnActive",
						["custom_type"] = "event",
						["custom_hide"] = "custom",
					},
					["untrigger"] = {
					},
				}, -- [2]
				["disjunctive"] = "any",
				["customTriggerLogic"] = "function(t)\n    --aura_env.flag = true\n    return t[1]\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				["activeTriggerMode"] = -10,
			},
			["internalVersion"] = 40,
			["keepAspectRatio"] = false,
			["animation"] = {
				["start"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["main"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
				["finish"] = {
					["type"] = "none",
					["duration_type"] = "seconds",
					["easeStrength"] = 3,
					["easeType"] = "none",
				},
			},
			["desaturate"] = false,
			["subRegions"] = {
				{
					["text_shadowXOffset"] = 0,
					["text_text_format_s_format"] = "none",
					["text_text"] = "%s",
					["text_shadowColor"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["text_selfPoint"] = "AUTO",
					["text_automaticWidth"] = "Auto",
					["text_fixedWidth"] = 64,
					["anchorYOffset"] = 0,
					["text_justify"] = "CENTER",
					["rotateText"] = "NONE",
					["type"] = "subtext",
					["text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["text_font"] = "Accidental Presidency",
					["text_shadowYOffset"] = 0,
					["text_wordWrap"] = "WordWrap",
					["text_fontType"] = "OUTLINE",
					["text_anchorPoint"] = "INNER_BOTTOMRIGHT",
					["text_fontSize"] = 16,
					["anchorXOffset"] = 0,
					["text_visible"] = true,
				}, -- [1]
			},
			["height"] = 35,
			["load"] = {
				["ingroup"] = {
					["multi"] = {
					},
				},
				["use_never"] = false,
				["talent"] = {
					["multi"] = {
					},
				},
				["spec"] = {
					["multi"] = {
					},
				},
				["use_size"] = false,
				["talent2"] = {
					["multi"] = {
					},
				},
				["difficulty"] = {
					["multi"] = {
						["mythic"] = true,
					},
				},
				["race"] = {
					["multi"] = {
					},
				},
				["pvptalent"] = {
					["multi"] = {
					},
				},
				["faction"] = {
					["multi"] = {
					},
				},
				["role"] = {
					["multi"] = {
					},
				},
				["use_difficulty"] = false,
				["class"] = {
					["multi"] = {
					},
				},
				["size"] = {
					["single"] = "party",
					["multi"] = {
						["scenario"] = true,
						["party"] = true,
					},
				},
			},
			["icon"] = true,
			["conditions"] = {
			},
			["regionType"] = "icon",
			["selfPoint"] = "CENTER",
			["information"] = {
				["ignoreOptionsEventErrors"] = true,
			},
			["color"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["parent"] = "M+ - Purgeable Buffs",
			["cooldownTextDisabled"] = false,
			["zoom"] = 0,
			["auto"] = false,
			["uid"] = "eSzbxOS3xRP",
			["id"] = "TOLD: Inner Flames",
			["anchorFrameType"] = "SCREEN",
			["alpha"] = 1,
			["width"] = 35,
			["frameStrata"] = 1,
			["config"] = {
			},
			["inverse"] = false,
			["stickyDuration"] = false,
			["displayIcon"] = 135926,
			["cooldown"] = true,
			["xOffset"] = 0,
		},
	},
	["login_squelch_time"] = 10,
	["mousePointerFrame"] = {
		["xOffset"] = -8.999755859375,
		["yOffset"] = -858.998870849609,
	},
	["lastArchiveClear"] = 1595449326,
	["minimap"] = {
		["hide"] = true,
	},
	["lastUpgrade"] = 1607063636,
	["dbVersion"] = 40,
	["personalRessourceDisplayFrame"] = {
		["xOffset"] = -922.795138663916,
		["yOffset"] = -630.092929290217,
	},
	["editor_bracket_matching"] = true,
	["registered"] = {
	},
	["frame"] = {
		["xOffset"] = -1178.17431640625,
		["width"] = 1020.999755859375,
		["height"] = 584.0009155273438,
		["yOffset"] = -131.5555419921875,
	},
	["editor_theme"] = "Monokai",
}
